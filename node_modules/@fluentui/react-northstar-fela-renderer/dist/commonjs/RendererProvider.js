"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.RendererProvider = void 0;
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));
var _felaDom = require("fela-dom");
var React = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// Copied from https://github.com/robinweser/fela/blob/master/packages/fela-bindings/src/RendererProviderFactory.js

function hasDOM(renderer, targetDocument) {
  // ensure we're on a browser by using document since window is defined in e.g. React Native
  // see https://github.com/robinweser/fela/issues/736
  if (typeof document === 'undefined') {
    return false;
  }
  var doc = targetDocument || document;
  return renderer && doc && doc.createElement;
}
function hasServerRenderedStyle(targetDocument) {
  if (targetDocument === void 0) {
    targetDocument = document;
  }
  return targetDocument.querySelectorAll('[data-fela-type]').length > 0;
}

// Typings provided by "fela" package are outdated, this overrides provides proper definition
var RendererProvider = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(RendererProvider, _React$Component);
  function RendererProvider(props) {
    var _this;
    _this = _React$Component.call(this, props) || this;
    _this._renderStyle();
    return _this;
  }
  var _proto = RendererProvider.prototype;
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (prevProps.renderer !== this.props.renderer) {
      // add warning that renderer is changed
      this._renderStyle();
    }
  };
  _proto._renderStyle = function _renderStyle() {
    var _this$props = this.props,
      renderer = _this$props.renderer,
      shouldRehydrate = _this$props.rehydrate,
      targetDocument = _this$props.targetDocument;
    if (hasDOM(renderer, targetDocument)) {
      if (shouldRehydrate && hasServerRenderedStyle(targetDocument)) {
        (0, _felaDom.rehydrate)(renderer, targetDocument);
      } else {
        (0, _felaDom.render)(renderer, targetDocument);
      }
    }
  };
  _proto.render = function render() {
    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.children);
  };
  return RendererProvider;
}(React.Component);
exports.RendererProvider = RendererProvider;
//# sourceMappingURL=RendererProvider.js.map
