{"version":3,"file":"index.js","names":["_codes","require","isObject","val","Array","isArray","getCode","eventOrKey","keyCode","which","keyboardKey","key","getKey","eventOrCode","isEvent","event","name","codes","shiftKey","exports","code","hasOwnProperty","value","Number","i","length","SpacebarKey","Digit0Key","Digit1Key","Digit2Key","Digit3Key","Digit4Key","Digit5Key","Digit6Key","Digit7Key","Digit8Key","Digit9Key","TildeKey","GraveAccentKey","ExclamationPointKey","AtSignKey","PoundSignKey","PercentSignKey","CaretKey","AmpersandKey","PlusSignKey","MinusSignKey","EqualsSignKey","DivisionSignKey","MultiplicationSignKey","CommaKey","DecimalKey","ColonKey","SemicolonKey","PipeKey","BackSlashKey","QuestionMarkKey","SingleQuoteKey","DoubleQuoteKey","LeftCurlyBraceKey","RightCurlyBraceKey","LeftParenthesisKey","RightParenthesisKey","LeftAngleBracketKey","RightAngleBracketKey","LeftSquareBracketKey","RightSquareBracketKey","ArrowDownKey","ArrowDown","ArrowLeftKey","ArrowLeft","ArrowRightKey","ArrowRight","ArrowUpKey","ArrowUp","EndKey","End","EnterKey","Enter","HomeKey","Home","PageDownKey","PageDown","PageUpKey","PageUp","TabKey","Tab"],"sources":["keyboard-key/index.ts"],"sourcesContent":["import { codes } from './codes';\n\nexport type KeyboardEventLike = Pick<KeyboardEvent, 'key' | 'keyCode' | 'which' | 'shiftKey'>;\n\nexport interface KeyNames {\n  Cancel: 3;\n  Help: 6;\n  Backspace: 8;\n  Tab: 9;\n  Clear: 12;\n  Enter: 13;\n  Shift: 16;\n  Control: 17;\n  Alt: 18;\n  Pause: 19;\n  CapsLock: 20;\n  Escape: 27;\n  Convert: 28;\n  NonConvert: 29;\n  Accept: 30;\n  ModeChange: 31;\n  ' ': 32;\n  PageUp: 33;\n  PageDown: 34;\n  End: 35;\n  Home: 36;\n  ArrowLeft: 37;\n  ArrowUp: 38;\n  ArrowRight: 39;\n  ArrowDown: 40;\n  Select: 41;\n  Print: 42;\n  Execute: 43;\n  PrintScreen: 44;\n  Insert: 45;\n  Delete: 46;\n  0: 48;\n  ')': 48;\n  1: 49;\n  '!': 49;\n  2: 50;\n  '@': 50;\n  3: 51;\n  '#': 51;\n  4: 52;\n  $: 52;\n  5: 53;\n  '%': 53;\n  6: 54;\n  '^': 54;\n  7: 55;\n  '&': 55;\n  8: 56;\n  '*': 56;\n  9: 57;\n  '(': 57;\n  a: 65;\n  A: 65;\n  b: 66;\n  B: 66;\n  c: 67;\n  C: 67;\n  d: 68;\n  D: 68;\n  e: 69;\n  E: 69;\n  f: 70;\n  F: 70;\n  g: 71;\n  G: 71;\n  h: 72;\n  H: 72;\n  i: 73;\n  I: 73;\n  j: 74;\n  J: 74;\n  k: 75;\n  K: 75;\n  l: 76;\n  L: 76;\n  m: 77;\n  M: 77;\n  n: 78;\n  N: 78;\n  o: 79;\n  O: 79;\n  p: 80;\n  P: 80;\n  q: 81;\n  Q: 81;\n  r: 82;\n  R: 82;\n  s: 83;\n  S: 83;\n  t: 84;\n  T: 84;\n  u: 85;\n  U: 85;\n  v: 86;\n  V: 86;\n  w: 87;\n  W: 87;\n  x: 88;\n  X: 88;\n  y: 89;\n  Y: 89;\n  z: 90;\n  Z: 90;\n  OS: 91;\n  ContextMenu: 93;\n  F1: 112;\n  F2: 113;\n  F3: 114;\n  F4: 115;\n  F5: 116;\n  F6: 117;\n  F7: 118;\n  F8: 119;\n  F9: 120;\n  F10: 121;\n  F11: 122;\n  F12: 123;\n  F13: 124;\n  F14: 125;\n  F15: 126;\n  F16: 127;\n  F17: 128;\n  F18: 129;\n  F19: 130;\n  F20: 131;\n  F21: 132;\n  F22: 133;\n  F23: 134;\n  F24: 135;\n  NumLock: 144;\n  ScrollLock: 145;\n  VolumeMute: 181;\n  VolumeDown: 182;\n  VolumeUp: 183;\n  ';': 186;\n  ':': 186;\n  '=': 187;\n  '+': 187;\n  ',': 188;\n  '<': 188;\n  '-': 189;\n  _: 189;\n  '.': 190;\n  '>': 190;\n  '/': 191;\n  '?': 191;\n  '`': 192;\n  '~': 192;\n  '[': 219;\n  '{': 219;\n  '\\\\': 220;\n  '|': 220;\n  ']': 221;\n  '}': 221;\n  \"'\": 222;\n  '\"': 222;\n  Meta: 224;\n  AltGraph: 225;\n  Attn: 246;\n  CrSel: 247;\n  ExSel: 248;\n  EraseEof: 249;\n  Play: 250;\n  ZoomOut: 251;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (val: any): val is KeyboardEventLike => {\n  return val !== null && !Array.isArray(val) && typeof val === 'object';\n};\n\n/**\n * Get the `keyCode` or `which` value from a keyboard event or `key` name.\n * If an object is provided, the precedence of properties is `keyCode`, `which`, `key`.\n * @param eventOrKey - A keyboard event-like object or `key` name. If an object, at least one of\n * `key`, `keyCode`, or `which` must be defined.\n */\nexport function getCode(eventOrKey: Partial<KeyboardEventLike> | string): number | undefined {\n  if (isObject(eventOrKey)) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return eventOrKey.keyCode || eventOrKey.which || (keyboardKey as any)[eventOrKey.key as string];\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (keyboardKey as any)[eventOrKey as string];\n}\n\n/**\n * Get the key name from a keyboard event, `keyCode`, or `which` value.\n * If an object is provided, the precedence of properties is `key`, `keyCode`, `which`.\n * @param eventOrCode - A keyboard event-like object or key code. If an object, at least one of\n * `key`, `keyCode`, or `which` must be defined.\n */\nexport function getKey(eventOrCode: Partial<KeyboardEventLike> | number): string | undefined {\n  const isEvent = isObject(eventOrCode);\n  const event = eventOrCode as KeyboardEventLike;\n\n  // handle events with a `key` already defined\n  if (isEvent && event.key) {\n    return event.key;\n  }\n\n  let name = codes[(isEvent ? event.keyCode || event.which : eventOrCode) as number];\n\n  if (Array.isArray(name)) {\n    if (isEvent) {\n      name = name[event.shiftKey ? 1 : 0];\n    } else {\n      name = name[0];\n    }\n  }\n\n  return name;\n}\n\n/**\n * Mapping of keyboard keys with aliases and codes.\n */\nexport const keyboardKey = {} as KeyNames;\n\n// Populate names on keyboardKey.\nfor (const code in codes) {\n  if (codes.hasOwnProperty(code)) {\n    const value = codes[code];\n    if (typeof value === 'string') {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (keyboardKey as any)[value] = Number(code);\n    } else {\n      // Array of valid values which map to the same code.\n      for (let i = 0; i < value.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (keyboardKey as any)[value[i]] = Number(code);\n      }\n    }\n  }\n}\n\n// As single exports for keys that normally have special functionality attached to them.\nexport const SpacebarKey = keyboardKey[' '];\nexport const Digit0Key = keyboardKey['0'];\nexport const Digit1Key = keyboardKey['1'];\nexport const Digit2Key = keyboardKey['2'];\nexport const Digit3Key = keyboardKey['3'];\nexport const Digit4Key = keyboardKey['4'];\nexport const Digit5Key = keyboardKey['5'];\nexport const Digit6Key = keyboardKey['6'];\nexport const Digit7Key = keyboardKey['7'];\nexport const Digit8Key = keyboardKey['8'];\nexport const Digit9Key = keyboardKey['9'];\nexport const TildeKey = keyboardKey['~'];\nexport const GraveAccentKey = keyboardKey['`'];\nexport const ExclamationPointKey = keyboardKey['!'];\nexport const AtSignKey = keyboardKey['@'];\nexport const PoundSignKey = keyboardKey['#'];\nexport const PercentSignKey = keyboardKey['%'];\nexport const CaretKey = keyboardKey['^'];\nexport const AmpersandKey = keyboardKey['&'];\nexport const PlusSignKey = keyboardKey['+'];\nexport const MinusSignKey = keyboardKey['-'];\nexport const EqualsSignKey = keyboardKey['='];\nexport const DivisionSignKey = keyboardKey['/'];\nexport const MultiplicationSignKey = keyboardKey['*'];\nexport const CommaKey = keyboardKey[','];\nexport const DecimalKey = keyboardKey['.'];\nexport const ColonKey = keyboardKey[':'];\nexport const SemicolonKey = keyboardKey[';'];\nexport const PipeKey = keyboardKey['|'];\nexport const BackSlashKey = keyboardKey['\\\\'];\nexport const QuestionMarkKey = keyboardKey['?'];\nexport const SingleQuoteKey = keyboardKey[\"'\"];\nexport const DoubleQuoteKey = keyboardKey['\"'];\nexport const LeftCurlyBraceKey = keyboardKey['{'];\nexport const RightCurlyBraceKey = keyboardKey['}'];\nexport const LeftParenthesisKey = keyboardKey['('];\nexport const RightParenthesisKey = keyboardKey[')'];\nexport const LeftAngleBracketKey = keyboardKey['<'];\nexport const RightAngleBracketKey = keyboardKey['>'];\nexport const LeftSquareBracketKey = keyboardKey['['];\nexport const RightSquareBracketKey = keyboardKey[']'];\nexport const ArrowDownKey = keyboardKey.ArrowDown;\nexport const ArrowLeftKey = keyboardKey.ArrowLeft;\nexport const ArrowRightKey = keyboardKey.ArrowRight;\nexport const ArrowUpKey = keyboardKey.ArrowUp;\nexport const EndKey = keyboardKey.End;\nexport const EnterKey = keyboardKey.Enter;\nexport const HomeKey = keyboardKey.Home;\nexport const PageDownKey = keyboardKey.PageDown;\nexport const PageUpKey = keyboardKey.PageUp;\nexport const TabKey = keyboardKey.Tab;\n"],"mappings":"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"}