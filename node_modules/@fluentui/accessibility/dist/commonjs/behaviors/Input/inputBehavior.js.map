{"version":3,"file":"inputBehavior.js","names":["_keyboardKey","require","inputBehavior","props","attributes","input","Object","assign","disabled","required","error","keyActions","clear","keyCombinations","keyCode","keyboardKey","Escape","exports"],"sources":["behaviors/Input/inputBehavior.ts"],"sourcesContent":["import { Accessibility } from '../../types';\nimport { keyboardKey } from '../../keyboard-key';\n\n/**\n * @specification\n * Adds attribute 'aria-disabled=true' based on the property 'disabled' to 'input' slot.\n * Adds attribute 'aria-required=true' based on the property 'required' to 'input' slot.\n * Adds attribute 'aria-invalid=true' based on the property 'error' to 'input' slot.\n * Triggers 'clear' action with 'Escape' on 'input'.\n */\nexport const inputBehavior: Accessibility<InputBehaviorProps> = props => ({\n  attributes: {\n    input: {\n      'aria-disabled': props.disabled,\n      ...(props.required && { 'aria-required': true }),\n      ...(props.error && { 'aria-invalid': true }),\n    },\n  },\n  keyActions: {\n    input: {\n      clear: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport type InputBehaviorProps = {\n  disabled?: boolean;\n  required?: boolean;\n  error?: boolean;\n};\n"],"mappings":";;;;AACA,IAAAA,YAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,aAAgD,GAAG,SAAnDA,aAAgDA,CAAGC,KAAK;EAAA,OAAK;IACxEC,UAAU,EAAE;MACVC,KAAK,EAAAC,MAAA,CAAAC,MAAA;QACH,eAAe,EAAEJ,KAAK,CAACK;MAAQ,GAC3BL,KAAK,CAACM,QAAQ,IAAI;QAAE,eAAe,EAAE;MAAK,CAAC,EAC3CN,KAAK,CAACO,KAAK,IAAI;QAAE,cAAc,EAAE;MAAK,CAAC;IAE/C,CAAC;IACDC,UAAU,EAAE;MACVN,KAAK,EAAE;QACLO,KAAK,EAAE;UACLC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACC;UAAO,CAAC;QACnD;MACF;IACF;EACF,CAAC;AAAA,CAAC;AAACC,OAAA,CAAAf,aAAA,GAAAA,aAAA"}