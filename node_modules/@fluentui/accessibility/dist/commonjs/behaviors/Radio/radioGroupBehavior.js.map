{"version":3,"file":"radioGroupBehavior.js","names":["_keyboardKey","require","radioGroupBehavior","attributes","root","role","keyActions","nextItem","keyCombinations","keyCode","keyboardKey","ArrowDown","ArrowRight","prevItem","ArrowUp","ArrowLeft","exports"],"sources":["behaviors/Radio/radioGroupBehavior.ts"],"sourcesContent":["import { keyboardKey } from '../../keyboard-key';\nimport { Accessibility } from '../../types';\n\n/**\n * @description\n * Implements ARIA Radio Group design pattern.\n * @specification\n *  Adds role='radiogroup'. This allows screen readers to handle the component as a radio group.\n *  Triggers 'nextItem' action with 'ArrowDown' or 'ArrowRight' on 'root'.\n *  Triggers 'prevItem' action with 'ArrowUp' or 'ArrowLeft' on 'root'.\n */\nexport const radioGroupBehavior: Accessibility<RadioGroupBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'radiogroup',\n    },\n  },\n\n  keyActions: {\n    root: {\n      nextItem: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowDown }, { keyCode: keyboardKey.ArrowRight }],\n      },\n      prevItem: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowUp }, { keyCode: keyboardKey.ArrowLeft }],\n      },\n    },\n  },\n});\n\nexport type RadioGroupBehaviorProps = never;\n"],"mappings":";;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,kBAA0D,GAAG,SAA7DA,kBAA0DA,CAAA;EAAA,OAAU;IAC/EC,UAAU,EAAE;MACVC,IAAI,EAAE;QACJC,IAAI,EAAE;MACR;IACF,CAAC;IAEDC,UAAU,EAAE;MACVF,IAAI,EAAE;QACJG,QAAQ,EAAE;UACRC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACC;UAAU,CAAC,EAAE;YAAEF,OAAO,EAAEC,wBAAW,CAACE;UAAW,CAAC;QAC3F,CAAC;QACDC,QAAQ,EAAE;UACRL,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACI;UAAQ,CAAC,EAAE;YAAEL,OAAO,EAAEC,wBAAW,CAACK;UAAU,CAAC;QACxF;MACF;IACF;EACF,CAAC;AAAA,CAAC;AAACC,OAAA,CAAAd,kBAAA,GAAAA,kBAAA"}