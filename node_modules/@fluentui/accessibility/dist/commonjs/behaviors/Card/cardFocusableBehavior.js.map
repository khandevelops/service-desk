{"version":3,"file":"cardFocusableBehavior.js","names":["_keyboardKey","require","_attributes","cardFocusableBehavior","props","_root","attributes","root","role","tabIndex","IS_FOCUSABLE_ATTRIBUTE","disabled","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","SpacebarKey","exports"],"sources":["behaviors/Card/cardFocusableBehavior.ts"],"sourcesContent":["import { Accessibility } from '../../types';\nimport { CardBehaviorProps } from './cardBehavior';\nimport { keyboardKey, SpacebarKey } from '../../keyboard-key';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\n\n/**\n * @description\n * Behavior for a focusable card component\n * @specification\n * Adds role='group'.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\nexport const cardFocusableBehavior: Accessibility<CardBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'group',\n      tabIndex: 0,\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      'aria-disabled': props.disabled,\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n    },\n  },\n});\n"],"mappings":";;;;AAEA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAME,qBAAuD,GAAG,SAA1DA,qBAAuDA,CAAGC,KAAK;EAAA,IAAAC,KAAA;EAAA,OAAK;IAC/EC,UAAU,EAAE;MACVC,IAAI,GAAAF,KAAA;QACFG,IAAI,EAAE,OAAO;QACbC,QAAQ,EAAE;MAAC,GAAAJ,KAAA,CACVK,kCAAsB,IAAG,IAAI,EAAAL,KAAA,CAC9B,eAAe,IAAED,KAAK,CAACO,QAAQ,EAAAN,KAAA;IAEnC,CAAC;IACDO,UAAU,EAAE;MACVL,IAAI,EAAE;QACJM,YAAY,EAAE;UACZC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACC;UAAM,CAAC,EAAE;YAAEF,OAAO,EAAEG;UAAY,CAAC;QAC5E;MACF;IACF;EACF,CAAC;AAAA,CAAC;AAACC,OAAA,CAAAhB,qBAAA,GAAAA,qBAAA"}