{"version":3,"file":"accordionBehavior.js","names":["_keyboardKey","require","accordionBehavior","attributes","root","role","keyActions","moveNext","keyCombinations","keyCode","keyboardKey","ArrowDown","movePrevious","ArrowUp","moveFirst","Home","moveLast","End","exports"],"sources":["behaviors/Accordion/accordionBehavior.ts"],"sourcesContent":["import { keyboardKey } from '../../keyboard-key';\nimport { Accessibility } from '../../types';\n\n/**\n * @specification\n * Adds attribute 'role=presentation' to 'root' slot.\n * Triggers 'moveNext' action with 'ArrowDown' on 'root'.\n * Triggers 'movePrevious' action with 'ArrowUp' on 'root'.\n * Triggers 'moveFirst' action with 'Home' on 'root'.\n * Triggers 'moveLast' action with 'End' on 'root'.\n */\nexport const accordionBehavior: Accessibility<AccordionBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'presentation',\n    },\n  },\n  keyActions: {\n    root: {\n      moveNext: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowDown }],\n      },\n      movePrevious: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowUp }],\n      },\n      moveFirst: {\n        keyCombinations: [{ keyCode: keyboardKey.Home }],\n      },\n      moveLast: {\n        keyCombinations: [{ keyCode: keyboardKey.End }],\n      },\n    },\n  },\n});\n\nexport type AccordionBehaviorProps = never;\n"],"mappings":";;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,iBAAwD,GAAG,SAA3DA,iBAAwDA,CAAA;EAAA,OAAU;IAC7EC,UAAU,EAAE;MACVC,IAAI,EAAE;QACJC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,UAAU,EAAE;MACVF,IAAI,EAAE;QACJG,QAAQ,EAAE;UACRC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACC;UAAU,CAAC;QACtD,CAAC;QACDC,YAAY,EAAE;UACZJ,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACG;UAAQ,CAAC;QACpD,CAAC;QACDC,SAAS,EAAE;UACTN,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACK;UAAK,CAAC;QACjD,CAAC;QACDC,QAAQ,EAAE;UACRR,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACO;UAAI,CAAC;QAChD;MACF;IACF;EACF,CAAC;AAAA,CAAC;AAACC,OAAA,CAAAhB,iBAAA,GAAAA,iBAAA"}