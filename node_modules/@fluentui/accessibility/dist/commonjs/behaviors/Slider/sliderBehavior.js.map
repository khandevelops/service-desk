{"version":3,"file":"sliderBehavior.js","names":["sliderBehavior","props","attributes","root","disabled","input","vertical","min","max","value","getA11yValueMessageOnChange","exports"],"sources":["behaviors/Slider/sliderBehavior.ts"],"sourcesContent":["import { Accessibility } from '../../types';\n\n/**\n * @description\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'.\n * Adds attribute 'aria-orientation=vertical' or 'horizontal' based on the property 'vertical'.\n * Adds attribute 'aria-valuemin' with value based on the property 'min'.\n * Adds attribute 'aria-valuemax' with value based on the property 'max'.\n * Adds attribute 'aria-valuenow' with value based on the property 'value'.\n * Adds attribute 'aria-valuetext' with value based on the callback function 'getA11yValueMessageOnChange'.\n */\nexport const sliderBehavior: Accessibility<SliderBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      'aria-disabled': props.disabled,\n    },\n    input: {\n      'aria-orientation': props.vertical ? 'vertical' : 'horizontal',\n      'aria-valuemin': props.min,\n      'aria-valuemax': props.max,\n      'aria-valuenow': props.value,\n      'aria-valuetext': props.getA11yValueMessageOnChange(props),\n    },\n  },\n});\n\nexport type SliderBehaviorProps = {\n  disabled?: boolean;\n  min?: number;\n  max?: number;\n  value?: number;\n  vertical?: boolean;\n  getA11yValueMessageOnChange?: (props: SliderBehaviorProps) => string;\n};\n"],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,cAAkD,GAAG,SAArDA,cAAkDA,CAAGC,KAAK;EAAA,OAAK;IAC1EC,UAAU,EAAE;MACVC,IAAI,EAAE;QACJ,eAAe,EAAEF,KAAK,CAACG;MACzB,CAAC;MACDC,KAAK,EAAE;QACL,kBAAkB,EAAEJ,KAAK,CAACK,QAAQ,GAAG,UAAU,GAAG,YAAY;QAC9D,eAAe,EAAEL,KAAK,CAACM,GAAG;QAC1B,eAAe,EAAEN,KAAK,CAACO,GAAG;QAC1B,eAAe,EAAEP,KAAK,CAACQ,KAAK;QAC5B,gBAAgB,EAAER,KAAK,CAACS,2BAA2B,CAACT,KAAK;MAC3D;IACF;EACF,CAAC;AAAA,CAAC;AAACU,OAAA,CAAAX,cAAA,GAAAA,cAAA"}