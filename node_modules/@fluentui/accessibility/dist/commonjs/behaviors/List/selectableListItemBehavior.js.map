{"version":3,"file":"selectableListItemBehavior.js","names":["_keyboardKey","require","_attributes","selectableListItemBehavior","props","_root","attributes","root","role","selected","IS_FOCUSABLE_ATTRIBUTE","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","SpacebarKey","exports"],"sources":["behaviors/List/selectableListItemBehavior.ts"],"sourcesContent":["import { keyboardKey, SpacebarKey } from '../../keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\nimport { ListItemBehaviorProps } from './listItemBehavior';\n\n/**\n * @specification\n * Adds role='option'. This role is used for a selectable item in a list.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Adds attribute 'aria-selected=true' based on the property 'selected'. Based on this screen readers will recognize the selected state of the item.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n */\nexport const selectableListItemBehavior: Accessibility<ListItemBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'option',\n      'aria-selected': !!props.selected,\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n    },\n  },\n});\n"],"mappings":";;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAEA,IAAAC,WAAA,GAAAD,OAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAME,0BAAgE,GAAG,SAAnEA,0BAAgEA,CAAGC,KAAK;EAAA,IAAAC,KAAA;EAAA,OAAK;IACxFC,UAAU,EAAE;MACVC,IAAI,GAAAF,KAAA;QACFG,IAAI,EAAE,QAAQ;QACd,eAAe,EAAE,CAAC,CAACJ,KAAK,CAACK;MAAQ,GAAAJ,KAAA,CAChCK,kCAAsB,IAAG,IAAI,EAAAL,KAAA;IAElC,CAAC;IACDM,UAAU,EAAE;MACVJ,IAAI,EAAE;QACJK,YAAY,EAAE;UACZC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACC;UAAM,CAAC,EAAE;YAAEF,OAAO,EAAEG;UAAY,CAAC;QAC5E;MACF;IACF;EACF,CAAC;AAAA,CAAC;AAACC,OAAA,CAAAf,0BAAA,GAAAA,0BAAA"}