{"version":3,"file":"tabBehavior.js","names":["_keyboardKey","require","_attributes","tabBehavior","props","_root","attributes","wrapper","role","root","tabIndex","active","IS_FOCUSABLE_ATTRIBUTE","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","SpacebarKey","exports"],"sources":["behaviors/Tab/tabBehavior.ts"],"sourcesContent":["import { keyboardKey, SpacebarKey } from '../../keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility, AccessibilityAttributes } from '../../types';\n\n/**\n * @specification\n * Adds role 'presentation' to 'wrapper' slot.\n * Adds role 'tab' to 'root' slot.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n * Adds attribute 'aria-selected=true' based on the property 'active'. This can be overriden by providing 'aria-selected' property directly to the component.\n * Adds attribute 'aria-label' based on the property 'aria-label' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Adds attribute 'aria-describedby' based on the property 'aria-describedby' to 'root' slot.\n * Adds attribute 'aria-controls' based on the property 'aria-controls' to 'root' slot.\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n */\nexport const tabBehavior: Accessibility<TabBehaviorProps> = props => ({\n  attributes: {\n    wrapper: {\n      role: 'presentation',\n      'data-tabs': 'true',\n    },\n    root: {\n      role: 'tab',\n      tabIndex: 0,\n      'aria-selected': !!props.active,\n      'aria-label': props['aria-label'],\n      'aria-labelledby': props['aria-labelledby'],\n      'aria-describedby': props['aria-describedby'],\n      'aria-controls': props['aria-controls'],\n      'aria-disabled': props['disabled'],\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n    },\n  },\n});\n\nexport type TabBehaviorProps = {\n  /** Indicates if tab is selected. */\n  active?: boolean;\n  /** Indicates if tab is disabled. */\n  disabled?: boolean;\n} & Pick<AccessibilityAttributes, 'aria-label' | 'aria-labelledby' | 'aria-describedby' | 'aria-controls'>;\n"],"mappings":";;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAEA,IAAAC,WAAA,GAAAD,OAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAME,WAA4C,GAAG,SAA/CA,WAA4CA,CAAGC,KAAK;EAAA,IAAAC,KAAA;EAAA,OAAK;IACpEC,UAAU,EAAE;MACVC,OAAO,EAAE;QACPC,IAAI,EAAE,cAAc;QACpB,WAAW,EAAE;MACf,CAAC;MACDC,IAAI,GAAAJ,KAAA;QACFG,IAAI,EAAE,KAAK;QACXE,QAAQ,EAAE,CAAC;QACX,eAAe,EAAE,CAAC,CAACN,KAAK,CAACO,MAAM;QAC/B,YAAY,EAAEP,KAAK,CAAC,YAAY,CAAC;QACjC,iBAAiB,EAAEA,KAAK,CAAC,iBAAiB,CAAC;QAC3C,kBAAkB,EAAEA,KAAK,CAAC,kBAAkB,CAAC;QAC7C,eAAe,EAAEA,KAAK,CAAC,eAAe,CAAC;QACvC,eAAe,EAAEA,KAAK,CAAC,UAAU;MAAC,GAAAC,KAAA,CACjCO,kCAAsB,IAAG,IAAI,EAAAP,KAAA;IAElC,CAAC;IAEDQ,UAAU,EAAE;MACVJ,IAAI,EAAE;QACJK,YAAY,EAAE;UACZC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACC;UAAM,CAAC,EAAE;YAAEF,OAAO,EAAEG;UAAY,CAAC;QAC5E;MACF;IACF;EACF,CAAC;AAAA,CAAC;AAACC,OAAA,CAAAjB,WAAA,GAAAA,WAAA"}