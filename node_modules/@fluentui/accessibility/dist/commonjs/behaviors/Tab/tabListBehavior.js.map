{"version":3,"file":"tabListBehavior.js","names":["_types","require","_tabBehavior","tabListBehavior","attributes","root","role","focusZone","props","shouldFocusInnerElementWhenReceivedFocus","direction","FocusZoneDirection","bidirectionalDomOrder","childBehaviors","item","tabBehavior","exports"],"sources":["behaviors/Tab/tabListBehavior.ts"],"sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { tabBehavior } from './tabBehavior';\n\n/**\n * @description\n * Implements ARIA Tabs design pattern.\n * Child item components need to have tabBehavior assigned.\n * @specification\n * Adds role 'tablist' to 'root' slot.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n */\nexport const tabListBehavior: Accessibility<TabListBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'tablist',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n  childBehaviors: {\n    item: tabBehavior,\n  },\n});\n\nexport type TabListBehaviorProps = never;\n"],"mappings":";;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAME,eAAoD,GAAG,SAAvDA,eAAoDA,CAAA;EAAA,OAAU;IACzEC,UAAU,EAAE;MACVC,IAAI,EAAE;QACJC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,SAAS,EAAE;MACTC,KAAK,EAAE;QACLC,wCAAwC,EAAE,IAAI;QAC9CC,SAAS,EAAEC,yBAAkB,CAACC;MAChC;IACF,CAAC;IACDC,cAAc,EAAE;MACdC,IAAI,EAAEC;IACR;EACF,CAAC;AAAA,CAAC;AAACC,OAAA,CAAAb,eAAA,GAAAA,eAAA"}