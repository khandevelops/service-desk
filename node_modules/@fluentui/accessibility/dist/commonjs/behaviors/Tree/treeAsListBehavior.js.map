{"version":3,"file":"treeAsListBehavior.js","names":["_treeBehavior","require","_treeItemAsListItemBehavior","treeAsListBehavior","props","behavior","treeBehavior","definition","attributes","root","Object","assign","role","keyActions","focusZone","childBehaviors","item","treeItemAsListItemBehavior","process","env","NODE_ENV","exports"],"sources":["behaviors/Tree/treeAsListBehavior.ts"],"sourcesContent":["import { Accessibility, AriaRole } from '../../types';\nimport { treeBehavior, TreeBehaviorProps } from './treeBehavior';\nimport { treeItemAsListItemBehavior } from './treeItemAsListItemBehavior';\n\n/**\n * @specification\n * Adds role 'list' to 'root' slot.\n */\nexport const treeAsListBehavior: Accessibility<TreeBehaviorProps> = props => {\n  const behavior = treeBehavior(props);\n  const definition = {\n    attributes: {\n      root: {\n        ...behavior.attributes.root,\n        role: 'list' as AriaRole,\n      },\n    },\n    keyActions: behavior.keyActions,\n    focusZone: behavior.focusZone,\n    childBehaviors: {\n      item: treeItemAsListItemBehavior,\n    },\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    definition.attributes.root['data-aa-class'] = 'TreeList';\n  }\n  return definition;\n};\n"],"mappings":";;;;AACA,IAAAA,aAAA,GAAAC,OAAA;AACA,IAAAC,2BAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA;AACO,IAAME,kBAAoD,GAAG,SAAvDA,kBAAoDA,CAAGC,KAAK,EAAI;EAC3E,IAAMC,QAAQ,GAAG,IAAAC,0BAAY,EAACF,KAAK,CAAC;EACpC,IAAMG,UAAU,GAAG;IACjBC,UAAU,EAAE;MACVC,IAAI,EAAAC,MAAA,CAAAC,MAAA,KACCN,QAAQ,CAACG,UAAU,CAACC,IAAI;QAC3BG,IAAI,EAAE;MAAkB;IAE5B,CAAC;IACDC,UAAU,EAAER,QAAQ,CAACQ,UAAU;IAC/BC,SAAS,EAAET,QAAQ,CAACS,SAAS;IAC7BC,cAAc,EAAE;MACdC,IAAI,EAAEC;IACR;EACF,CAAC;EAED,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCb,UAAU,CAACC,UAAU,CAACC,IAAI,CAAC,eAAe,CAAC,GAAG,UAAU;EAC1D;EACA,OAAOF,UAAU;AACnB,CAAC;AAACc,OAAA,CAAAlB,kBAAA,GAAAA,kBAAA"}