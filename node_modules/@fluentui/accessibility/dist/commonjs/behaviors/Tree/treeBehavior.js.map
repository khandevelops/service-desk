{"version":3,"file":"treeBehavior.js","names":["_keyboardKey","require","_types","_treeItemBehavior","treeBehavior","props","attributes","root","Object","assign","role","tabIndex","selectable","keyActions","expandSiblings","keyCombinations","keyCode","keyboardKey","focusZone","direction","FocusZoneDirection","vertical","shouldFocusInnerElementWhenReceivedFocus","childBehaviors","item","treeItemBehavior","exports"],"sources":["behaviors/Tree/treeBehavior.ts"],"sourcesContent":["import { keyboardKey } from '../../keyboard-key';\n\nimport { Accessibility, AccessibilityAttributes } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { treeItemBehavior } from './treeItemBehavior';\n\n/**\n * @specification\n * Adds role 'tree' to 'root' slot.\n * Adds attribute 'tabIndex=-1' to 'root' slot.\n * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.\n * Provides arrow key navigation in vertical direction.\n * Triggers 'expandSiblings' action with '*' on 'root'.\n * Adds attribute 'aria-multiselectable=true' to 'root' slot if 'selectable' property is true. Does not set the attribute otherwise.\n */\nexport const treeBehavior: Accessibility<TreeBehaviorProps> = props => {\n  return {\n    attributes: {\n      root: {\n        role: 'tree',\n        'aria-labelledby': props['aria-labelledby'],\n        tabIndex: -1,\n        ...(props.selectable && {\n          'aria-multiselectable': true,\n        }),\n      },\n    },\n    keyActions: {\n      root: {\n        expandSiblings: {\n          keyCombinations: [{ keyCode: keyboardKey['*'] }],\n        },\n      },\n    },\n    focusZone: {\n      props: {\n        direction: FocusZoneDirection.vertical,\n        shouldFocusInnerElementWhenReceivedFocus: true,\n      },\n    },\n    childBehaviors: {\n      item: treeItemBehavior,\n    },\n  };\n};\n\nexport type TreeBehaviorProps = Pick<AccessibilityAttributes, 'aria-labelledby'> & {\n  /** Whether or not tree items are selectable. */\n  selectable?: boolean;\n};\n"],"mappings":";;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAGA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,iBAAA,GAAAF,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMG,YAA8C,GAAG,SAAjDA,YAA8CA,CAAGC,KAAK,EAAI;EACrE,OAAO;IACLC,UAAU,EAAE;MACVC,IAAI,EAAAC,MAAA,CAAAC,MAAA;QACFC,IAAI,EAAE,MAAM;QACZ,iBAAiB,EAAEL,KAAK,CAAC,iBAAiB,CAAC;QAC3CM,QAAQ,EAAE,CAAC;MAAC,GACRN,KAAK,CAACO,UAAU,IAAI;QACtB,sBAAsB,EAAE;MAC1B,CAAC;IAEL,CAAC;IACDC,UAAU,EAAE;MACVN,IAAI,EAAE;QACJO,cAAc,EAAE;UACdC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAAC,GAAG;UAAE,CAAC;QACjD;MACF;IACF,CAAC;IACDC,SAAS,EAAE;MACTb,KAAK,EAAE;QACLc,SAAS,EAAEC,yBAAkB,CAACC,QAAQ;QACtCC,wCAAwC,EAAE;MAC5C;IACF,CAAC;IACDC,cAAc,EAAE;MACdC,IAAI,EAAEC;IACR;EACF,CAAC;AACH,CAAC;AAACC,OAAA,CAAAtB,YAAA,GAAAA,YAAA"}