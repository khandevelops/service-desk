{"version":3,"file":"loaderBehavior.js","names":["loaderBehavior","props","attributes","root","role","getDefaultAriaLabelledBy","exports","undefined","labelId"],"sources":["behaviors/Loader/loaderBehavior.ts"],"sourcesContent":["import { Accessibility } from '../../types';\n\n/**\n * @description\n * Loader is usually an element that displays the progress status for a task that take a long time or consists of several steps.\n * Adds attribute 'aria-labelledby' on 'root' when loader has 'tabIndex' prop. This can be overriden by providing 'aria-labelledby' or 'aria-label' property directly to the component.\n *\n * @specification\n * Adds role 'progressbar' to 'root' slot.\n */\nexport const loaderBehavior: Accessibility<LoaderBehaviorProps> = props => {\n  return {\n    attributes: {\n      root: {\n        role: 'progressbar',\n        'aria-labelledby': getDefaultAriaLabelledBy(props),\n      },\n    },\n  };\n};\n\nexport type LoaderBehaviorProps = {\n  /** id of the loader label element. */\n  labelId?: string;\n};\n\n/**\n * Returns the id of the loader label if user provide tabIndex prop. It is used when user does not provide aria-label or\n * aria-labelledby as prop.\n */\nconst getDefaultAriaLabelledBy = (props: LoaderBehaviorProps) => {\n  if (props['aria-label'] || props['aria-labelledby']) {\n    return undefined;\n  }\n  return props['tabIndex'] === undefined ? undefined : props.labelId;\n};\n"],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,cAAkD,GAAG,SAArDA,cAAkDA,CAAGC,KAAK,EAAI;EACzE,OAAO;IACLC,UAAU,EAAE;MACVC,IAAI,EAAE;QACJC,IAAI,EAAE,aAAa;QACnB,iBAAiB,EAAEC,wBAAwB,CAACJ,KAAK;MACnD;IACF;EACF,CAAC;AACH,CAAC;AAACK,OAAA,CAAAN,cAAA,GAAAA,cAAA;AAOF;AACA;AACA;AACA;AACA,IAAMK,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAIJ,KAA0B,EAAK;EAC/D,IAAIA,KAAK,CAAC,YAAY,CAAC,IAAIA,KAAK,CAAC,iBAAiB,CAAC,EAAE;IACnD,OAAOM,SAAS;EAClB;EACA,OAAON,KAAK,CAAC,UAAU,CAAC,KAAKM,SAAS,GAAGA,SAAS,GAAGN,KAAK,CAACO,OAAO;AACpE,CAAC"}