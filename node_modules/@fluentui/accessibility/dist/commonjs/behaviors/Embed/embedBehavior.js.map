{"version":3,"file":"embedBehavior.js","names":["_keyboardKey","require","embedBehavior","props","attributes","root","alt","title","undefined","role","tabIndex","keyActions","performClick","keyCombinations","keyCode","keyboardKey","Enter","SpacebarKey","exports"],"sources":["behaviors/Embed/embedBehavior.ts"],"sourcesContent":["import { keyboardKey, SpacebarKey } from '../../keyboard-key';\nimport { Accessibility } from '../../types';\n\n/**\n * @description\n * GIFs are visual representation only so hidden unless alt or title applied.\n * Enter/space keys play and pause the gif respectively\n *\n * @specification\n * Adds role 'presentation' to 'root' slot.\n * Adds attribute 'aria-hidden=true', if there is no 'alt' property provided.\n * Adds attribute 'tabIndex=0' to 'root' slot.\n */\nexport const embedBehavior: Accessibility<EmbedBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      'aria-hidden': props.alt || props.title ? undefined : true,\n      role: 'presentation',\n      tabIndex: 0,\n    },\n  },\n  keyActions: {\n    root: {\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n    },\n  },\n});\n\nexport type EmbedBehaviorProps = {\n  /** Corresponds to HTML title attribute. */\n  title?: string;\n  /** Alternative text. */\n  alt?: string;\n};\n"],"mappings":";;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,aAAgD,GAAG,SAAnDA,aAAgDA,CAAGC,KAAK;EAAA,OAAK;IACxEC,UAAU,EAAE;MACVC,IAAI,EAAE;QACJ,aAAa,EAAEF,KAAK,CAACG,GAAG,IAAIH,KAAK,CAACI,KAAK,GAAGC,SAAS,GAAG,IAAI;QAC1DC,IAAI,EAAE,cAAc;QACpBC,QAAQ,EAAE;MACZ;IACF,CAAC;IACDC,UAAU,EAAE;MACVN,IAAI,EAAE;QACJO,YAAY,EAAE;UACZC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEC,wBAAW,CAACC;UAAM,CAAC,EAAE;YAAEF,OAAO,EAAEG;UAAY,CAAC;QAC5E;MACF;IACF;EACF,CAAC;AAAA,CAAC;AAACC,OAAA,CAAAhB,aAAA,GAAAA,aAAA"}