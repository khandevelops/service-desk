{"version":3,"file":"gridRowNestedBehavior.js","names":["_attributes","require","_types","_keyboardKey","_gridCellBehavior","gridRowNestedBehavior","props","_root","attributes","root","IS_FOCUSABLE_ATTRIBUTE","role","selected","focusZone","shouldEnterInnerZone","event","getCode","keyboardKey","Enter","direction","FocusZoneDirection","horizontal","keyActions","unsetRowTabbable","keyCombinations","keyCode","Tab","shiftKey","performClick","SpacebarKey","childBehaviors","cell","gridCellBehavior","exports"],"sources":["behaviors/Table/gridRowNestedBehavior.ts"],"sourcesContent":["import { Accessibility } from '../../types';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { getCode, keyboardKey, SpacebarKey } from '../../keyboard-key';\nimport { gridCellBehavior } from './gridCellBehavior';\nimport { GridRowBehaviorProps } from './gridRowBehavior';\n\n/**\n * @specification\n * Adds role='row'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Adds attribute 'aria-selected=true' based on the property 'selected'. Based on this screen readers will recognize the selected state of the item.\n * Focus can be moved inside a child component with embeded inner FocusZone by pressing a specified key.\n * Provides arrow key navigation in horizontal direction.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n * Triggers 'unsetRowTabbable' action using 'shiftKey' + 'Tab' key on 'root'.\n * Applies 'gridCellBehavior' for 'cell' child component.\n */\nexport const gridRowNestedBehavior: Accessibility<GridRowBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      role: 'row',\n      'aria-selected': props.selected,\n    },\n  },\n  focusZone: {\n    props: {\n      shouldEnterInnerZone: event => getCode(event) === keyboardKey.Enter,\n      direction: FocusZoneDirection.horizontal,\n    },\n  },\n  keyActions: {\n    root: {\n      unsetRowTabbable: {\n        keyCombinations: [{ keyCode: keyboardKey.Tab, shiftKey: true }],\n      },\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n    },\n  },\n  childBehaviors: {\n    cell: gridCellBehavior,\n  },\n});\n"],"mappings":";;;;AACA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,iBAAA,GAAAH,OAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMI,qBAA0D,GAAG,SAA7DA,qBAA0DA,CAAGC,KAAK;EAAA,IAAAC,KAAA;EAAA,OAAK;IAClFC,UAAU,EAAE;MACVC,IAAI,GAAAF,KAAA,OAAAA,KAAA,CACDG,kCAAsB,IAAG,IAAI,EAAAH,KAAA,CAC9BI,IAAI,GAAE,KAAK,EAAAJ,KAAA,CACX,eAAe,IAAED,KAAK,CAACM,QAAQ,EAAAL,KAAA;IAEnC,CAAC;IACDM,SAAS,EAAE;MACTP,KAAK,EAAE;QACLQ,oBAAoB,EAAE,SAAAA,qBAAAC,KAAK;UAAA,OAAI,IAAAC,oBAAO,EAACD,KAAK,CAAC,KAAKE,wBAAW,CAACC,KAAK;QAAA;QACnEC,SAAS,EAAEC,yBAAkB,CAACC;MAChC;IACF,CAAC;IACDC,UAAU,EAAE;MACVb,IAAI,EAAE;QACJc,gBAAgB,EAAE;UAChBC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAER,wBAAW,CAACS,GAAG;YAAEC,QAAQ,EAAE;UAAK,CAAC;QAChE,CAAC;QACDC,YAAY,EAAE;UACZJ,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAER,wBAAW,CAACC;UAAM,CAAC,EAAE;YAAEO,OAAO,EAAEI;UAAY,CAAC;QAC5E;MACF;IACF,CAAC;IACDC,cAAc,EAAE;MACdC,IAAI,EAAEC;IACR;EACF,CAAC;AAAA,CAAC;AAACC,OAAA,CAAA5B,qBAAA,GAAAA,qBAAA"}