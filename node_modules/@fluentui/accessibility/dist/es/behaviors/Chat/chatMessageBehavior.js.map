{"version":3,"file":"chatMessageBehavior.js","names":["keyboardKey","IS_FOCUSABLE_ATTRIBUTE","FocusZoneTabbableElements","FocusZoneDirection","chatMessageBehavior","props","_Object$assign","attributes","root","Object","assign","tabIndex","hasActionMenu","inlineActionMenu","actionMenuId","focusZone","handleTabKey","all","isCircularNavigation","direction","vertical","pagingSupportDisabled","keyActions","preventDefault","keyCombinations","keyCode","ArrowUp","ArrowDown","focus","Escape"],"sources":["behaviors/Chat/chatMessageBehavior.ts"],"sourcesContent":["import { keyboardKey } from '../../keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\nimport { FocusZoneTabbableElements, FocusZoneDirection } from '../../focusZone/types';\n\n/**\n * @description\n * Sets the message to be a focusable element.\n * Adds a vertical circular focus zone navigation where a user navigates using a Tab key.\n * Adds a key action which prevents up and down arrow keys from navigating in FocusZone, we only want a Tab key to navigate.\n * Adds an escape key action which focuses the chat message, i.e., moves key handling from inside a message back to the chat list.\n *\n * @specification\n * Provides arrow key navigation in vertical direction.\n * Keyboard navigation is circular.\n * Focus is moved within the focusable children of the component using TAB key.\n * Does not handle PageDown and PageUp.\n */\nexport const chatMessageBehavior: Accessibility<ChatMessageBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      tabIndex: -1,\n      ...(props.hasActionMenu &&\n        !props.inlineActionMenu && {\n          'aria-owns': props.actionMenuId,\n        }),\n    },\n  },\n  focusZone: {\n    props: {\n      handleTabKey: FocusZoneTabbableElements.all,\n      isCircularNavigation: true,\n      direction: FocusZoneDirection.vertical,\n      pagingSupportDisabled: true,\n    },\n  },\n  keyActions: {\n    root: {\n      // prevents default FocusZone behavior, in this case, prevents using arrow keys as navigation (we only want a Tab key to navigate)\n      preventDefault: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowUp }, { keyCode: keyboardKey.ArrowDown }],\n      },\n      focus: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport type ChatMessageBehaviorProps = {\n  hasActionMenu?: boolean;\n  inlineActionMenu?: boolean;\n  actionMenuId?: string;\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,oBAAoB;AAEhD,SAASC,sBAAsB,QAAQ,kBAAkB;AAEzD,SAASC,yBAAyB,EAAEC,kBAAkB,QAAQ,uBAAuB;;AAErF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,mBAA4D,GAAG,SAA/DA,mBAA4DA,CAAGC,KAAK;EAAA,IAAAC,cAAA;EAAA,OAAK;IACpFC,UAAU,EAAE;MACVC,IAAI,EAAAC,MAAA,CAAAC,MAAA,EAAAJ,cAAA,OAAAA,cAAA,CACDL,sBAAsB,IAAG,IAAI,EAAAK,cAAA,CAC9BK,QAAQ,GAAE,CAAC,CAAC,EAAAL,cAAA,GACRD,KAAK,CAACO,aAAa,IACrB,CAACP,KAAK,CAACQ,gBAAgB,IAAI;QACzB,WAAW,EAAER,KAAK,CAACS;MACrB,CAAC;IAEP,CAAC;IACDC,SAAS,EAAE;MACTV,KAAK,EAAE;QACLW,YAAY,EAAEd,yBAAyB,CAACe,GAAG;QAC3CC,oBAAoB,EAAE,IAAI;QAC1BC,SAAS,EAAEhB,kBAAkB,CAACiB,QAAQ;QACtCC,qBAAqB,EAAE;MACzB;IACF,CAAC;IACDC,UAAU,EAAE;MACVd,IAAI,EAAE;QACJ;QACAe,cAAc,EAAE;UACdC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEzB,WAAW,CAAC0B;UAAQ,CAAC,EAAE;YAAED,OAAO,EAAEzB,WAAW,CAAC2B;UAAU,CAAC;QACxF,CAAC;QACDC,KAAK,EAAE;UACLJ,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEzB,WAAW,CAAC6B;UAAO,CAAC;QACnD;MACF;IACF;EACF,CAAC;AAAA,CAAC"}