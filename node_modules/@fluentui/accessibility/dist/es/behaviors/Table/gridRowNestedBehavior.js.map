{"version":3,"file":"gridRowNestedBehavior.js","names":["IS_FOCUSABLE_ATTRIBUTE","FocusZoneDirection","getCode","keyboardKey","SpacebarKey","gridCellBehavior","gridRowNestedBehavior","props","_root","attributes","root","role","selected","focusZone","shouldEnterInnerZone","event","Enter","direction","horizontal","keyActions","unsetRowTabbable","keyCombinations","keyCode","Tab","shiftKey","performClick","childBehaviors","cell"],"sources":["behaviors/Table/gridRowNestedBehavior.ts"],"sourcesContent":["import { Accessibility } from '../../types';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { getCode, keyboardKey, SpacebarKey } from '../../keyboard-key';\nimport { gridCellBehavior } from './gridCellBehavior';\nimport { GridRowBehaviorProps } from './gridRowBehavior';\n\n/**\n * @specification\n * Adds role='row'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Adds attribute 'aria-selected=true' based on the property 'selected'. Based on this screen readers will recognize the selected state of the item.\n * Focus can be moved inside a child component with embeded inner FocusZone by pressing a specified key.\n * Provides arrow key navigation in horizontal direction.\n * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.\n * Triggers 'unsetRowTabbable' action using 'shiftKey' + 'Tab' key on 'root'.\n * Applies 'gridCellBehavior' for 'cell' child component.\n */\nexport const gridRowNestedBehavior: Accessibility<GridRowBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      role: 'row',\n      'aria-selected': props.selected,\n    },\n  },\n  focusZone: {\n    props: {\n      shouldEnterInnerZone: event => getCode(event) === keyboardKey.Enter,\n      direction: FocusZoneDirection.horizontal,\n    },\n  },\n  keyActions: {\n    root: {\n      unsetRowTabbable: {\n        keyCombinations: [{ keyCode: keyboardKey.Tab, shiftKey: true }],\n      },\n      performClick: {\n        keyCombinations: [{ keyCode: keyboardKey.Enter }, { keyCode: SpacebarKey }],\n      },\n    },\n  },\n  childBehaviors: {\n    cell: gridCellBehavior,\n  },\n});\n"],"mappings":"AACA,SAASA,sBAAsB,QAAQ,kBAAkB;AACzD,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,SAASC,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAQ,oBAAoB;AACtE,SAASC,gBAAgB,QAAQ,oBAAoB;AAGrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,qBAA0D,GAAG,SAA7DA,qBAA0DA,CAAGC,KAAK;EAAA,IAAAC,KAAA;EAAA,OAAK;IAClFC,UAAU,EAAE;MACVC,IAAI,GAAAF,KAAA,OAAAA,KAAA,CACDR,sBAAsB,IAAG,IAAI,EAAAQ,KAAA,CAC9BG,IAAI,GAAE,KAAK,EAAAH,KAAA,CACX,eAAe,IAAED,KAAK,CAACK,QAAQ,EAAAJ,KAAA;IAEnC,CAAC;IACDK,SAAS,EAAE;MACTN,KAAK,EAAE;QACLO,oBAAoB,EAAE,SAAAA,qBAAAC,KAAK;UAAA,OAAIb,OAAO,CAACa,KAAK,CAAC,KAAKZ,WAAW,CAACa,KAAK;QAAA;QACnEC,SAAS,EAAEhB,kBAAkB,CAACiB;MAChC;IACF,CAAC;IACDC,UAAU,EAAE;MACVT,IAAI,EAAE;QACJU,gBAAgB,EAAE;UAChBC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEnB,WAAW,CAACoB,GAAG;YAAEC,QAAQ,EAAE;UAAK,CAAC;QAChE,CAAC;QACDC,YAAY,EAAE;UACZJ,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEnB,WAAW,CAACa;UAAM,CAAC,EAAE;YAAEM,OAAO,EAAElB;UAAY,CAAC;QAC5E;MACF;IACF,CAAC;IACDsB,cAAc,EAAE;MACdC,IAAI,EAAEtB;IACR;EACF,CAAC;AAAA,CAAC"}