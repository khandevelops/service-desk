{"version":3,"file":"gridCellMultipleFocusableBehavior.js","names":["IS_FOCUSABLE_ATTRIBUTE","FocusZoneDirection","keyboardKey","gridCellMultipleFocusableBehavior","_root","attributes","root","role","focusZone","props","direction","bidirectional","keyActions","focusCell","keyCombinations","keyCode","Escape"],"sources":["behaviors/Table/gridCellMultipleFocusableBehavior.ts"],"sourcesContent":["import { Accessibility } from '../../types';\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { keyboardKey } from '../../keyboard-key';\n\n/**\n * @specification\n * Adds role='gridcell'.\n * Adds attribute 'data-is-focusable=true' to 'root' slot.\n * Provides arrow key navigation in bidirectional direction.\n * Triggers 'focusCell' action with 'Escape' on 'root'.\n */\nexport const gridCellMultipleFocusableBehavior: Accessibility<GridCellMultipleFocusableBehavior> = () => ({\n  attributes: {\n    root: {\n      role: 'gridcell',\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n    },\n  },\n  focusZone: {\n    props: {\n      direction: FocusZoneDirection.bidirectional,\n    },\n  },\n  keyActions: {\n    root: {\n      focusCell: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\ntype GridCellMultipleFocusableBehavior = never;\n"],"mappings":"AACA,SAASA,sBAAsB,QAAQ,kBAAkB;AACzD,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,SAASC,WAAW,QAAQ,oBAAoB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,iCAAmF,GAAG,SAAtFA,iCAAmFA,CAAA;EAAA,IAAAC,KAAA;EAAA,OAAU;IACxGC,UAAU,EAAE;MACVC,IAAI,GAAAF,KAAA;QACFG,IAAI,EAAE;MAAU,GAAAH,KAAA,CACfJ,sBAAsB,IAAG,IAAI,EAAAI,KAAA;IAElC,CAAC;IACDI,SAAS,EAAE;MACTC,KAAK,EAAE;QACLC,SAAS,EAAET,kBAAkB,CAACU;MAChC;IACF,CAAC;IACDC,UAAU,EAAE;MACVN,IAAI,EAAE;QACJO,SAAS,EAAE;UACTC,eAAe,EAAE,CAAC;YAAEC,OAAO,EAAEb,WAAW,CAACc;UAAO,CAAC;QACnD;MACF;IACF;EACF,CAAC;AAAA,CAAC"}