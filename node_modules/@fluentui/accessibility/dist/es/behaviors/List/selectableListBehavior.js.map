{"version":3,"file":"selectableListBehavior.js","names":["FocusZoneDirection","selectableListBehavior","props","attributes","root","Object","assign","role","tabIndex","horizontal","focusZone","shouldFocusInnerElementWhenReceivedFocus","direction","bidirectionalDomOrder"],"sources":["behaviors/List/selectableListBehavior.ts"],"sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { ListBehaviorProps } from './listBehavior';\n\n/**\n * @description\n * The listbox role is used to identify an element that creates a list from which a user may select one or more items.\n *\n * @specification\n * Adds role='listbox'.\n * Adds attribute 'tabIndex=-1' to 'root' slot.\n * Adds attribute 'aria-orientation=horizontal' to 'root' slot if 'horizontal' property is true. Does not set the attribute otherwise.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n */\nexport const selectableListBehavior: Accessibility<ListBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      role: 'listbox',\n      tabIndex: -1,\n      ...(props.horizontal && {\n        'aria-orientation': 'horizontal',\n      }),\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n});\n"],"mappings":"AACA,SAASA,kBAAkB,QAAQ,uBAAuB;AAG1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,sBAAwD,GAAG,SAA3DA,sBAAwDA,CAAGC,KAAK;EAAA,OAAK;IAChFC,UAAU,EAAE;MACVC,IAAI,EAAAC,MAAA,CAAAC,MAAA;QACFC,IAAI,EAAE,SAAS;QACfC,QAAQ,EAAE,CAAC;MAAC,GACRN,KAAK,CAACO,UAAU,IAAI;QACtB,kBAAkB,EAAE;MACtB,CAAC;IAEL,CAAC;IACDC,SAAS,EAAE;MACTR,KAAK,EAAE;QACLS,wCAAwC,EAAE,IAAI;QAC9CC,SAAS,EAAEZ,kBAAkB,CAACa;MAChC;IACF;EACF,CAAC;AAAA,CAAC"}