{"version":3,"file":"menuAsToolbarBehavior.js","names":["FocusZoneDirection","menuItemAsToolbarButtonBehavior","menuAsToolbarBehavior","attributes","root","role","focusZone","props","shouldFocusInnerElementWhenReceivedFocus","direction","bidirectionalDomOrder","childBehaviors","item"],"sources":["behaviors/Toolbar/menuAsToolbarBehavior.ts"],"sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { menuItemAsToolbarButtonBehavior } from './menuItemAsToolbarButtonBehavior';\n\n/**\n * @description\n * Implements ARIA Toolbar design pattern.\n * Child item components need to have menuItemAsToolbarButtonBehavior assigned.\n * @specification\n * Adds role 'toolbar' to 'root' slot.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n */\nexport const menuAsToolbarBehavior: Accessibility<MenuAsToolbarBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      role: 'toolbar',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n  childBehaviors: {\n    item: menuItemAsToolbarButtonBehavior,\n  },\n});\n\nexport type MenuAsToolbarBehaviorProps = never;\n"],"mappings":"AACA,SAASA,kBAAkB,QAAQ,uBAAuB;AAC1D,SAASC,+BAA+B,QAAQ,mCAAmC;;AAEnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,qBAAgE,GAAG,SAAnEA,qBAAgEA,CAAA;EAAA,OAAU;IACrFC,UAAU,EAAE;MACVC,IAAI,EAAE;QACJC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,SAAS,EAAE;MACTC,KAAK,EAAE;QACLC,wCAAwC,EAAE,IAAI;QAC9CC,SAAS,EAAET,kBAAkB,CAACU;MAChC;IACF,CAAC;IACDC,cAAc,EAAE;MACdC,IAAI,EAAEX;IACR;EACF,CAAC;AAAA,CAAC"}