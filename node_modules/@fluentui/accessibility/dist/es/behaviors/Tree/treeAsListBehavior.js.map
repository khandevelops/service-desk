{"version":3,"file":"treeAsListBehavior.js","names":["treeBehavior","treeItemAsListItemBehavior","treeAsListBehavior","props","behavior","definition","attributes","root","Object","assign","role","keyActions","focusZone","childBehaviors","item","process","env","NODE_ENV"],"sources":["behaviors/Tree/treeAsListBehavior.ts"],"sourcesContent":["import { Accessibility, AriaRole } from '../../types';\nimport { treeBehavior, TreeBehaviorProps } from './treeBehavior';\nimport { treeItemAsListItemBehavior } from './treeItemAsListItemBehavior';\n\n/**\n * @specification\n * Adds role 'list' to 'root' slot.\n */\nexport const treeAsListBehavior: Accessibility<TreeBehaviorProps> = props => {\n  const behavior = treeBehavior(props);\n  const definition = {\n    attributes: {\n      root: {\n        ...behavior.attributes.root,\n        role: 'list' as AriaRole,\n      },\n    },\n    keyActions: behavior.keyActions,\n    focusZone: behavior.focusZone,\n    childBehaviors: {\n      item: treeItemAsListItemBehavior,\n    },\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    definition.attributes.root['data-aa-class'] = 'TreeList';\n  }\n  return definition;\n};\n"],"mappings":"AACA,SAASA,YAAY,QAA2B,gBAAgB;AAChE,SAASC,0BAA0B,QAAQ,8BAA8B;;AAEzE;AACA;AACA;AACA;AACA,OAAO,IAAMC,kBAAoD,GAAG,SAAvDA,kBAAoDA,CAAGC,KAAK,EAAI;EAC3E,IAAMC,QAAQ,GAAGJ,YAAY,CAACG,KAAK,CAAC;EACpC,IAAME,UAAU,GAAG;IACjBC,UAAU,EAAE;MACVC,IAAI,EAAAC,MAAA,CAAAC,MAAA,KACCL,QAAQ,CAACE,UAAU,CAACC,IAAI;QAC3BG,IAAI,EAAE;MAAkB;IAE5B,CAAC;IACDC,UAAU,EAAEP,QAAQ,CAACO,UAAU;IAC/BC,SAAS,EAAER,QAAQ,CAACQ,SAAS;IAC7BC,cAAc,EAAE;MACdC,IAAI,EAAEb;IACR;EACF,CAAC;EAED,IAAIc,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCZ,UAAU,CAACC,UAAU,CAACC,IAAI,CAAC,eAAe,CAAC,GAAG,UAAU;EAC1D;EACA,OAAOF,UAAU;AACnB,CAAC"}