{"version":3,"file":"types.js","names":[],"sources":["types.ts"],"sourcesContent":["import * as React from 'react';\n\nexport type GetContextRefs = (needleRef: NodeRef) => NodeRef[];\nexport type GetRefs = () => NodeRef[];\nexport type NodeRef<T extends Node = Node> = React.MutableRefObject<T>;\n\nexport type NestingContextValue = {\n  getContextRefs: GetContextRefs;\n  register: (ref: NodeRef) => void;\n  unregister: (ref: NodeRef) => void;\n};\n\nexport interface NestedContextProps {\n  value: NestingContextValue;\n}\n\nexport interface NestingProps {\n  children: (getRefs: GetRefs, ref: NodeRef) => React.ReactElement<any>;\n}\n"],"mappings":""}