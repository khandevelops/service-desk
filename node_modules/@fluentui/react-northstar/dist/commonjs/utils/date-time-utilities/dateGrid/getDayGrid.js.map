{"version":3,"file":"getDayGrid.js","names":["getDayGrid","options","selectedDate","dateRangeType","firstDayOfWeek","today","minDate","maxDate","weeksToShow","workWeekDays","daysToSelectInDayView","restrictedDates","markedDays","restrictedDateOptions","todaysDate","Date","navigatedDate","date","getFullYear","getMonth","getDate","weeks","getDay","setDate","addDays","DAYS_IN_WEEK","isAllDaysOfWeekOutOfMonth","selectedDateRangeType","getDateRangeTypeToUse","selectedDates","getDateRangeArray","getBoundedDateRange","shouldGetWeeks","weekIndex","week","originalDate","getTime","dayInfo","key","toString","isInMonth","isToday","compareDates","isSelected","isInDateRangeArray","isInBounds","isRestrictedDate","isMarked","some","markedDay","push","dayIndex"],"sources":["utils/date-time-utilities/dateGrid/getDayGrid.ts"],"sourcesContent":["import { addDays, compareDates, getDateRangeArray, isInDateRangeArray } from '../dateMath/dateMath';\nimport { DAYS_IN_WEEK } from '../dateValues/dateValues';\nimport { IDay, IDayGridOptions } from './dateGrid.types';\nimport { getDateRangeTypeToUse } from './getDateRangeTypeToUse';\nimport { getBoundedDateRange } from './getBoundedDateRange';\nimport { isRestrictedDate } from './isRestrictedDate';\n\n/**\n * Generates a grid of days, given the `options`.\n * Returns one additional week at the begining from the previous range\n * and one at the end from the future range\n * @param options - parameters to specify date related restrictions for the resulting grid\n */\nexport const getDayGrid = (options: IDayGridOptions): IDay[][] => {\n  const {\n    selectedDate,\n    dateRangeType,\n    firstDayOfWeek,\n    today,\n    minDate,\n    maxDate,\n    weeksToShow,\n    workWeekDays,\n    daysToSelectInDayView,\n    restrictedDates,\n    markedDays,\n  } = options;\n  const restrictedDateOptions = { minDate, maxDate, restrictedDates };\n\n  const todaysDate = today || new Date();\n\n  const navigatedDate = options.navigatedDate ? options.navigatedDate : todaysDate;\n\n  let date;\n  if (weeksToShow && weeksToShow <= 4) {\n    // if showing less than a full month, just use date == navigatedDate\n    date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), navigatedDate.getDate());\n  } else {\n    date = new Date(navigatedDate.getFullYear(), navigatedDate.getMonth(), 1);\n  }\n  const weeks: IDay[][] = [];\n\n  // Cycle the date backwards to get to the first day of the week.\n  while (date.getDay() !== firstDayOfWeek) {\n    date.setDate(date.getDate() - 1);\n  }\n\n  // add the transition week as last week of previous range\n  date = addDays(date, -DAYS_IN_WEEK);\n\n  // a flag to indicate whether all days of the week are outside the month\n  let isAllDaysOfWeekOutOfMonth = false;\n\n  // in work week view if the days aren't contiguous we use week view instead\n  const selectedDateRangeType = getDateRangeTypeToUse(dateRangeType, workWeekDays, firstDayOfWeek);\n\n  let selectedDates: Date[] = [];\n\n  if (!!selectedDate) {\n    selectedDates = getDateRangeArray(\n      selectedDate,\n      selectedDateRangeType,\n      firstDayOfWeek,\n      workWeekDays,\n      daysToSelectInDayView,\n    );\n    selectedDates = getBoundedDateRange(selectedDates, minDate, maxDate);\n  }\n\n  let shouldGetWeeks = true;\n\n  for (let weekIndex = 0; shouldGetWeeks; weekIndex++) {\n    const week: IDay[] = [];\n\n    isAllDaysOfWeekOutOfMonth = true;\n\n    for (let dayIndex = 0; dayIndex < DAYS_IN_WEEK; dayIndex++) {\n      const originalDate = new Date(date.getTime());\n      const dayInfo: IDay = {\n        key: date.toString(),\n        date: date.getDate().toString(),\n        originalDate,\n        isInMonth: date.getMonth() === navigatedDate.getMonth(),\n        isToday: compareDates(todaysDate, date),\n        isSelected: isInDateRangeArray(date, selectedDates),\n        isInBounds: !isRestrictedDate(date, restrictedDateOptions),\n        isMarked: markedDays?.some(markedDay => compareDates(originalDate, markedDay)) || false,\n      };\n\n      week.push(dayInfo);\n\n      if (dayInfo.isInMonth) {\n        isAllDaysOfWeekOutOfMonth = false;\n      }\n\n      date.setDate(date.getDate() + 1);\n    }\n\n    // We append the condition of the loop depending upon the showSixWeeksByDefault prop.\n    shouldGetWeeks = weeksToShow ? weekIndex < weeksToShow + 1 : !isAllDaysOfWeekOutOfMonth || weekIndex === 0;\n\n    // we don't check shouldGetWeeks before pushing because we want to add one extra week for transition state\n    weeks.push(week);\n  }\n\n  return weeks;\n};\n"],"mappings":"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"}