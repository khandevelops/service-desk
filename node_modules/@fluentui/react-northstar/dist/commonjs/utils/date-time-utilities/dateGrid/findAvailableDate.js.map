{"version":3,"file":"findAvailableDate.js","names":["findAvailableDate","options","targetDate","initialDate","direction","restrictedDateOptions","availableDate","isRestrictedDate","compareDatePart","isAfterMaxDate","isBeforeMinDate","addDays","undefined"],"sources":["utils/date-time-utilities/dateGrid/findAvailableDate.ts"],"sourcesContent":["import { IAvailableDateOptions } from './dateGrid.types';\n\nimport { isRestrictedDate } from './isRestrictedDate';\n\nimport { isAfterMaxDate } from './isAfterMaxDate';\n\nimport { isBeforeMinDate } from './isBeforeMinDate';\nimport { compareDatePart, addDays } from '../dateMath/dateMath';\n\n/**\n * Returns closest available date given the restriction `options`, or undefined otherwise\n * @param options - list of search options\n */\nexport const findAvailableDate = (options: IAvailableDateOptions): Date | undefined => {\n  const { targetDate, initialDate, direction, ...restrictedDateOptions } = options;\n  let availableDate = targetDate;\n  // if the target date is available, return it immediately\n  if (!isRestrictedDate(targetDate, restrictedDateOptions)) {\n    return targetDate;\n  }\n\n  while (\n    compareDatePart(initialDate, availableDate) !== 0 &&\n    isRestrictedDate(availableDate, restrictedDateOptions) &&\n    !isAfterMaxDate(availableDate, restrictedDateOptions) &&\n    !isBeforeMinDate(availableDate, restrictedDateOptions)\n  ) {\n    availableDate = addDays(availableDate, direction);\n  }\n\n  if (compareDatePart(initialDate, availableDate) !== 0 && !isRestrictedDate(availableDate, restrictedDateOptions)) {\n    return availableDate;\n  }\n\n  return undefined;\n};\n"],"mappings":";;;;;;AAEA;AAEA;AAEA;AACA;AAAgE;AAEhE;AACA;AACA;AACA;AACO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,OAA8B,EAAuB;EACrF,IAAQC,UAAU,GAAuDD,OAAO,CAAxEC,UAAU;IAAEC,WAAW,GAA0CF,OAAO,CAA5DE,WAAW;IAAEC,SAAS,GAA+BH,OAAO,CAA/CG,SAAS;IAAKC,qBAAqB,+CAAKJ,OAAO;EAChF,IAAIK,aAAa,GAAGJ,UAAU;EAC9B;EACA,IAAI,CAAC,IAAAK,kCAAgB,EAACL,UAAU,EAAEG,qBAAqB,CAAC,EAAE;IACxD,OAAOH,UAAU;EACnB;EAEA,OACE,IAAAM,yBAAe,EAACL,WAAW,EAAEG,aAAa,CAAC,KAAK,CAAC,IACjD,IAAAC,kCAAgB,EAACD,aAAa,EAAED,qBAAqB,CAAC,IACtD,CAAC,IAAAI,8BAAc,EAACH,aAAa,EAAED,qBAAqB,CAAC,IACrD,CAAC,IAAAK,gCAAe,EAACJ,aAAa,EAAED,qBAAqB,CAAC,EACtD;IACAC,aAAa,GAAG,IAAAK,iBAAO,EAACL,aAAa,EAAEF,SAAS,CAAC;EACnD;EAEA,IAAI,IAAAI,yBAAe,EAACL,WAAW,EAAEG,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAAC,kCAAgB,EAACD,aAAa,EAAED,qBAAqB,CAAC,EAAE;IAChH,OAAOC,aAAa;EACtB;EAEA,OAAOM,SAAS;AAClB,CAAC;AAAC"}