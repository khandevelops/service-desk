{"version":3,"file":"Slider.js","names":["processInputValues","p","min","max","value","isNaN","Number","Slider","defaultProps","Math","valueAsPercentage","sliderClassName","sliderSlotClassNames","input","inputWrapper","rail","thumb","track","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","getA11yValueMessageOnChange","defaultValue","userInputRef","inputRef","step","className","styles","variables","design","fluid","vertical","disabled","useRef","useStateManager","createSliderManager","mapPropsToInitialState","mapPropsToState","state","actions","numericMin","numericMax","numericValue","getA11Props","useAccessibility","debugName","rtl","mapPropsToBehavior","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleInputOverrides","onChange","e","change","onMouseDown","setWhatInputSource","target","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","partitionHTMLProps","htmlInputProps","restProps","type","inputElement","Box","create","as","overrideProps","element","root","cx","width","handleRef","sliderBehavior","String","propTypes","commonPropTypes","createCommon","content","PropTypes","oneOfType","string","number","bool","func","customPropTypes","itemShorthand","Object","keys","createShorthandFactory","Component","mappedProp"],"sources":["components/Slider/Slider.tsx"],"sourcesContent":["import { Accessibility, sliderBehavior, SliderBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStateManager,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { createSliderManager } from '@fluentui/state';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  ChildrenComponentProps,\n  commonPropTypes,\n  partitionHTMLProps,\n  UIComponentProps,\n  setWhatInputSource,\n  createShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport { Box, BoxProps } from '../Box/Box';\n\nconst processInputValues = (\n  p: Pick<SliderProps, 'min' | 'max'> & { value: string },\n): { min: number; max: number; value: number; valueAsPercentage: string } => {\n  let min = _.toNumber(p.min);\n  let max = _.toNumber(p.max);\n  let value = _.toNumber(p.value);\n\n  if (isNaN(min)) min = Number(Slider.defaultProps.min);\n  if (isNaN(max)) max = Number(Slider.defaultProps.max);\n  value = isNaN(value) ? min + (max - min) / 2 : Math.min(max, Math.max(min, value));\n  const valueAsPercentage = `${(100 * (value - min)) / (max - min)}%`;\n\n  return { min, max, value, valueAsPercentage };\n};\n\nexport interface SliderSlotClassNames {\n  input: string;\n  inputWrapper: string;\n  rail: string;\n  thumb: string;\n  track: string;\n}\n\nexport interface SliderProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    Omit<SupportedIntrinsicInputProps, 'defaultValue'> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<SliderBehaviorProps>;\n\n  /** The default value of the slider. */\n  defaultValue?: string | number;\n\n  /** A slider can be read-only and unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A slider can take the width of its container. */\n  fluid?: boolean;\n\n  /**\n   * Callback that creates custom accessibility message a screen reader narrates when the value changes.\n   * @param props - Slider props.\n   */\n  getA11yValueMessageOnChange?: (props: SliderProps) => string;\n\n  /** Shorthand for the input component. */\n  input?: ShorthandValue<BoxProps>;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /** The maximum value of the slider. */\n  max?: SupportedIntrinsicInputProps['max'];\n\n  /** The minimum value of the slider. */\n  min?: SupportedIntrinsicInputProps['min'];\n\n  /**\n   * Called after item checked state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onChange?: ComponentEventHandler<SliderProps & { value: string }>;\n\n  /**\n   * A number that specifies the granularity that the value must adhere to, or the special value 'any'.\n   * A string value of any means that no stepping is implied, and any value is allowed\n   * (barring other constraints, such as min and max).\n   */\n  step?: SupportedIntrinsicInputProps['step'];\n\n  /** The value of the slider. */\n  value?: string | number;\n\n  /** A slider can be displayed vertically. */\n  vertical?: boolean;\n}\n\nexport type SliderStylesProps = Pick<SliderProps, 'fluid' | 'disabled' | 'vertical'>;\nexport const sliderClassName = 'ui-slider';\nexport const sliderSlotClassNames: SliderSlotClassNames = {\n  input: `${sliderClassName}__input`,\n  inputWrapper: `${sliderClassName}__input-wrapper`,\n  rail: `${sliderClassName}__rail`,\n  thumb: `${sliderClassName}__thumb`,\n  track: `${sliderClassName}__track`,\n};\n\n/**\n * A Slider represents an input that allows user to choose a value from within a specific range.\n *\n * @accessibility\n * Implements [ARIA Slider](https://www.w3.org/TR/wai-aria-practices-1.1/#slider) design pattern.\n * @accessibilityIssues\n * [Slider - JAWS narrates slider value twice when using PageUp / PageDown](https://github.com/FreedomScientific/VFO-standards-support/issues/220)\n * [Slider - JAWS narrates current and new value in vertical slider](https://github.com/FreedomScientific/VFO-standards-support/issues/219)\n */\nexport const Slider = (React.forwardRef<HTMLInputElement, SliderProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Slider.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    min,\n    max,\n    value,\n    getA11yValueMessageOnChange,\n    defaultValue,\n    input,\n    inputRef: userInputRef,\n    step,\n    className,\n    styles,\n    variables,\n    design,\n    fluid,\n    vertical,\n    disabled,\n  } = props;\n  const inputRef = React.useRef<HTMLElement>();\n\n  const { state, actions } = useStateManager(createSliderManager, {\n    mapPropsToInitialState: () => ({\n      value: defaultValue as string,\n    }),\n    mapPropsToState: () => ({\n      value: value as string,\n    }),\n  });\n  const { min: numericMin, max: numericMax, value: numericValue, valueAsPercentage } = processInputValues({\n    min,\n    max,\n    value: state.value || '',\n  });\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Slider.displayName,\n    rtl: context.rtl,\n    mapPropsToBehavior: () => ({\n      disabled,\n      getA11yValueMessageOnChange,\n      max: numericMax,\n      min: numericMax,\n      value: numericValue,\n      vertical,\n    }),\n  });\n  const { classes, styles: resolvedStyles } = useStyles<SliderStylesProps>(Slider.displayName, {\n    className: sliderClassName,\n    mapPropsToStyles: () => ({\n      fluid,\n      vertical,\n      disabled,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      styles,\n      variables,\n      design,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleInputOverrides = () => ({\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n      const value = _.get(e, 'target.value');\n      _.invoke(props, 'onChange', e, { ...props, value });\n      actions.change(value);\n    },\n    onMouseDown: (e: React.MouseEvent<HTMLInputElement>) => {\n      setWhatInputSource(context.target, 'mouse');\n      _.invoke(props, 'onMouseDown', e, props);\n    },\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Slider.handledProps, props);\n  const [htmlInputProps, restProps] = partitionHTMLProps(unhandledProps);\n  const type = 'range';\n\n  // we need 2 wrappers around the slider rail, track, input and thumb slots to achieve correct component sizes\n\n  const inputElement = Box.create(input || type, {\n    defaultProps: () =>\n      getA11Props('input', {\n        ...htmlInputProps,\n        as: 'input',\n        className: sliderSlotClassNames.input,\n        min: numericMin,\n        max: numericMax,\n        step,\n        styles: resolvedStyles.input,\n        type,\n        value: numericValue,\n      }),\n    overrideProps: handleInputOverrides,\n  });\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...restProps })}>\n      <div\n        {...getA11Props('inputWrapper', {\n          className: cx(sliderSlotClassNames.inputWrapper, classes.inputWrapper),\n        })}\n      >\n        <span {...getA11Props('rail', { className: cx(sliderSlotClassNames.rail, classes.rail) })} />\n        <span\n          {...getA11Props('track', { className: cx(sliderSlotClassNames.track, classes.track) })}\n          style={{ width: valueAsPercentage }}\n        />\n        <Ref\n          innerRef={(inputElement: HTMLElement) => {\n            handleRef(inputRef, inputElement);\n            handleRef(userInputRef, inputElement);\n          }}\n        >\n          {inputElement}\n        </Ref>\n        {/* the thumb slot needs to appear after the input slot */}\n        <span\n          {...getA11Props('thumb', { className: cx(sliderSlotClassNames.thumb, classes.thumb) })}\n          style={{ [context.rtl ? 'right' : 'left']: valueAsPercentage }}\n        />\n      </div>\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'input', HTMLInputElement, SliderProps> & FluentComponentStaticProps;\n\nSlider.displayName = 'Slider';\n\nSlider.defaultProps = {\n  accessibility: sliderBehavior,\n  getA11yValueMessageOnChange: ({ value }) => String(value),\n  max: 100,\n  min: 0,\n  step: 1,\n};\nSlider.propTypes = {\n  ...commonPropTypes.createCommon({ content: false }),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fluid: PropTypes.bool,\n  getA11yValueMessageOnChange: PropTypes.func,\n  input: customPropTypes.itemShorthand,\n  inputRef: customPropTypes.ref,\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  step: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool,\n};\nSlider.handledProps = Object.keys(Slider.propTypes) as any;\n\nSlider.create = createShorthandFactory({ Component: Slider, mappedProp: 'value' });\n"],"mappings":"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"}