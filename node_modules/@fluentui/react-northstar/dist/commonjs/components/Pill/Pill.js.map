{"version":3,"file":"Pill.js","names":["pillClassName","Pill","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","parentProps","usePillContext","className","design","styles","variables","appearance","size","rectangular","children","content","disabled","action","actionable","image","icon","selectable","selectedIndicator","role","onDismiss","useAutoControlled","defaultValue","defaultSelected","value","selected","initialValue","setSelected","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","handleDismiss","e","handleClick","prevSelected","getA11yProps","useAccessibility","accessibility","pillBehavior","debugName","actionHandlers","performDismiss","performClick","mapPropsToBehavior","dismissible","Boolean","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","getSelectedIndicator","element","unstable_wrapWithFocusZone","root","onClick","createShorthand","PillIcon","defaultProps","PillImage","PillContent","PillAction","overrideProps","prevProps","as","propTypes","commonPropTypes","createCommon","customPropTypes","shorthandAllowingChildren","PropTypes","oneOf","bool","func","Object","keys"],"sources":["components/Pill/Pill.tsx"],"sourcesContent":["import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport { Accessibility, AriaRole, pillBehavior, PillBehaviorProps } from '@fluentui/accessibility';\nimport { UIComponentProps, ContentComponentProps, commonPropTypes, SizeValue, createShorthand } from '../../utils';\nimport { ShorthandValue, FluentComponentStaticProps, ComponentEventHandler } from '../../types';\nimport { BoxProps } from '../Box/Box';\n\nimport {\n  useAccessibility,\n  getElementType,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  useAutoControlled,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { PillContent, PillContentProps } from './PillContent';\nimport { PillActionProps, PillAction } from './PillAction';\nimport { usePillContext } from './pillContext';\nimport { PillImageProps, PillImage } from './PillImage';\nimport { PillIcon, PillIconProps } from './PillIcon';\nimport { CheckmarkCircleIcon, AcceptIcon } from '@fluentui/react-icons-northstar';\n\nexport interface PillProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<PillBehaviorProps>;\n\n  /**\n   * A Pill can be sized.\n   */\n  size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;\n\n  /**\n   * A Pill can be rectangular\n   */\n  rectangular?: boolean;\n\n  /**\n   * A Pill can be filled, inverted or outline\n   */\n  appearance?: 'filled' | 'inverted' | 'outline';\n\n  /**\n   * A Pill can be disbled\n   */\n  disabled?: boolean;\n\n  /**\n   * A Pill can be actionable\n   */\n  actionable?: boolean;\n\n  /**\n   * A PillAction shorthand for the action slot.\n   */\n  action?: ShorthandValue<PillActionProps>;\n\n  /**\n   * A PillAction shorthand for the action slot.\n   */\n  icon?: ShorthandValue<PillIconProps>;\n\n  /**\n   * A PillImage shorthand for the image slot.\n   */\n  image?: ShorthandValue<PillImageProps>;\n\n  /**\n   * Called after user will dismiss the Pill.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onDismiss?: ComponentEventHandler<PillProps>;\n\n  /**\n   * A Pill can be selectable\n   */\n  selectable?: boolean;\n\n  /**\n   * A Pill state for selection\n   */\n  selected?: boolean;\n\n  /**\n   * A Pill can be selected by default\n   */\n  defaultSelected?: boolean;\n\n  /**\n   * A Pill can have custom selected indicator\n   */\n  selectedIndicator?: ShorthandValue<PillIconProps>;\n\n  /**\n   * Called after user change selected state\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onSelectionChange?: ComponentEventHandler<PillProps>;\n\n  /**\n   * Role to be set in the pill root element\n   */\n  role?: AriaRole;\n}\n\nexport type PillStylesProps = Required<\n  Pick<PillProps, 'appearance' | 'size' | 'rectangular' | 'disabled' | 'selectable' | 'selected' | 'actionable'>\n>;\n\nexport const pillClassName = 'ui-pill';\n\n/**\n * Pills should be used when representing an input, as a way to filter content, or to represent an attribute.\n */\nexport const Pill = (React.forwardRef<HTMLSpanElement, PillProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Pill.displayName, context.telemetry);\n  setStart();\n\n  const parentProps = usePillContext();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    appearance,\n    size,\n    rectangular,\n    children,\n    content,\n    disabled,\n    action,\n    actionable,\n    image,\n    icon,\n    selectable,\n    selectedIndicator,\n    role,\n    onDismiss,\n  } = props;\n\n  const [selected, setSelected] = useAutoControlled({\n    defaultValue: props.defaultSelected,\n    value: props.selected,\n    initialValue: false,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Pill.handledProps, props);\n\n  const handleDismiss = e => {\n    _.invoke(props, 'onDismiss', e, props);\n  };\n\n  const handleClick = e => {\n    if (selectable) {\n      setSelected(prevSelected => !prevSelected);\n      _.invoke(props, 'onSelectionChange', e, { ...props, selected: !selected });\n    }\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const getA11yProps = useAccessibility(props.accessibility || parentProps.pillBehavior || pillBehavior, {\n    debugName: Pill.displayName,\n    actionHandlers: {\n      performDismiss: handleDismiss,\n      performClick: handleClick,\n    },\n    mapPropsToBehavior: () => ({\n      actionable,\n      selectable,\n      selected,\n      role,\n      dismissible: Boolean(onDismiss),\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillStylesProps>(Pill.displayName, {\n    className: pillClassName,\n    mapPropsToStyles: () => ({\n      appearance,\n      size,\n      rectangular,\n      disabled,\n      selectable,\n      selected,\n      actionable,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getSelectedIndicator: () => ShorthandValue<PillIconProps> = () => {\n    if (!!selectedIndicator) {\n      return selectedIndicator;\n    }\n\n    if (!!image) {\n      return <CheckmarkCircleIcon />;\n    }\n\n    return <AcceptIcon />;\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...((actionable || selectable) && { onClick: handleClick }),\n        ...unhandledProps,\n      })}\n    >\n      {selectable &&\n        selected &&\n        createShorthand(PillIcon, getSelectedIndicator(), {\n          defaultProps: () => ({ size, selectable, image }),\n        })}\n      {!selected &&\n        createShorthand(PillImage, image, {\n          defaultProps: () => ({ size }),\n        })}\n      {!selected &&\n        createShorthand(PillIcon, icon, {\n          defaultProps: () => ({ size }),\n        })}\n      {createShorthand(PillContent, (content as ShorthandValue<PillContentProps>) || {}, {\n        defaultProps: () => ({\n          children,\n          size,\n          actionable,\n        }),\n      })}\n      {Boolean(onDismiss) &&\n        createShorthand(PillAction, action || {}, {\n          overrideProps: (prevProps: PillActionProps & { onClick: (e: React.MouseEvent) => void }) => ({\n            onClick: e => {\n              _.invoke(prevProps, 'onClick', e);\n              handleDismiss(e);\n            },\n          }),\n        })}\n    </ElementType>,\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, PillProps> & FluentComponentStaticProps<PillProps>;\n\nPill.defaultProps = {\n  as: 'span' as const,\n  accessibility: pillBehavior,\n};\n\nPill.propTypes = {\n  ...commonPropTypes.createCommon(),\n  content: customPropTypes.shorthandAllowingChildren,\n  size: PropTypes.oneOf<'small' | 'smaller' | 'medium'>(['small', 'smaller', 'medium']),\n  rectangular: PropTypes.bool,\n  disabled: PropTypes.bool,\n  appearance: PropTypes.oneOf<'filled' | 'inverted' | 'outline'>(['filled', 'inverted', 'outline']),\n  actionable: PropTypes.bool,\n  action: customPropTypes.shorthandAllowingChildren,\n  onDismiss: PropTypes.func,\n  selectedIndicator: customPropTypes.shorthandAllowingChildren,\n  selectable: PropTypes.bool,\n  selected: PropTypes.bool,\n  defaultSelected: PropTypes.bool,\n  image: customPropTypes.shorthandAllowingChildren,\n};\n\nPill.displayName = 'Pill';\n\nPill.handledProps = Object.keys(Pill.propTypes) as any;\n"],"mappings":"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"}