{"version":3,"file":"formFieldBase.js","names":["formFieldBaseClassName","_FormFieldBase","compose","props","ref","composeOptions","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","message","inline","errorMessage","control","label","className","design","styles","variables","slotProps","resolveSlotProps","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","messageId","React","useRef","current","getOrGenerateIdFromShorthand","labelId","useStyles","mapPropsToInlineStyles","rtl","unstable_props","classes","getA11yProps","useAccessibility","accessibility","debugName","mapPropsToBehavior","hasErrorMessage","childProps","useMemo","element","root","createShorthand","slots","defaultProps","id","error","FormLabel","FormMessage","Box","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon","children","PropTypes","bool","customPropTypes","itemShorthand","formFieldBehavior"],"sources":["components/Form/utils/formFieldBase.tsx"],"sourcesContent":["import { Accessibility, FormFieldBehaviorProps, formFieldBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { UIComponentProps, commonPropTypes, getOrGenerateIdFromShorthand, createShorthand } from '../../../utils';\nimport { ShorthandValue } from '../../../types';\nimport { Box, BoxProps } from '../../Box/Box';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useTelemetry,\n  useAccessibility,\n  useFluentContext,\n  compose,\n  useStyles,\n} from '@fluentui/react-bindings';\nimport { FormLabel, FormLabelProps } from '../FormLabel';\nimport { FormMessage, FormMessageProps } from '../FormMessage';\nimport { FormFieldBaseValue, FormFieldBaseProvider } from './formFieldBaseContext';\n\nexport interface FormFieldBaseProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<FormFieldBehaviorProps>;\n\n  /** A field can have its label next to instead of above it. */\n  inline?: boolean;\n\n  /** A control for the form field. */\n  control?: ShorthandValue<BoxProps>;\n\n  /** A label for the form field. */\n  label?: ShorthandValue<FormLabelProps>;\n\n  /** Text message that will be displayed below the control (can be used for error, warning, success messages). */\n  message?: ShorthandValue<FormMessageProps>;\n\n  /** Message to be shown when input has error */\n  errorMessage?: ShorthandValue<FormMessageProps>;\n}\n\nexport const formFieldBaseClassName = 'ui-form__field__base';\nexport type FormFieldBaseStylesProps = never;\n\n/**\n * A FormFiedBase represents a Form element containing a label and an input.\n */\nexport const _FormFieldBase = compose<'div', FormFieldBaseProps, {}, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { message, inline, errorMessage, control, label, className, design, styles, variables } = props;\n\n    const slotProps = composeOptions.resolveSlotProps<FormFieldBaseProps>(props);\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    const messageId = React.useRef<string>();\n    messageId.current = getOrGenerateIdFromShorthand('error-message-', errorMessage || message, messageId.current);\n    const labelId = React.useRef<string>();\n    labelId.current = getOrGenerateIdFromShorthand('form-label-', label, labelId.current);\n\n    const { classes } = useStyles<FormFieldBaseStylesProps>(_FormFieldBase.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const getA11yProps = useAccessibility<FormFieldBehaviorProps>(props.accessibility, {\n      debugName: composeOptions.displayName,\n      mapPropsToBehavior: () => ({\n        hasErrorMessage: !!errorMessage,\n        messageId: messageId.current,\n        labelId: labelId.current,\n      }),\n      rtl: context.rtl,\n    });\n\n    const childProps: FormFieldBaseValue = React.useMemo(\n      () => ({\n        labelId: labelId.current,\n      }),\n      // TODO: create hooks for id to avoid disbaling esling for accessing the value of refs\n      // eslint-disable-next-line\n      [labelId.current],\n    );\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n        })}\n      >\n        {createShorthand(composeOptions.slots.label, label, {\n          defaultProps: () =>\n            getA11yProps('label', {\n              id: labelId.current,\n              inline,\n              ...slotProps.label,\n            }),\n        })}\n        {/**\n         * When there's a message for the input the labelId and messageId should be consistent in the\n         * aria-labelledby attribute (aria-labelledby=\"labelID messageID\") therefore we need to pass it down\n         * for components like input that are generating its own label internally\n         */}\n        <FormFieldBaseProvider value={childProps}>\n          {createShorthand(composeOptions.slots.control, control || {}, {\n            defaultProps: () =>\n              getA11yProps('control', {\n                error: !!errorMessage || null,\n                ref,\n                ...unhandledProps,\n                ...slotProps.control,\n              }),\n          })}\n        </FormFieldBaseProvider>\n        {createShorthand(composeOptions.slots.message, errorMessage || message, {\n          defaultProps: () =>\n            getA11yProps('message', {\n              id: messageId.current,\n              ...slotProps.message,\n            }),\n        })}\n      </ElementType>\n    );\n    setEnd();\n    return element;\n  },\n  {\n    className: formFieldBaseClassName,\n    displayName: 'FormFieldBase',\n    slots: {\n      label: FormLabel,\n      message: FormMessage,\n      control: Box,\n    },\n    handledProps: [\n      'as',\n      'accessibility',\n      'className',\n      'variables',\n      'design',\n      'styles',\n      'inline',\n      'errorMessage',\n      'message',\n    ],\n    shorthandConfig: {\n      mappedProp: 'control',\n    },\n  },\n);\n\n_FormFieldBase.propTypes = {\n  ...commonPropTypes.createCommon({ children: false }),\n  inline: PropTypes.bool,\n  message: customPropTypes.itemShorthand,\n  errorMessage: customPropTypes.itemShorthand,\n};\n\n_FormFieldBase.defaultProps = {\n  accessibility: formFieldBehavior,\n};\n"],"mappings":"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"}