{"version":3,"file":"FormFieldCustom.js","names":["formFieldCustomClassName","FormFieldCustom","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","children","required","type","className","design","styles","variables","inline","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","accessibility","debugName","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","content","id","PropTypes","string","bool","name","Object","keys","defaultProps","formFieldBehavior"],"sources":["components/Form/FormFieldCustom.tsx"],"sourcesContent":["import { Accessibility, FormFieldBehaviorProps, formFieldBehavior } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes } from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useTelemetry,\n  useFluentContext,\n  useStyles,\n  useAccessibility,\n} from '@fluentui/react-bindings';\n\nexport interface FormFieldCustomProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<FormFieldBehaviorProps>;\n\n  /** The HTML input id. This will be set on the control element and will be use for linking it with the label for correct accessibility. */\n  id?: string;\n\n  /** A field can have its label next to instead of above it. */\n  inline?: boolean;\n\n  /** The HTML input name. */\n  name?: string;\n\n  /** A field can show that input is mandatory. */\n  required?: boolean;\n\n  /** The HTML input type. */\n  type?: string;\n}\n\nexport const formFieldCustomClassName = 'ui-form__fieldcustom';\n\nexport type FormFieldCustomStylesProps = Required<Pick<FormFieldCustomProps, 'type' | 'inline' | 'required'>>;\n\n/**\n * A FormFieldCustom represents a Form element containing a label and an input.\n */\nexport const FormFieldCustom = (React.forwardRef<HTMLDivElement, FormFieldCustomProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(FormFieldCustom.displayName, context.telemetry);\n  setStart();\n\n  const { children, required, type, className, design, styles, variables, inline } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(FormFieldCustom.handledProps, props);\n\n  const getA11yProps = useAccessibility<FormFieldBehaviorProps>(props.accessibility, {\n    debugName: FormFieldCustom.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<FormFieldCustomStylesProps>(FormFieldCustom.displayName, {\n    className: formFieldCustomClassName,\n    mapPropsToStyles: () => ({\n      type,\n      inline,\n      required,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as React.FC<FormFieldCustomProps> & FluentComponentStaticProps<FormFieldCustomProps>;\n\nFormFieldCustom.displayName = 'FormFieldCustom';\n\nFormFieldCustom.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n    children: false,\n  }),\n  id: PropTypes.string,\n  inline: PropTypes.bool,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nFormFieldCustom.handledProps = Object.keys(FormFieldCustom.propTypes) as any;\n\nFormFieldCustom.defaultProps = {\n  accessibility: formFieldBehavior,\n};\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AAEA;AAOkC;AAAA;AAwB3B,IAAMA,wBAAwB,GAAG,sBAAsB;AAAC;AAI/D;AACA;AACA;AACO,IAAMC,eAAe,gBAAIC,KAAK,CAACC,UAAU,CAAuC,UAACC,KAAK,EAAEC,GAAG,EAAK;EACrG,IAAMC,OAAO,GAAG,IAAAC,+BAAgB,GAAE;EAClC,oBAA6B,IAAAC,2BAAY,EAACP,eAAe,CAACQ,WAAW,EAAEH,OAAO,CAACI,SAAS,CAAC;IAAjFC,QAAQ,iBAARA,QAAQ;IAAEC,MAAM,iBAANA,MAAM;EACxBD,QAAQ,EAAE;EAEV,IAAQE,QAAQ,GAAmET,KAAK,CAAhFS,QAAQ;IAAEC,QAAQ,GAAyDV,KAAK,CAAtEU,QAAQ;IAAEC,IAAI,GAAmDX,KAAK,CAA5DW,IAAI;IAAEC,SAAS,GAAwCZ,KAAK,CAAtDY,SAAS;IAAEC,MAAM,GAAgCb,KAAK,CAA3Ca,MAAM;IAAEC,MAAM,GAAwBd,KAAK,CAAnCc,MAAM;IAAEC,SAAS,GAAaf,KAAK,CAA3Be,SAAS;IAAEC,MAAM,GAAKhB,KAAK,CAAhBgB,MAAM;EAE9E,IAAMC,WAAW,GAAG,IAAAC,6BAAc,EAAClB,KAAK,CAAC;EACzC,IAAMmB,cAAc,GAAG,IAAAC,gCAAiB,EAACvB,eAAe,CAACwB,YAAY,EAAErB,KAAK,CAAC;EAE7E,IAAMsB,YAAY,GAAG,IAAAC,+BAAgB,EAAyBvB,KAAK,CAACwB,aAAa,EAAE;IACjFC,SAAS,EAAE5B,eAAe,CAACQ,WAAW;IACtCqB,GAAG,EAAExB,OAAO,CAACwB;EACf,CAAC,CAAC;EAEF,iBAAoB,IAAAC,wBAAS,EAA6B9B,eAAe,CAACQ,WAAW,EAAE;MACrFO,SAAS,EAAEhB,wBAAwB;MACnCgC,gBAAgB,EAAE;QAAA,OAAO;UACvBjB,IAAI,EAAJA,IAAI;UACJK,MAAM,EAANA,MAAM;UACNN,QAAQ,EAARA;QACF,CAAC;MAAA,CAAC;MACFmB,sBAAsB,EAAE;QAAA,OAAO;UAC7BjB,SAAS,EAATA,SAAS;UACTC,MAAM,EAANA,MAAM;UACNC,MAAM,EAANA,MAAM;UACNC,SAAS,EAATA;QACF,CAAC;MAAA,CAAC;MACFW,GAAG,EAAExB,OAAO,CAACwB;IACf,CAAC,CAAC;IAdMI,OAAO,cAAPA,OAAO;EAgBf,IAAMC,OAAO,gBACX,oBAAC,WAAW,EACNT,YAAY,CAAC,MAAM;IACrBV,SAAS,EAAEkB,OAAO,CAACE,IAAI;IACvB/B,GAAG,EAAHA;EAAG,GACAkB,cAAc,EACjB,EAEDV,QAAQ,CAEZ;EACDD,MAAM,EAAE;EACR,OAAOuB,OAAO;AAChB,CAAC,CAAkG;AAAC;AAEpGlC,eAAe,CAACQ,WAAW,GAAG,iBAAiB;AAE/CR,eAAe,CAACoC,SAAS,qBACpBC,sBAAe,CAACC,YAAY,CAAC;EAC9BC,OAAO,EAAE,KAAK;EACd3B,QAAQ,EAAE;AACZ,CAAC,CAAC;EACF4B,EAAE,EAAEC,SAAS,CAACC,MAAM;EACpBvB,MAAM,EAAEsB,SAAS,CAACE,IAAI;EACtBC,IAAI,EAAEH,SAAS,CAACC,MAAM;EACtB7B,QAAQ,EAAE4B,SAAS,CAACE,IAAI;EACxB7B,IAAI,EAAE2B,SAAS,CAACC;AAAM,EACvB;AAED1C,eAAe,CAACwB,YAAY,GAAGqB,MAAM,CAACC,IAAI,CAAC9C,eAAe,CAACoC,SAAS,CAAQ;AAE5EpC,eAAe,CAAC+C,YAAY,GAAG;EAC7BpB,aAAa,EAAEqB;AACjB,CAAC"}