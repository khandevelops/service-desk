{"version":3,"file":"SplitButtonToggle.js","names":["splitButtonToggleClassName","SplitButtonToggle","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","as","children","content","disabled","primary","className","size","flat","styles","variables","design","hasChildren","childrenExist","getA11Props","useAccessibility","debugName","mapPropsToBehavior","String","actionHandlers","performClick","event","preventDefault","handleClick","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","unhandledProps","useUnhandledProps","handledProps","ElementType","getElementType","e","result","rtlTextContainer","getAttributes","forElements","onClick","root","defaultProps","buttonBehavior","propTypes","commonPropTypes","createCommon","PropTypes","bool","func","customPropTypes","every","disallow","secondary","Object","keys","create","createShorthandFactory","Component","mappedProp"],"sources":["components/SplitButton/SplitButtonToggle.tsx"],"sourcesContent":["import { Accessibility, buttonBehavior, ButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n  SizeValue,\n} from '../../utils';\n\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\n\nexport interface SplitButtonToggleProps extends UIComponentProps, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ButtonBehaviorProps>;\n\n  /** A split button toggle can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /**\n   * Called after a user clicks the button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<SplitButtonToggleProps>;\n\n  /** A split button toggle can emphasize that it represents the primary action. */\n  primary?: boolean;\n\n  /** A split button toggle can emphasize that it represents an alternative action. */\n  secondary?: boolean;\n\n  /** A split button toggle can be sized */\n  size?: SizeValue;\n\n  /** A split button toggle can be elevated or flat. */\n  flat?: boolean;\n}\n\nexport type SplitButtonToggleStylesProps = Pick<SplitButtonToggleProps, 'primary' | 'disabled' | 'size' | 'flat'>;\nexport const splitButtonToggleClassName = 'ui-splitbutton__toggle';\n\n/**\n * A SplitToggleButton allows users to customize the toggle button inside the SplitButton.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\n\nexport const SplitButtonToggle = (React.forwardRef<HTMLButtonElement, SplitButtonToggleProps & { as: React.ReactNode }>(\n  (props, ref) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(SplitButtonToggle.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      as,\n      children,\n      content,\n      disabled,\n      primary,\n      className,\n      size,\n      flat,\n      styles,\n      variables,\n      design,\n    } = props;\n\n    const hasChildren = childrenExist(children);\n\n    const getA11Props = useAccessibility(accessibility, {\n      debugName: SplitButtonToggle.displayName,\n      mapPropsToBehavior: () => ({\n        as: String(as),\n        disabled,\n      }),\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n      },\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<SplitButtonToggleStylesProps>(SplitButtonToggle.displayName, {\n      className: splitButtonToggleClassName,\n      mapPropsToStyles: () => ({\n        primary,\n        disabled,\n        size,\n        flat,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    });\n\n    const unhandledProps = useUnhandledProps(SplitButtonToggle.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const handleClick = (e: React.SyntheticEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const result = (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...getA11Props('root', {\n          onClick: handleClick,\n          disabled,\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {hasChildren ? children : content}\n      </ElementType>\n    );\n\n    setEnd();\n\n    return result;\n  },\n) as unknown) as ForwardRefWithAs<'button', HTMLButtonElement, SplitButtonToggleProps> &\n  FluentComponentStaticProps<SplitButtonToggleProps>;\n\nSplitButtonToggle.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n};\n\nSplitButtonToggle.displayName = 'SplitButtonToggle';\n\nSplitButtonToggle.propTypes = {\n  ...commonPropTypes.createCommon({}),\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  size: customPropTypes.size,\n  flat: PropTypes.bool,\n};\n\nSplitButtonToggle.handledProps = Object.keys(SplitButtonToggle.propTypes) as any;\n\nSplitButtonToggle.create = createShorthandFactory({ Component: SplitButtonToggle, mappedProp: 'content' });\n"],"mappings":"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"}