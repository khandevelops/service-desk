{"version":3,"file":"SplitButtonDivider.js","names":["SplitButtonDividerClassName","SplitButtonDivider","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","className","design","styles","variables","accessibility","ElementType","getElementType","primary","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","debugName","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","PropTypes","bool","Object","keys"],"sources":["components/SplitButton/SplitButtonDivider.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport {\n  useTelemetry,\n  useAccessibility,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  ColorComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface SplitButtonDividerProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ColorComponentProps,\n    ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A split button divider can be formatted to show different levels of emphasis. */\n  primary?: boolean;\n}\n\nexport type SplitButtonDividerStylesProps = Required<Pick<SplitButtonDividerProps, 'primary'>>;\n\nexport const SplitButtonDividerClassName = 'ui-splitButtonDivider';\n\n/**\n * A SplitButtonDivider visually segments content.\n */\nexport const SplitButtonDivider = (React.forwardRef<HTMLDivElement, SplitButtonDividerProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(SplitButtonDivider.displayName, context.telemetry);\n  setStart();\n  const { className, design, styles, variables, accessibility } = props;\n  const ElementType = getElementType(props);\n  const { primary } = props;\n  const unhandledProps = useUnhandledProps(SplitButtonDivider.handledProps, props);\n  const getA11yProps = useAccessibility<never>(accessibility, {\n    debugName: SplitButtonDivider.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<SplitButtonDividerStylesProps>(SplitButtonDivider.displayName, {\n    className: SplitButtonDividerClassName,\n    mapPropsToStyles: () => ({\n      primary,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    />\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, SplitButtonDividerProps> &\n  FluentComponentStaticProps<SplitButtonDividerProps>;\n\nSplitButtonDivider.displayName = 'SplitButtonDivider';\n\nSplitButtonDivider.propTypes = {\n  ...commonPropTypes.createCommon(),\n  primary: PropTypes.bool,\n};\n\nSplitButtonDivider.handledProps = Object.keys(SplitButtonDivider.propTypes) as any;\n"],"mappings":";;;;AAAA;AACA;AAEA;AAUA;AAMqB;AAAA;AAoBd,IAAMA,2BAA2B,GAAG,uBAAuB;;AAElE;AACA;AACA;AAFA;AAGO,IAAMC,kBAAkB,gBAAIC,KAAK,CAACC,UAAU,CAA0C,UAACC,KAAK,EAAEC,GAAG,EAAK;EAC3G,IAAMC,OAAO,GAAG,IAAAC,+BAAgB,GAAE;EAClC,oBAA6B,IAAAC,2BAAY,EAACP,kBAAkB,CAACQ,WAAW,EAAEH,OAAO,CAACI,SAAS,CAAC;IAApFC,QAAQ,iBAARA,QAAQ;IAAEC,MAAM,iBAANA,MAAM;EACxBD,QAAQ,EAAE;EACV,IAAQE,SAAS,GAA+CT,KAAK,CAA7DS,SAAS;IAAEC,MAAM,GAAuCV,KAAK,CAAlDU,MAAM;IAAEC,MAAM,GAA+BX,KAAK,CAA1CW,MAAM;IAAEC,SAAS,GAAoBZ,KAAK,CAAlCY,SAAS;IAAEC,aAAa,GAAKb,KAAK,CAAvBa,aAAa;EAC3D,IAAMC,WAAW,GAAG,IAAAC,6BAAc,EAACf,KAAK,CAAC;EACzC,IAAQgB,OAAO,GAAKhB,KAAK,CAAjBgB,OAAO;EACf,IAAMC,cAAc,GAAG,IAAAC,gCAAiB,EAACrB,kBAAkB,CAACsB,YAAY,EAAEnB,KAAK,CAAC;EAChF,IAAMoB,YAAY,GAAG,IAAAC,+BAAgB,EAAQR,aAAa,EAAE;IAC1DS,SAAS,EAAEzB,kBAAkB,CAACQ,WAAW;IACzCkB,GAAG,EAAErB,OAAO,CAACqB;EACf,CAAC,CAAC;EACF,iBAAoB,IAAAC,wBAAS,EAAgC3B,kBAAkB,CAACQ,WAAW,EAAE;MAC3FI,SAAS,EAAEb,2BAA2B;MACtC6B,gBAAgB,EAAE;QAAA,OAAO;UACvBT,OAAO,EAAPA;QACF,CAAC;MAAA,CAAC;MACFU,sBAAsB,EAAE;QAAA,OAAO;UAC7BjB,SAAS,EAATA,SAAS;UACTC,MAAM,EAANA,MAAM;UACNC,MAAM,EAANA,MAAM;UACNC,SAAS,EAATA;QACF,CAAC;MAAA,CAAC;MACFW,GAAG,EAAErB,OAAO,CAACqB;IACf,CAAC,CAAC;IAZMI,OAAO,cAAPA,OAAO;EAcf,IAAMC,OAAO,gBACX,oBAAC,WAAW,EACNR,YAAY,CAAC,MAAM;IACrBX,SAAS,EAAEkB,OAAO,CAACE,IAAI;IACvB5B,GAAG,EAAHA;EAAG,GACAgB,cAAc,EACjB,CAEL;EACDT,MAAM,EAAE;EACR,OAAOoB,OAAO;AAChB,CAAC,CACoD;AAAC;AAEtD/B,kBAAkB,CAACQ,WAAW,GAAG,oBAAoB;AAErDR,kBAAkB,CAACiC,SAAS,qBACvBC,sBAAe,CAACC,YAAY,EAAE;EACjChB,OAAO,EAAEiB,SAAS,CAACC;AAAI,EACxB;AAEDrC,kBAAkB,CAACsB,YAAY,GAAGgB,MAAM,CAACC,IAAI,CAACvC,kBAAkB,CAACiC,SAAS,CAAQ"}