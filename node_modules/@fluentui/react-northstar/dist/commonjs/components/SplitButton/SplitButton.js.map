{"version":3,"file":"SplitButton.js","names":["splitButtonClassName","SplitButton","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","button","disabled","menu","primary","secondary","toggleButton","size","position","align","flipBoundary","flat","overflowBoundary","popperRef","positionFixed","offset","unstable_disableTether","unstable_pinned","autoSize","className","design","styles","accessibility","variables","targetRef","useRef","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","useAutoControlled","defaultValue","defaultOpen","value","open","initialValue","setOpen","useState","isFromKeyboard","setIsFromKeyboard","getA11yProps","useAccessibility","debugName","mapPropsToBehavior","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleMenuButtonOverrides","predefinedProps","onMenuItemClick","e","menuItemProps","onOpenChange","popupProps","stopPropagation","handleMenuButtonTriggerOverrides","onClick","buttonProps","onFocus","checkIsFromKeyboard","element","root","MenuButton","create","defaultProps","on","trigger","createShorthand","Button","menuButton","overrideProps","target","current","SplitButtonDivider","SplitButtonToggle","isOpen","Toggle","propTypes","commonPropTypes","createCommon","content","customPropTypes","itemShorthand","PropTypes","bool","oneOfType","arrayOf","itemShorthandWithoutJSX","onMainButtonClick","func","every","disallow","oneOf","POSITIONS","ALIGNMENTS","object","number","AUTOSIZES","splitButtonBehavior","Object","keys","createShorthandFactory","Component"],"sources":["components/SplitButton/SplitButton.tsx"],"sourcesContent":["import { Accessibility, splitButtonBehavior, SplitButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { ALIGNMENTS, POSITIONS, AUTOSIZES } from '../../utils/positioner';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  isFromKeyboard as checkIsFromKeyboard,\n  commonPropTypes,\n  SizeValue,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { SplitButtonToggle, SplitButtonToggleProps } from './SplitButtonToggle';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { MenuButton, MenuButtonProps } from '../MenuButton/MenuButton';\nimport { MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PopupProps } from '../Popup/Popup';\nimport { SplitButtonDivider } from './SplitButtonDivider';\nimport { Ref } from '@fluentui/react-component-ref';\nimport { PositioningProps, AutoSize } from '../../utils/positioner/types';\n\nimport {\n  useTelemetry,\n  useAutoControlled,\n  useAccessibility,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface SplitButtonProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<SplitButtonBehaviorProps>;\n\n  /** Shorthand for the main button. */\n  button?: ShorthandValue<ButtonProps>;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** A split button can be disabled. */\n  disabled?: boolean;\n\n  /** Shorthand for the menu. */\n  menu?: ShorthandValue<MenuProps> | ShorthandCollection<MenuItemProps>;\n\n  /**\n   * Called after user's click on the main button.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMainButtonClick?: ComponentEventHandler<ButtonProps>;\n\n  /**\n   * Called after user's click on a menu item.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMenuItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: ComponentEventHandler<SplitButtonProps>;\n\n  /** Defines whether menu is displayed. */\n  open?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  primary?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  secondary?: boolean;\n\n  /** A split button can be sized */\n  size?: SizeValue;\n\n  /** A button can be elevated or flat. */\n  flat?: boolean;\n\n  /** Shorthand for the toggle button. */\n  toggleButton?: ShorthandValue<SplitButtonToggleProps>;\n}\n\nexport const splitButtonClassName = 'ui-splitbutton';\n\nexport type SplitButtonStylesProps = Required<Pick<SplitButtonProps, 'size'>> & {\n  flat: boolean;\n  isFromKeyboard: boolean;\n};\n\n/**\n * A SplitButton enables users to take one of several related actions, one being dominant and rest being displayed in a menu.\n */\nexport const SplitButton = (React.forwardRef<HTMLDivElement, SplitButtonProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(SplitButton.displayName, context.telemetry);\n  setStart();\n\n  const {\n    button,\n    disabled,\n    menu,\n    primary,\n    secondary,\n    toggleButton,\n    size,\n    position,\n    align,\n    flipBoundary,\n    flat,\n    overflowBoundary,\n    popperRef,\n    positionFixed,\n    offset,\n    unstable_disableTether,\n    unstable_pinned,\n    autoSize,\n    className,\n    design,\n    styles,\n    accessibility,\n    variables,\n  } = props;\n\n  const targetRef = React.useRef<HTMLDivElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(SplitButton.handledProps, props);\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n    initialValue: false,\n  });\n\n  const [isFromKeyboard, setIsFromKeyboard] = React.useState<boolean>(false);\n\n  const getA11yProps = useAccessibility<SplitButtonBehaviorProps>(accessibility, {\n    debugName: SplitButton.displayName,\n    mapPropsToBehavior: () => ({\n      open,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<SplitButtonStylesProps>(SplitButton.displayName, {\n    className: splitButtonClassName,\n    mapPropsToStyles: () => ({\n      isFromKeyboard,\n      size,\n      flat,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleMenuButtonOverrides = (predefinedProps: MenuButtonProps) => ({\n    onMenuItemClick: (e: React.SyntheticEvent, menuItemProps: MenuItemProps) => {\n      setOpen(false);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: false });\n\n      _.invoke(predefinedProps, 'onMenuItemClick', e, menuItemProps);\n      _.invoke(props, 'onMenuItemClick', e, menuItemProps);\n    },\n    onOpenChange: (e: React.SyntheticEvent, popupProps: PopupProps) => {\n      e.stopPropagation();\n      setOpen(popupProps.open);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: popupProps.open });\n    },\n  });\n\n  const handleMenuButtonTriggerOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      _.invoke(props, 'onMainButtonClick', e, buttonProps);\n    },\n    onFocus: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, buttonProps);\n      setIsFromKeyboard(checkIsFromKeyboard());\n    },\n  });\n\n  const element = (\n    <Ref innerRef={targetRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {MenuButton.create(\n          {},\n          {\n            defaultProps: () =>\n              getA11yProps('menuButton', {\n                menu,\n                on: [],\n                open,\n                trigger: createShorthand(Button, button, {\n                  defaultProps: () => ({\n                    styles: resolvedStyles.menuButton,\n                    primary,\n                    secondary,\n                    disabled,\n                  }),\n                  overrideProps: handleMenuButtonTriggerOverrides,\n                }),\n                target: targetRef.current,\n                position,\n                align,\n                flipBoundary,\n                overflowBoundary,\n                popperRef,\n                positionFixed,\n                offset,\n                unstable_disableTether,\n                unstable_pinned,\n                autoSize,\n              }),\n            overrideProps: handleMenuButtonOverrides,\n          },\n        )}\n\n        {createShorthand(\n          SplitButtonDivider,\n          {},\n          {\n            defaultProps: () =>\n              getA11yProps('divider', {\n                primary,\n              }),\n          },\n        )}\n        {SplitButtonToggle.create(toggleButton, {\n          defaultProps: () =>\n            getA11yProps('toggleButton', {\n              disabled,\n              primary,\n              secondary,\n              size,\n              flat,\n            }),\n          overrideProps: (predefinedProps: ButtonProps) => ({\n            onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n              _.invoke(predefinedProps, 'onClick', e, buttonProps);\n\n              setOpen(isOpen => {\n                const open = !isOpen;\n                _.invoke(props, 'onOpenChange', e, { ...props, open });\n                return open;\n              });\n            },\n          }),\n        })}\n      </ElementType>\n    </Ref>\n  );\n\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, SplitButtonProps> &\n  FluentComponentStaticProps<SplitButtonProps> & {\n    Toggle: typeof SplitButtonToggle;\n  };\n\nSplitButton.displayName = 'SplitButton';\n\nSplitButton.Toggle = SplitButtonToggle;\n\nSplitButton.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  button: customPropTypes.itemShorthand,\n  defaultOpen: PropTypes.bool,\n  menu: PropTypes.oneOfType([\n    customPropTypes.itemShorthand,\n    PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX),\n  ]),\n  onMainButtonClick: PropTypes.func,\n  onMenuItemClick: PropTypes.func,\n  onOpenChange: PropTypes.func,\n  open: PropTypes.bool,\n  size: customPropTypes.size,\n  flat: PropTypes.bool,\n  popperRef: customPropTypes.ref,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  toggleButton: customPropTypes.itemShorthand,\n  position: PropTypes.oneOf(POSITIONS),\n  align: PropTypes.oneOf(ALIGNMENTS),\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  positionFixed: PropTypes.bool,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n  unstable_pinned: PropTypes.bool,\n  autoSize: PropTypes.oneOf<AutoSize>(AUTOSIZES),\n};\n\nSplitButton.defaultProps = {\n  accessibility: splitButtonBehavior,\n  toggleButton: {},\n  position: 'below',\n  align: 'start',\n};\n\nSplitButton.handledProps = Object.keys(SplitButton.propTypes) as any;\n\nSplitButton.create = createShorthandFactory({\n  Component: SplitButton,\n});\n"],"mappings":"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"}