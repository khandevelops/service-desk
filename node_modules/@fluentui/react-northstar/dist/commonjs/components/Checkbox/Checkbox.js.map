{"version":3,"file":"Checkbox.js","names":["checkboxClassName","checkboxSlotClassNames","label","indicator","Checkbox","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","checked","className","defaultChecked","design","disabled","labelPosition","styles","toggle","variables","useStateManager","createCheckboxManager","mapPropsToInitialState","mapPropsToState","state","actions","getA11Props","useAccessibility","accessibility","debugName","mapPropsToBehavior","actionHandlers","performClick","e","preventDefault","handleClick","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","handleChange","labelElement","Text","create","defaultProps","element","root","onClick","onChange","Box","checkbox","checkboxBehavior","propTypes","commonPropTypes","createCommon","content","PropTypes","oneOf","bool","customPropTypes","shorthandAllowingChildren","itemShorthand","func","Object","keys","createShorthandFactory","Component","mappedProp"],"sources":["components/Checkbox/Checkbox.tsx"],"sourcesContent":["import { Accessibility, checkboxBehavior, CheckboxBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStateManager,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { createCheckboxManager } from '@fluentui/state';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { createShorthandFactory, ChildrenComponentProps, commonPropTypes, UIComponentProps } from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Text, TextProps } from '../Text/Text';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\n\nexport interface CheckboxSlotClassNames {\n  label: string;\n  indicator: string;\n}\n\nexport interface CheckboxProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<CheckboxBehaviorProps>;\n\n  /** A checkbox can be checked by default. */\n  defaultChecked?: SupportedIntrinsicInputProps['defaultChecked'];\n\n  /** A checkbox's checked state can be controlled. */\n  checked?: SupportedIntrinsicInputProps['checked'] | 'mixed';\n\n  /** A checkbox can appear disabled and be unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A checkbox's indicator icon can be customized. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** A checkbox can render a label next to its indicator. */\n  label?: ShorthandValue<TextProps>;\n\n  /** A checkbox's label can be rendered in different positions. */\n  labelPosition?: 'start' | 'end';\n\n  /**\n   * Called after a checkbox's checked state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onChange?: ComponentEventHandler<Omit<CheckboxProps, 'checked'> & { checked: boolean }>;\n\n  /**\n   * Called after a checkbox is clicked.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<Omit<CheckboxProps, 'checked'> & { checked: boolean }>;\n\n  /** A checkbox can be formatted to show an \"on or off\" choice. */\n  toggle?: boolean;\n}\n\nexport type CheckboxStylesProps = Pick<CheckboxProps, 'checked' | 'disabled' | 'labelPosition' | 'toggle'>;\nexport const checkboxClassName = 'ui-checkbox';\nexport const checkboxSlotClassNames: CheckboxSlotClassNames = {\n  label: `${checkboxClassName}__label`,\n  indicator: `${checkboxClassName}__indicator`,\n};\n\n/**\n * A Checkbox allows a user to make a choice between two mutually exclusive options.\n *\n * @accessibility\n * Implements [ARIA Checkbox](https://www.w3.org/TR/wai-aria-practices-1.1/#checkbox) design pattern.\n */\nexport const Checkbox = (React.forwardRef<HTMLDivElement, CheckboxProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Checkbox.displayName, context.telemetry);\n  setStart();\n\n  const {\n    checked,\n    className,\n    defaultChecked,\n    design,\n    disabled,\n    label,\n    labelPosition,\n    indicator,\n    styles,\n    toggle,\n    variables,\n  } = props;\n\n  const { state, actions } = useStateManager(createCheckboxManager, {\n    mapPropsToInitialState: () => ({ checked: defaultChecked }),\n    mapPropsToState: () => ({ checked: checked === 'mixed' ? false : checked }),\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: Checkbox.displayName,\n    mapPropsToBehavior: () => ({\n      checked: state.checked,\n      disabled,\n    }),\n    actionHandlers: {\n      performClick: (e: React.KeyboardEvent) => {\n        e.preventDefault();\n        handleClick(e);\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<CheckboxStylesProps>(Checkbox.displayName, {\n    className: checkboxClassName,\n    mapPropsToStyles: () => ({\n      checked: checked === 'mixed' ? 'mixed' : state.checked,\n      disabled,\n      labelPosition,\n      toggle,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Checkbox.handledProps, props);\n\n  const handleChange = (e: React.ChangeEvent) => {\n    if (!disabled) {\n      // Checkbox component doesn't present any `input` component in markup, however all of our\n      // components should handle events transparently.\n      const checked = !state.checked;\n\n      actions.toggle(checked);\n      _.invoke(props, 'onChange', e, { ...props, checked });\n    }\n  };\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    if (!disabled) {\n      const checked = !state.checked;\n      actions.toggle(checked);\n\n      _.invoke(props, 'onClick', e, { ...props, checked });\n      _.invoke(props, 'onChange', e, { ...props, checked });\n    }\n  };\n\n  const labelElement = Text.create(label, {\n    defaultProps: () =>\n      getA11Props('label', {\n        styles: resolvedStyles.label,\n        className: checkboxSlotClassNames.label,\n      }),\n  });\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        onClick: handleClick,\n        onChange: handleChange,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {labelPosition === 'start' && labelElement}\n      {Box.create(indicator, {\n        defaultProps: () =>\n          getA11Props('indicator', {\n            className: checkboxSlotClassNames.indicator,\n            styles: toggle ? resolvedStyles.toggle : resolvedStyles.checkbox,\n          }),\n      })}\n      {labelPosition === 'end' && labelElement}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, CheckboxProps> & FluentComponentStaticProps<CheckboxProps>;\n\nCheckbox.displayName = 'Checkbox';\n\nCheckbox.defaultProps = {\n  accessibility: checkboxBehavior,\n  indicator: {},\n  labelPosition: 'end',\n};\nCheckbox.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  checked: PropTypes.oneOf<true | false | 'mixed'>([true, false, 'mixed']),\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  label: customPropTypes.itemShorthand,\n  labelPosition: PropTypes.oneOf<'start' | 'end'>(['start', 'end']),\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  toggle: PropTypes.bool,\n};\nCheckbox.handledProps = Object.keys(Checkbox.propTypes) as any;\n\nCheckbox.create = createShorthandFactory({\n  Component: Checkbox,\n  mappedProp: 'label',\n});\n"],"mappings":"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"}