{"version":3,"file":"DatepickerCalendar.js","names":["datepickerCalendarClassName","normalizeDateInGrid","date","result","Date","getTime","setDate","DatepickerCalendar","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","className","design","styles","variables","calendarHeaderCell","calendarCell","calendarCellButton","calendarGrid","calendarGridRow","dateRangeType","header","selectedDate","navigatedDate","firstDayOfWeek","today","formatMonthDayYear","formatMonthYear","shortDays","days","minDate","maxDate","restrictedDates","restrictedDatesOptions","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","updateNavigatedDate","shouldFocusInDayGrid","setShouldFocusInDayGrid","setGridNavigatedDate","getA11yProps","useAccessibility","accessibility","debugName","actionHandlers","addWeek","e","preventDefault","newNavigatedDate","navigateToNewDate","gridNavigatedDate","subtractWeek","addDay","subtractDay","moveToStartOfWeek","targetDate","getStartDateOfWeek","contstraintNavigatedDate","moveToEndOfWeek","getEndDateOfWeek","moveToStartOfColumn","targetDayOfWeek","getDay","visibleGrid","day","originalDate","moveToEndOfColumn","length","rtl","useState","normalizedGridDate","setNormalizedGridDate","useStyles","mapPropsToInlineStyles","classes","useMemo","dayGridOptions","weeksToShow","firstWeekOfYear","daysToSelectInDayView","showWeekNumbers","workWeekDays","grid","getDayGrid","slice","useEffect","newNormalizedDate","compareDatePart","gridContainsNavigatedDate","find","week","dateFormatting","months","shortMonths","focusDateRef","useRef","changeMonth","nextMonth","prevMonthOutOfBounds","getMonthStart","nextMonthOutOfBounds","getMonthEnd","current","focus","renderCell","content","createShorthand","DatepickerCalendarCell","defaultProps","key","selected","isSelected","disabled","isInBounds","quiet","isInMonth","compareDates","renderCellButton","dateRange","DatepickerCalendarCellButton","overrideProps","predefinedProps","onFocus","onClick","value","selectedDateRange","DateRangeType","Day","renderWeekRow","element","root","DatepickerCalendarHeader","label","disabledNextButton","disabledPreviousButton","prevMonthAriaLabel","nextMonthAriaLabel","onPreviousClick","data","onNextClick","DatepickerCalendarGrid","DatepickerCalendarGridRow","children","DAYS_IN_WEEK","dayNumber","DatepickerCalendarHeaderCell","isRowSelectionActive","Week","propTypes","commonPropTypes","createCommon","customPropTypes","itemShorthand","onDateChange","PropTypes","func","instanceOf","arrayOf","oneOf","Object","keys","DayOfWeek","map","name","FirstWeekOfYear","number","bool","formatDay","formatYear","parseDate","string","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","openCalendarTitle","inputPlaceholder","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","closeButtonAriaLabel","weekNumberFormatString","selectedDateFormatString","todayDateFormatString","inputAriaLabel","inputBoundedFormatString","inputMinBoundedFormatString","inputMaxBoundedFormatString","datepickerCalendarBehavior","Monday","FirstDay","DEFAULT_CALENDAR_STRINGS"],"sources":["components/Datepicker/DatepickerCalendar.tsx"],"sourcesContent":["import { Accessibility, datepickerCalendarBehavior, DatepickerCalendarBehaviorProps } from '@fluentui/accessibility';\nimport {\n  DateRangeType,\n  DayOfWeek,\n  DAYS_IN_WEEK,\n  FirstWeekOfYear,\n  getDayGrid,\n  IDay,\n  DEFAULT_CALENDAR_STRINGS,\n  ICalendarStrings,\n  IDayGridOptions,\n  IDateGridStrings,\n  IRestrictedDatesOptions,\n  compareDates,\n  compareDatePart,\n  getMonthStart,\n  getMonthEnd,\n  getStartDateOfWeek,\n  getEndDateOfWeek,\n} from '../../utils/date-time-utilities';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { commonPropTypes, createShorthand, UIComponentProps } from '../../utils';\nimport { DatepickerCalendarGrid, DatepickerCalendarGridProps } from './DatepickerCalendarGrid';\nimport { DatepickerCalendarGridRow, DatepickerCalendarGridRowProps } from './DatepickerCalendarGridRow';\nimport { DatepickerCalendarHeader, DatepickerCalendarHeaderProps } from './DatepickerCalendarHeader';\nimport { DatepickerCalendarCellProps, DatepickerCalendarCell } from './DatepickerCalendarCell';\nimport { DatepickerCalendarCellButtonProps, DatepickerCalendarCellButton } from './DatepickerCalendarCellButton';\nimport { DatepickerCalendarHeaderCellProps, DatepickerCalendarHeaderCell } from './DatepickerCalendarHeaderCell';\nimport { navigateToNewDate, contstraintNavigatedDate } from './navigateToNewDate';\n\nexport interface DatepickerCalendarProps extends UIComponentProps, Partial<ICalendarStrings>, Partial<IDayGridOptions> {\n  /** Calendar can have header. */\n  header?: ShorthandValue<DatepickerCalendarHeaderProps>;\n\n  /** A render function to customize how cells are rendered in the Calendar. */\n  calendarCell?: ShorthandValue<DatepickerCalendarCellProps>;\n\n  /** A render function to customize how cell's buttons are rendered in the Calendar. */\n  calendarCellButton?: ShorthandValue<DatepickerCalendarCellButtonProps>;\n\n  /** A render function to customize how header cells are rendered in the Calendar. */\n  calendarHeaderCell?: ShorthandValue<DatepickerCalendarHeaderCellProps>;\n\n  /** A render function to customize how the calendar grid is rendered. */\n  calendarGrid?: ShorthandValue<DatepickerCalendarGridProps>;\n\n  /** A render function to customize how the calendar grid row is rendered. */\n  calendarGridRow?: ShorthandValue<DatepickerCalendarGridRowProps>;\n\n  /**\n   * The currently selected date range, currently only supports week.\n   */\n  selectedDateRange?: Date[];\n\n  /**\n   * The currently selected date.\n   */\n  selectedDate?: Date;\n  /**\n   * The currently navigated date.\n   */\n  navigatedDate?: Date;\n\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerCalendarBehaviorProps>;\n\n  /**\n   * Called on change of the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChange?: ComponentEventHandler<DatepickerCalendarProps & { value: IDay }>;\n}\n\nexport type DatepickerCalendarStylesProps = never;\n\nexport const datepickerCalendarClassName = 'ui-datepicker__calendar';\n\nconst normalizeDateInGrid = (date: Date): Date => {\n  const result = new Date(date.getTime());\n  result.setDate(1);\n  return result;\n};\n\n/**\n * A DatepickerCalendar is used to display dates in sematically grouped way.\n */\nexport const DatepickerCalendar = (React.forwardRef<HTMLDivElement, DatepickerCalendarProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DatepickerCalendar.displayName, context.telemetry);\n  setStart();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    calendarHeaderCell,\n    calendarCell,\n    calendarCellButton,\n    calendarGrid,\n    calendarGridRow,\n    dateRangeType,\n    header,\n    selectedDate,\n    navigatedDate,\n    firstDayOfWeek,\n    today,\n    formatMonthDayYear,\n    formatMonthYear,\n    shortDays,\n    days,\n    minDate,\n    maxDate,\n    restrictedDates,\n  } = props;\n\n  const restrictedDatesOptions: IRestrictedDatesOptions = {\n    minDate,\n    maxDate,\n    restrictedDates,\n  };\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DatepickerCalendar.handledProps, props);\n\n  const updateNavigatedDate = (date: Date) => {\n    if (!!date) {\n      if (!shouldFocusInDayGrid) {\n        setShouldFocusInDayGrid(true);\n      }\n      setGridNavigatedDate(date);\n    }\n  };\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: DatepickerCalendar.displayName,\n    actionHandlers: {\n      addWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      addDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getStartDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getEndDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(visibleGrid[0], day => day.originalDate.getDay() === targetDayOfWeek)?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(\n          visibleGrid[visibleGrid.length - 1],\n          day => day.originalDate.getDay() === targetDayOfWeek,\n        )?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const [gridNavigatedDate, setGridNavigatedDate] = React.useState<Date>(\n    () => new Date((navigatedDate || today || new Date()).getTime()),\n  );\n  const [normalizedGridDate, setNormalizedGridDate] = React.useState<Date>(() =>\n    normalizeDateInGrid(gridNavigatedDate),\n  );\n\n  const [shouldFocusInDayGrid, setShouldFocusInDayGrid] = React.useState<boolean>(true);\n\n  const { classes } = useStyles<DatepickerCalendarStylesProps>(DatepickerCalendar.displayName, {\n    className: datepickerCalendarClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const visibleGrid = React.useMemo<IDay[][]>(() => {\n    const dayGridOptions: IDayGridOptions = {\n      selectedDate,\n      navigatedDate: normalizedGridDate,\n      weeksToShow: props.weeksToShow,\n      firstDayOfWeek: props.firstDayOfWeek,\n      firstWeekOfYear: props.firstWeekOfYear,\n      dateRangeType: props.dateRangeType,\n      daysToSelectInDayView: props.daysToSelectInDayView,\n      today: props.today,\n      showWeekNumbers: props.showWeekNumbers,\n      workWeekDays: props.workWeekDays,\n      minDate: props.minDate,\n      maxDate: props.maxDate,\n      restrictedDates: props.restrictedDates,\n    };\n    const grid = getDayGrid(dayGridOptions);\n    return grid.slice(1, grid.length - 1); // slicing off first and last weeks, cause we don't use them for transitions\n  }, [selectedDate, normalizedGridDate, props]);\n\n  React.useEffect(() => {\n    const newNormalizedDate = normalizeDateInGrid(gridNavigatedDate);\n\n    if (compareDatePart(newNormalizedDate, normalizedGridDate)) {\n      // Do not change the grid immediately the month changes but only once the date stops being visible.\n      const gridContainsNavigatedDate = visibleGrid.find(week =>\n        week.find(day => compareDatePart(day.originalDate, gridNavigatedDate) === 0),\n      );\n      if (!gridContainsNavigatedDate) {\n        setNormalizedGridDate(newNormalizedDate);\n      }\n    }\n  }, [gridNavigatedDate, visibleGrid, normalizedGridDate]);\n\n  const dateFormatting: IDateGridStrings = {\n    months: props.months,\n    shortMonths: props.shortMonths,\n    days: props.days,\n    shortDays: props.shortDays,\n  };\n\n  const focusDateRef = React.useRef(null);\n\n  const changeMonth = (nextMonth: boolean) => {\n    const newNavigatedDate = navigateToNewDate(\n      normalizedGridDate,\n      'Month',\n      nextMonth ? 1 : -1,\n      restrictedDatesOptions,\n      true,\n    );\n    if (!!newNavigatedDate) {\n      setGridNavigatedDate(newNavigatedDate);\n      setShouldFocusInDayGrid(false);\n      setNormalizedGridDate(normalizeDateInGrid(newNavigatedDate));\n    }\n  };\n\n  const prevMonthOutOfBounds = minDate ? compareDatePart(minDate, getMonthStart(normalizedGridDate)) >= 0 : false;\n  const nextMonthOutOfBounds = maxDate ? compareDatePart(getMonthEnd(normalizedGridDate), maxDate) >= 0 : false;\n  React.useEffect(() => {\n    if (shouldFocusInDayGrid) {\n      focusDateRef.current?.focus();\n    }\n  }, [gridNavigatedDate, normalizedGridDate, shouldFocusInDayGrid]);\n\n  const renderCell = (day: IDay, content) =>\n    createShorthand(DatepickerCalendarCell, calendarCell, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content,\n          key: day.key,\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n    });\n\n  const renderCellButton = (day: IDay, dateRange: IDay[]) =>\n    createShorthand(DatepickerCalendarCellButton, calendarCellButton, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content: day.date,\n          'aria-label': formatMonthDayYear(day.originalDate, dateFormatting),\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n      overrideProps: (\n        predefinedProps: DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> },\n      ): DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> } => ({\n        onFocus: e => {\n          setGridNavigatedDate(day.originalDate);\n          _.invoke(predefinedProps, 'onFocus', e, predefinedProps);\n        },\n        onClick: e => {\n          _.invoke(props, 'onDateChange', e, {\n            ...props,\n            value: day,\n            selectedDateRange: dateRangeType !== DateRangeType.Day ? dateRange : [day],\n          });\n          _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n        },\n        ref: compareDates(gridNavigatedDate, day.originalDate) ? focusDateRef : null,\n      }),\n    });\n  const renderWeekRow = (week: IDay[]) => _.map(week, (day: IDay) => renderCell(day, renderCellButton(day, week)));\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {createShorthand(DatepickerCalendarHeader, header, {\n        defaultProps: () => ({\n          label: formatMonthYear(normalizedGridDate, dateFormatting),\n          'aria-label': formatMonthYear(normalizedGridDate, dateFormatting),\n          disabledNextButton: nextMonthOutOfBounds,\n          disabledPreviousButton: prevMonthOutOfBounds,\n          prevMonthAriaLabel: props.prevMonthAriaLabel,\n          nextMonthAriaLabel: props.nextMonthAriaLabel,\n        }),\n        overrideProps: (predefinedProps: DatepickerCalendarHeaderProps): DatepickerCalendarHeaderProps => ({\n          onPreviousClick: (e, data) => {\n            changeMonth(false);\n            _.invoke(predefinedProps, 'onPreviousClick', e, data);\n          },\n          onNextClick: (e, data) => {\n            changeMonth(true);\n            _.invoke(predefinedProps, 'onNextClick', e, data);\n          },\n        }),\n      })}\n      {createShorthand(DatepickerCalendarGrid, calendarGrid, {\n        defaultProps: () =>\n          getA11yProps('calendarGrid', {\n            content: (\n              <>\n                <thead>\n                  {createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                    defaultProps: () =>\n                      getA11yProps('calendarGridRow', {\n                        children: _.times(DAYS_IN_WEEK, dayNumber =>\n                          createShorthand(DatepickerCalendarHeaderCell, calendarHeaderCell, {\n                            defaultProps: () =>\n                              getA11yProps('calendarHeaderCell', {\n                                'aria-label': days[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                content: shortDays[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                key: dayNumber,\n                              }),\n                          }),\n                        ),\n                      }),\n                  })}\n                </thead>\n                <tbody>\n                  {_.map(visibleGrid, week =>\n                    createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                      defaultProps: () =>\n                        getA11yProps('calendarGridRow', {\n                          children: renderWeekRow(week),\n                          isRowSelectionActive: dateRangeType === DateRangeType.Week,\n                          key: week[0].key,\n                        }),\n                    }),\n                  )}\n                </tbody>\n              </>\n            ),\n          }),\n      })}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, DatepickerCalendarProps> &\n  FluentComponentStaticProps<DatepickerCalendarProps>;\n\nDatepickerCalendar.displayName = 'DatepickerCalendar';\n\nDatepickerCalendar.propTypes = {\n  ...commonPropTypes.createCommon(),\n  calendarCell: customPropTypes.itemShorthand,\n  calendarCellButton: customPropTypes.itemShorthand,\n  calendarHeaderCell: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  calendarGrid: customPropTypes.itemShorthand,\n  calendarGridRow: customPropTypes.itemShorthand,\n  onDateChange: PropTypes.func,\n  selectedDate: PropTypes.instanceOf(Date),\n  navigatedDate: PropTypes.instanceOf(Date),\n\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  restrictedDates: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n\n  firstDayOfWeek: PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name])),\n  firstWeekOfYear: PropTypes.oneOf(Object.keys(FirstWeekOfYear).map(name => FirstWeekOfYear[name])),\n  dateRangeType: PropTypes.oneOf(Object.keys(DateRangeType).map(name => DateRangeType[name])),\n  daysToSelectInDayView: PropTypes.number,\n  today: PropTypes.instanceOf(Date),\n  showWeekNumbers: PropTypes.bool,\n  workWeekDays: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name]))),\n  weeksToShow: PropTypes.number,\n\n  formatDay: PropTypes.func,\n  formatYear: PropTypes.func,\n  formatMonthDayYear: PropTypes.func,\n  formatMonthYear: PropTypes.func,\n\n  parseDate: PropTypes.func,\n\n  months: PropTypes.arrayOf(PropTypes.string),\n  shortMonths: PropTypes.arrayOf(PropTypes.string),\n  days: PropTypes.arrayOf(PropTypes.string),\n  shortDays: PropTypes.arrayOf(PropTypes.string),\n\n  isRequiredErrorMessage: PropTypes.string,\n  invalidInputErrorMessage: PropTypes.string,\n  isOutOfBoundsErrorMessage: PropTypes.string,\n  openCalendarTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  prevMonthAriaLabel: PropTypes.string,\n  nextMonthAriaLabel: PropTypes.string,\n  prevYearAriaLabel: PropTypes.string,\n  nextYearAriaLabel: PropTypes.string,\n  prevYearRangeAriaLabel: PropTypes.string,\n  nextYearRangeAriaLabel: PropTypes.string,\n  monthPickerHeaderAriaLabel: PropTypes.string,\n  yearPickerHeaderAriaLabel: PropTypes.string,\n  closeButtonAriaLabel: PropTypes.string,\n  weekNumberFormatString: PropTypes.string,\n  selectedDateFormatString: PropTypes.string,\n  todayDateFormatString: PropTypes.string,\n\n  inputAriaLabel: PropTypes.string,\n  inputBoundedFormatString: PropTypes.string,\n  inputMinBoundedFormatString: PropTypes.string,\n  inputMaxBoundedFormatString: PropTypes.string,\n};\n\nDatepickerCalendar.defaultProps = {\n  accessibility: datepickerCalendarBehavior,\n  firstDayOfWeek: DayOfWeek.Monday,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateRangeType: DateRangeType.Day,\n  header: {},\n  calendarCell: {},\n  calendarCellButton: {},\n  calendarHeaderCell: {},\n  calendarGrid: {},\n  calendarGridRow: {},\n  ...DEFAULT_CALENDAR_STRINGS,\n};\n\nDatepickerCalendar.handledProps = Object.keys(DatepickerCalendar.propTypes) as any;\n"],"mappings":"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"}