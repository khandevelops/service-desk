{"version":3,"file":"Debug.js","names":["INITIAL_STATE","fiberNav","selectedFiberNav","isSelecting","Debug","p","s","state","debugReactComponent","r","console","error","_reactInternalFiber","fluentUIDebug","FiberNavigator","fromFiber","setState","debugDOMNode","domNode","fromDOMNode","findOwner","fiber","handleKeyDown","e","code","getCode","keyboardKey","Escape","stopSelecting","d","altKey","shiftKey","startSelecting","handleMouseMove","target","handleDOMNodeClick","preventDefault","stopPropagation","selectFiber","changeFiber","positionRight","debugPanelPosition","positionLeft","close","process","env","NODE_ENV","isDebugEnabled","isBrowser","window","openDebugPanel","$r","render","mountDocument","props","body","instance","React","Component","defaultProps","document","propTypes","PropTypes","object","isRequired"],"sources":["components/Debug/Debug.tsx"],"sourcesContent":["import { getCode, keyboardKey } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { EventListener } from '@fluentui/react-component-event-listener';\n\nimport { isBrowser } from '../../utils';\nimport { isDebugEnabled } from '@fluentui/styles';\n\nimport { DebugPanel } from './DebugPanel';\nimport { FiberNavigator } from './FiberNavigator';\nimport { DebugRect } from './DebugRect';\n\n/* eslint-disable no-console */\n\nexport type DebugProps = {\n  /** Existing document the popup should add listeners. */\n  mountDocument?: Document;\n};\n\nexport type DebugState = {\n  debugPanelPosition?: 'left' | 'right';\n  fiberNav: FiberNavigator;\n  selectedFiberNav: FiberNavigator;\n  isSelecting: boolean;\n};\n\nconst INITIAL_STATE: DebugState = {\n  fiberNav: null,\n  selectedFiberNav: null,\n  isSelecting: false,\n};\n\nexport class Debug extends React.Component<DebugProps, DebugState> {\n  state = INITIAL_STATE;\n\n  static defaultProps = {\n    // eslint-disable-next-line no-undef\n    mountDocument: isBrowser() ? window.document : null,\n  };\n\n  static propTypes = {\n    mountDocument: PropTypes.object.isRequired,\n  };\n\n  constructor(p, s) {\n    super(p, s);\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled && isBrowser()) {\n      // eslint-disable-next-line no-undef\n      (window as any).openDebugPanel = () => {\n        // eslint-disable-next-line no-undef\n        this.debugReactComponent((window as any).$r);\n      };\n    }\n  }\n\n  debugReactComponent = r => {\n    if (!r) {\n      console.error(\n        \"No React component selected. Please select a Fluent UI component from the React's Component panel.\",\n      );\n      return;\n    }\n    if (!r._reactInternalFiber) {\n      console.error(\n        'React does not provide data for debugging for this component. Try selecting some Fluent UI component.',\n      );\n      return;\n    }\n    if (!r.fluentUIDebug) {\n      console.error('Not a debuggable component. Try selecting some Fluent UI component.');\n      return;\n    }\n\n    const fiberNav = FiberNavigator.fromFiber(r._reactInternalFiber);\n    this.setState({ fiberNav, isSelecting: false, selectedFiberNav: null });\n  };\n\n  debugDOMNode = domNode => {\n    let fiberNav = FiberNavigator.fromDOMNode(domNode);\n\n    if (!fiberNav) {\n      console.error('No fiber for dom node', domNode);\n      return;\n    }\n\n    fiberNav = fiberNav.findOwner(fiber => fiber.fluentUIDebug);\n\n    if (fiberNav !== this.state.fiberNav) {\n      this.setState({ fiberNav });\n    }\n  };\n\n  handleKeyDown = e => {\n    const code = getCode(e);\n\n    switch (code) {\n      case keyboardKey.Escape:\n        this.stopSelecting();\n        break;\n\n      case keyboardKey.d:\n        if (e.altKey && e.shiftKey) {\n          this.startSelecting();\n        }\n        break;\n    }\n  };\n\n  handleMouseMove = e => {\n    this.debugDOMNode(e.target);\n  };\n\n  handleDOMNodeClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState({ isSelecting: false });\n  };\n\n  startSelecting = () => {\n    const isSelecting = !this.state.isSelecting;\n\n    this.setState({\n      ...(!isSelecting && INITIAL_STATE),\n      isSelecting,\n    });\n  };\n\n  stopSelecting = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  selectFiber = selectedFiberNav => this.setState({ selectedFiberNav });\n\n  changeFiber = fiberNav => this.setState({ fiberNav });\n\n  positionRight = () => this.setState({ debugPanelPosition: 'right' });\n\n  positionLeft = () => this.setState({ debugPanelPosition: 'left' });\n\n  close = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { mountDocument } = this.props;\n    const { fiberNav, selectedFiberNav, isSelecting, debugPanelPosition } = this.state;\n\n    if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n      return (\n        <>\n          <EventListener listener={this.handleKeyDown} target={mountDocument.body} type=\"keydown\" />\n          {isSelecting && (\n            <EventListener listener={this.handleMouseMove} target={mountDocument.body} type=\"mousemove\" />\n          )}\n          {isSelecting && fiberNav && fiberNav.domNode && (\n            <EventListener listener={this.handleDOMNodeClick} target={fiberNav.domNode} type=\"click\" />\n          )}\n          {isSelecting && fiberNav && <DebugRect fiberNav={fiberNav} />}\n          {selectedFiberNav && <DebugRect fiberNav={selectedFiberNav} />}\n          {!isSelecting && fiberNav && fiberNav.instance && (\n            <DebugPanel\n              fiberNav={fiberNav}\n              onActivateDebugSelectorClick={this.startSelecting}\n              onClose={this.close}\n              // TODO: Integrate CSS in JS Styles for Host Components (DOM nodes)\n              // cssStyles={stylesForNode(domNode)}\n              debugData={fiberNav.fluentUIDebug}\n              position={debugPanelPosition || 'right'}\n              onPositionLeft={this.positionLeft}\n              onPositionRight={this.positionRight}\n              onFiberChanged={this.changeFiber}\n              onFiberSelected={this.selectFiber}\n            />\n          )}\n        </>\n      );\n    }\n\n    return null;\n  }\n}\n"],"mappings":"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"}