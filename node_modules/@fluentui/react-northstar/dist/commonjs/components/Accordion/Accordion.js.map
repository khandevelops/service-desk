{"version":3,"file":"Accordion.js","names":["accordionClassName","accordionSlotClassNames","content","title","Accordion","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","expanded","exclusive","accessibility","children","className","design","styles","variables","panels","renderPanelContent","renderPanelTitle","alwaysActiveIndex","useAutoControlled","defaultValue","defaultActiveIndex","value","activeIndex","initialValue","setActiveIndex","actionHandlers","moveNext","e","preventDefault","focusHandler","movePrevious","moveFirst","moveLast","getA11yProps","useAccessibility","debugName","rtl","useStyles","mapPropsToInlineStyles","classes","useState","focusedIndex","setfocusedIndex","handleNavigationFocus","index","getNavigationItemsSize","length","unhandledProps","useUnhandledProps","handledProps","ElementType","getElementType","ContainerFocusHandler","itemRefs","useMemo","Array","from","createRef","useEffect","targetComponent","current","focus","defaultAccordionTitleId","defaultAccordionContentId","computeNewIndex","isIndexActionable","handleTitleOverrides","predefinedProps","onClick","titleProps","onFocus","isIndexActive","renderPanels","syncFocusedIndex","panel","active","canBeCollapsed","titleId","contentId","contentRef","push","createShorthand","AccordionTitle","defaultProps","id","accordionContentId","overrideProps","render","AccordionContent","accordionTitleId","element","root","rtlTextContainer","getAttributes","forElements","childrenExist","propTypes","commonPropTypes","createCommon","customPropTypes","every","disallow","PropTypes","oneOfType","arrayOf","number","bool","onTitleClick","func","onActiveIndexChange","shape","itemShorthand","accordionBehavior","as","Object","keys","Title","Content","create","createShorthandFactory","Component"],"sources":["components/Accordion/Accordion.tsx"],"sourcesContent":["import { Accessibility, accordionBehavior, AccordionBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { AccordionTitle, AccordionTitleProps } from './AccordionTitle';\nimport { AccordionContent, AccordionContentProps } from './AccordionContent';\n\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  ShorthandRenderFunction,\n  FluentComponentStaticProps,\n} from '../../types';\nimport { ContainerFocusHandler } from '../../utils/accessibility/FocusHandling/FocusContainer';\nimport {\n  useAutoControlled,\n  useAccessibility,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  getElementType,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface AccordionSlotClassNames {\n  content: string;\n  title: string;\n}\n\nexport interface AccordionProps extends UIComponentProps, ChildrenComponentProps {\n  /** Index of the currently active panel. */\n  activeIndex?: number[] | number;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number[] | number;\n\n  /** Only allow one panel to be expanded at a time. */\n  exclusive?: boolean;\n\n  /** At least one panel should be expanded at any time. */\n  expanded?: boolean;\n\n  /**\n   * Called when the active index of the Accordion changes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `activeIndex` reflecting the new state.\n   */\n  onActiveIndexChange?: ComponentEventHandler<AccordionProps>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onTitleClick?: ComponentEventHandler<AccordionProps>;\n\n  /** Shorthand array of props for Accordion. */\n  panels?: {\n    content: ShorthandValue<AccordionContentProps>;\n    title: ShorthandValue<AccordionTitleProps>;\n  }[];\n\n  /**\n   * A custom renderer for each Accordion's panel title.\n   *\n   * @param Component - The panel's component type.\n   * @param props - The panel's computed props.\n   */\n  renderPanelTitle?: ShorthandRenderFunction<AccordionTitleProps>;\n\n  /**\n   * A custom renderer for each Accordion's panel content.\n   *\n   * @param Component - The panel's component type.\n   * @param props - The panel's computed props.\n   */\n  renderPanelContent?: ShorthandRenderFunction<AccordionContentProps>;\n\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<AccordionBehaviorProps>;\n}\n\nexport type AccordionStylesProps = never;\nexport const accordionClassName = 'ui-accordion';\nexport const accordionSlotClassNames: AccordionSlotClassNames = {\n  content: `${accordionClassName}__content`,\n  title: `${accordionClassName}__title`,\n};\n\n/**\n * An Accordion represents stacked set of content sections, with action elements to toggle the display of these sections.\n *\n * @accessibility\n * Implements [ARIA Accordion](https://www.w3.org/TR/wai-aria-practices-1.1/#accordion) design pattern (keyboard navigation not yet supported).\n */\nexport const Accordion = (React.forwardRef<HTMLDListElement, AccordionProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Accordion.displayName, context.telemetry);\n  setStart();\n  const {\n    expanded,\n    exclusive,\n    accessibility,\n    children,\n    className,\n    design,\n    styles,\n    variables,\n    panels,\n    renderPanelContent,\n    renderPanelTitle,\n  } = props;\n  const alwaysActiveIndex = expanded ? 0 : -1;\n\n  const [activeIndex, setActiveIndex] = useAutoControlled({\n    defaultValue: props.defaultActiveIndex,\n    value: props.activeIndex,\n    initialValue: exclusive ? alwaysActiveIndex : [alwaysActiveIndex],\n  });\n\n  const actionHandlers = {\n    moveNext: e => {\n      e.preventDefault();\n      focusHandler.moveNext();\n    },\n    movePrevious: e => {\n      e.preventDefault();\n      focusHandler.movePrevious();\n    },\n    moveFirst: e => {\n      e.preventDefault();\n      focusHandler.moveFirst();\n    },\n    moveLast: e => {\n      e.preventDefault();\n      focusHandler.moveLast();\n    },\n  };\n\n  const getA11yProps = useAccessibility<AccordionBehaviorProps>(accessibility, {\n    debugName: Accordion.displayName,\n    actionHandlers,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<AccordionStylesProps>(Accordion.displayName, {\n    className: accordionClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [focusedIndex, setfocusedIndex] = React.useState<number>();\n\n  const handleNavigationFocus = (index: number) => {\n    setfocusedIndex(index);\n  };\n\n  const getNavigationItemsSize = () => props.panels.length;\n  const unhandledProps = useUnhandledProps(Accordion.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const focusHandler: ContainerFocusHandler = new ContainerFocusHandler(\n    getNavigationItemsSize,\n    handleNavigationFocus,\n    true,\n  );\n\n  const itemRefs = React.useMemo<React.RefObject<HTMLElement>[]>(\n    () => Array.from({ length: panels?.length }, () => React.createRef()),\n    // As we are using \"panels.length\" it's fine to have dependency on them\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [panels?.length],\n  );\n\n  React.useEffect(() => {\n    const targetComponent = itemRefs[focusedIndex] && itemRefs[focusedIndex].current;\n    targetComponent && targetComponent.focus();\n  }, [itemRefs, focusedIndex]);\n\n  const defaultAccordionTitleId = React.useMemo(() => _.uniqueId('accordion-title-'), []);\n  const defaultAccordionContentId = React.useMemo(() => _.uniqueId('accordion-content-'), []);\n\n  const computeNewIndex = (index: number): number | number[] => {\n    if (!isIndexActionable(index)) {\n      return activeIndex;\n    }\n\n    if (exclusive) return index === activeIndex ? -1 : index;\n    // check to see if index is in array, and remove it, if not then add it\n    return _.includes(activeIndex as number[], index)\n      ? _.without(activeIndex as number[], index)\n      : [...(activeIndex as number[]), index];\n  };\n\n  const handleTitleOverrides = (predefinedProps: AccordionTitleProps) => ({\n    onClick: (e: React.SyntheticEvent, titleProps: AccordionTitleProps) => {\n      const { index } = titleProps;\n      const activeIndex = computeNewIndex(index);\n      setActiveIndex(activeIndex);\n      setfocusedIndex(index);\n\n      _.invoke(props, 'onActiveIndexChange', e, { ...props, activeIndex });\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n      _.invoke(props, 'onTitleClick', e, titleProps);\n    },\n    onFocus: (e: React.SyntheticEvent, titleProps: AccordionTitleProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, titleProps);\n      setfocusedIndex(predefinedProps.index);\n    },\n  });\n\n  const isIndexActive = (index: number): boolean => {\n    return exclusive ? activeIndex === index : _.includes(activeIndex as number[], index);\n  };\n\n  /**\n   * Checks if panel at index can be actioned upon. Used in the case of expanded accordion,\n   * when at least a panel needs to stay active. Will return false if expanded prop is true,\n   * index is active and either it's an exclusive accordion or if there are no other active\n   * panels open besides this one.\n   *\n   * @param index - The index of the panel.\n   * @returns If the panel can be set active/inactive.\n   */\n  const isIndexActionable = (index: number): boolean => {\n    if (!isIndexActive(index)) {\n      return true;\n    }\n\n    return !expanded || (!exclusive && (activeIndex as number[]).length > 1);\n  };\n\n  const renderPanels = () => {\n    const children: any[] = [];\n    focusHandler.syncFocusedIndex(focusedIndex);\n    _.each(panels, (panel, index) => {\n      const { content, title } = panel;\n      const active = isIndexActive(+index);\n      const canBeCollapsed = isIndexActionable(+index);\n      const titleId = title['id'] || `${defaultAccordionTitleId}${index}`;\n      const contentId = content['id'] || `${defaultAccordionContentId}${index}`;\n      const contentRef = itemRefs[index];\n\n      children.push(\n        createShorthand(AccordionTitle, title, {\n          defaultProps: () => ({\n            className: accordionSlotClassNames.title,\n            active,\n            index: +index,\n            contentRef,\n            canBeCollapsed,\n            id: titleId,\n            accordionContentId: contentId,\n          }),\n          overrideProps: handleTitleOverrides,\n          render: renderPanelTitle,\n        }),\n      );\n      if (active) {\n        children.push(\n          createShorthand(AccordionContent, content, {\n            defaultProps: () => ({\n              className: accordionSlotClassNames.content,\n              active,\n              id: contentId,\n              accordionTitleId: titleId,\n            }),\n            render: renderPanelContent,\n          }),\n        );\n      }\n    });\n    return children;\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n        ref,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderPanels()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'dl', HTMLDListElement, AccordionProps> &\n  FluentComponentStaticProps<AccordionProps> & {\n    Title: typeof AccordionTitle;\n    Content: typeof AccordionContent;\n  };\n\nAccordion.displayName = 'Accordion';\n\nAccordion.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  ]),\n  defaultActiveIndex: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  ]),\n  exclusive: PropTypes.bool,\n  expanded: PropTypes.bool,\n  onTitleClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n  onActiveIndexChange: PropTypes.func,\n  panels: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        content: customPropTypes.itemShorthand,\n        title: customPropTypes.itemShorthand,\n      }),\n    ),\n  ]),\n\n  renderPanelTitle: PropTypes.func,\n  renderPanelContent: PropTypes.func,\n};\n\nAccordion.defaultProps = {\n  accessibility: accordionBehavior,\n  as: 'dl',\n};\n\nAccordion.handledProps = Object.keys(Accordion.propTypes) as any;\nAccordion.Title = AccordionTitle;\nAccordion.Content = AccordionContent;\nAccordion.create = createShorthandFactory({\n  Component: Accordion,\n});\n"],"mappings":"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"}