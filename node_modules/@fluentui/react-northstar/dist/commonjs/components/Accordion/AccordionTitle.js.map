{"version":3,"file":"AccordionTitle.js","names":["accordionTitleClassName","accordionTitleSlotClassNames","contentWrapper","AccordionTitle","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","contentRef","children","content","indicator","disabled","accessibility","canBeCollapsed","as","active","accordionContentId","className","design","styles","variables","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","debugName","actionHandlers","performClick","e","preventDefault","stopPropagation","handleClick","mapPropsToBehavior","hasContent","String","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleFocus","handleWrapperOverrides","predefinedProps","onFocus","onClick","contentWrapperElement","Box","create","defaultProps","overrideProps","element","rtlTextContainer","getAttributes","forElements","root","childrenExist","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon","PropTypes","string","bool","customPropTypes","wrapperShorthand","index","number","func","shorthandAllowingChildren","Object","keys","accordionTitleBehavior","createShorthandFactory","Component"],"sources":["components/Accordion/AccordionTitle.tsx"],"sourcesContent":["import { accordionTitleBehavior, Accessibility, AccordionTitleBehaviorProps } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  getElementType,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface AccordionTitleSlotClassNames {\n  contentWrapper: string;\n}\n\nexport interface AccordionTitleProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<AccordionTitleBehaviorProps>;\n\n  /** Id of the content it owns. */\n  accordionContentId?: string;\n\n  /** Whether or not the title is in the open state. */\n  active?: boolean;\n\n  /** If at least one panel needs to stay active and this title does not correspond to the last active one. */\n  canBeCollapsed?: boolean;\n\n  /** Shorthand for the content wrapper element. */\n  contentWrapper?: ShorthandValue<BoxProps>;\n\n  /** An accordion title can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** AccordionTitle index inside Accordion. */\n  index?: number;\n\n  /** Ref to the clickable element that contains the title. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<AccordionTitleProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<AccordionTitleProps>;\n\n  /** Shorthand for the active indicator. */\n  indicator?: ShorthandValue<BoxProps>;\n}\n\nexport const accordionTitleClassName = 'ui-accordion__title';\nexport const accordionTitleSlotClassNames: AccordionTitleSlotClassNames = {\n  contentWrapper: `${accordionTitleClassName}__content-wrapper`,\n};\n\nexport type AccordionTitleStylesProps = Required<Pick<AccordionTitleProps, 'disabled' | 'active'>> & {\n  content: boolean;\n};\n\n/**\n * An AccordionTitle represents the title of Accordion's item that can be interacted with to expand or collapse the item's content.\n */\nexport const AccordionTitle = (React.forwardRef<HTMLDListElement, AccordionTitleProps & { as: React.ReactNode }>(\n  (props, ref) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(AccordionTitle.displayName, context.telemetry);\n    setStart();\n    const {\n      contentRef,\n      children,\n      content,\n      indicator,\n      contentWrapper,\n      disabled,\n      accessibility,\n      canBeCollapsed,\n      as,\n      active,\n      accordionContentId,\n      className,\n      design,\n      styles,\n      variables,\n    } = props;\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(AccordionTitle.handledProps, props);\n\n    const getA11yProps = useAccessibility<AccordionTitleBehaviorProps>(accessibility, {\n      debugName: AccordionTitle.displayName,\n      actionHandlers: {\n        performClick: e => {\n          e.preventDefault();\n          e.stopPropagation();\n          handleClick(e);\n        },\n      },\n      mapPropsToBehavior: () => ({\n        hasContent: !!content,\n        canBeCollapsed,\n        as: String(as),\n        active,\n        disabled,\n        accordionContentId,\n      }),\n      rtl: context.rtl,\n    });\n\n    const { classes, styles: resolvedStyles } = useStyles<AccordionTitleStylesProps>(AccordionTitle.displayName, {\n      className: accordionTitleClassName,\n      mapPropsToStyles: () => ({\n        disabled,\n        content: !!content,\n        active,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    });\n\n    const handleClick = (e: React.SyntheticEvent) => {\n      if (!disabled) {\n        _.invoke(props, 'onClick', e, props);\n      }\n    };\n\n    const handleFocus = (e: React.SyntheticEvent) => {\n      e.stopPropagation();\n      _.invoke(props, 'onFocus', e, props);\n    };\n\n    const handleWrapperOverrides = predefinedProps => ({\n      onFocus: (e: React.FocusEvent) => {\n        handleFocus(e);\n        _.invoke(predefinedProps, 'onFocus', e, props);\n      },\n      onClick: (e: React.MouseEvent) => {\n        handleClick(e);\n        _.invoke(predefinedProps, 'onClick', e, props);\n      },\n    });\n\n    const contentWrapperElement = (\n      <Ref innerRef={contentRef}>\n        {Box.create(contentWrapper, {\n          defaultProps: () =>\n            getA11yProps('content', {\n              className: accordionTitleSlotClassNames.contentWrapper,\n              styles: resolvedStyles.contentWrapper,\n            }),\n          overrideProps: predefinedProps => ({\n            children: (\n              <>\n                {Box.create(indicator, {\n                  defaultProps: () =>\n                    getA11yProps('indicator', {\n                      styles: resolvedStyles.indicator,\n                    }),\n                })}\n                {Box.create(content, {\n                  defaultProps: () => ({\n                    styles: resolvedStyles.content,\n                  }),\n                })}\n              </>\n            ),\n            ...handleWrapperOverrides(predefinedProps),\n          }),\n        })}\n      </Ref>\n    );\n\n    const element = (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? children : contentWrapperElement}\n      </ElementType>\n    );\n    setEnd();\n    return element;\n  },\n) as unknown) as ForwardRefWithAs<'div', HTMLDListElement, AccordionTitleProps> &\n  FluentComponentStaticProps<AccordionTitleProps>;\n\nAccordionTitle.displayName = 'AccordionTitle';\n\nAccordionTitle.shorthandConfig = {\n  mappedProp: 'content',\n};\n\nAccordionTitle.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  accordionContentId: PropTypes.string,\n  active: PropTypes.bool,\n  contentRef: customPropTypes.ref,\n  contentWrapper: customPropTypes.wrapperShorthand,\n  canBeCollapsed: PropTypes.bool,\n  disabled: PropTypes.bool,\n  index: PropTypes.number,\n  onClick: PropTypes.func,\n  indicator: customPropTypes.shorthandAllowingChildren,\n};\n\nAccordionTitle.handledProps = Object.keys(AccordionTitle.propTypes) as any;\n\nAccordionTitle.defaultProps = {\n  accessibility: accordionTitleBehavior,\n  as: 'div',\n  contentRef: _.noop,\n  indicator: {},\n  contentWrapper: {},\n};\n\nAccordionTitle.create = createShorthandFactory({ Component: AccordionTitle, mappedProp: 'content' });\n"],"mappings":"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"}