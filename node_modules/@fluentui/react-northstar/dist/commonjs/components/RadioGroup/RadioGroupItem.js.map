{"version":3,"file":"RadioGroupItem.js","names":["radioGroupItemClassName","radioGroupItemSlotClassNames","indicator","label","RadioGroupItem","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","checkedIndicator","disabled","vertical","className","design","styles","variables","shouldFocus","elementRef","useRef","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","useAutoControlled","defaultValue","defaultChecked","value","checked","initialValue","setChecked","prevChecked","handleClick","e","useEffect","current","undefined","focus","useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","resolvedStyles","getA11yProps","useAccessibility","accessibility","debugName","actionHandlers","performClick","shouldPreventDefaultOnKeyDown","preventDefault","mapPropsToBehavior","handleChange","element","unstable_wrapWithFocusZone","root","onClick","onChange","Box","create","defaultProps","as","propTypes","commonPropTypes","createCommon","content","PropTypes","bool","customPropTypes","shorthandAllowingChildren","itemShorthand","name","string","func","oneOfType","number","radioGroupItemBehavior","Object","keys","createShorthandFactory","Component","mappedProp"],"sources":["components/RadioGroup/RadioGroupItem.tsx"],"sourcesContent":["import { Accessibility, radioGroupItemBehavior, RadioGroupItemBehaviorProps } from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport {\n  useAutoControlled,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { RadioButtonIcon } from '@fluentui/react-icons-northstar';\n\nexport interface RadioGroupItemSlotClassNames {\n  indicator: string;\n  label: string;\n}\n\nexport interface RadioGroupItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<RadioGroupItemBehaviorProps>;\n\n  /** Whether or not radio item is checked. */\n  checked?: boolean;\n\n  /**\n   * Called after radio item checked state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onChange?: ComponentEventHandler<RadioGroupItemProps>;\n\n  /** The label of the radio item. */\n  label?: ShorthandValue<BoxProps>;\n\n  /** Initial checked value. */\n  defaultChecked?: boolean;\n\n  /** A radio item can appear disabled and be unable to change states. */\n  disabled?: boolean;\n\n  /** The radio item indicator can be customized. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** The checked radio item indicator can be customized. */\n  checkedIndicator?: ShorthandValue<BoxProps>;\n\n  /** The HTML input name. */\n  name?: string;\n\n  /**\n   * Called after radio item is clicked.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<RadioGroupItemProps>;\n\n  /** Whether should focus when checked */\n  shouldFocus?: boolean; // TODO: RFC #306\n\n  /** The HTML input value. */\n  value?: string | number;\n\n  /** A vertical radio group displays elements vertically. */\n  vertical?: boolean;\n}\n\nexport const radioGroupItemClassName = 'ui-radiogroup__item';\nexport const radioGroupItemSlotClassNames: RadioGroupItemSlotClassNames = {\n  indicator: `${radioGroupItemClassName}__indicator`,\n  label: `${radioGroupItemClassName}__label`,\n};\n\nexport type RadioGroupItemStylesProps = Required<Pick<RadioGroupItemProps, 'disabled' | 'vertical' | 'checked'>>;\n\n/**\n * A RadioGroupItem represents single input element within a RadioGroup.\n *\n * @accessibility\n * Radio items need to be grouped to correctly handle accessibility.\n */\nexport const RadioGroupItem = (React.forwardRef<HTMLDivElement, RadioGroupItemProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(RadioGroupItem.displayName, context.telemetry);\n  setStart();\n  const {\n    label,\n    checkedIndicator,\n    indicator,\n    disabled,\n    vertical,\n    className,\n    design,\n    styles,\n    variables,\n    shouldFocus,\n  } = props;\n  const elementRef = React.useRef<HTMLElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(RadioGroupItem.handledProps, props);\n\n  const [checked, setChecked] = useAutoControlled({\n    defaultValue: props.defaultChecked,\n    value: props.checked,\n    initialValue: false,\n  });\n\n  const prevChecked = React.useRef<boolean>(checked);\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    _.invoke(props, 'onClick', e, props);\n    setChecked(prevChecked => {\n      return !prevChecked;\n    });\n  };\n\n  // This behavior is not conformant with native input radio, it was added to avoid breaking change\n  // and it should be fixed to be conformant with native, only calling onChange when item is clicked (checked will always be true)\n  React.useEffect(() => {\n    if (prevChecked.current !== checked) {\n      _.invoke(props, 'onChange', undefined, { ...props, checked });\n      prevChecked.current = checked;\n    }\n  });\n\n  React.useEffect(() => {\n    if (checked && shouldFocus) elementRef.current.focus();\n  }, [checked, shouldFocus]);\n\n  const { classes, styles: resolvedStyles } = useStyles<RadioGroupItemStylesProps>(RadioGroupItem.displayName, {\n    className: radioGroupItemClassName,\n    mapPropsToStyles: () => ({\n      vertical,\n      disabled,\n      checked,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11yProps = useAccessibility<RadioGroupItemBehaviorProps>(props.accessibility, {\n    debugName: RadioGroupItem.displayName,\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        handleClick(e);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      checked,\n      disabled,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleChange = (e: React.ChangeEvent) => {\n    // RadioGroupItem component doesn't present any `input` component in markup, however all of our\n    // components should handle events transparently.\n    _.invoke(props, 'onChange', e, { ...props, checked });\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <Ref innerRef={elementRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          onClick: handleClick,\n          onChange: handleChange,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {Box.create(checked ? checkedIndicator : indicator, {\n          defaultProps: () => ({\n            className: radioGroupItemSlotClassNames.indicator,\n            styles: resolvedStyles.indicator,\n          }),\n        })}\n        {Box.create(label, {\n          defaultProps: () => ({\n            as: 'span',\n            className: radioGroupItemSlotClassNames.label,\n            styles: resolvedStyles.label,\n          }),\n        })}\n      </ElementType>\n    </Ref>,\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, RadioGroupItemProps> &\n  FluentComponentStaticProps<RadioGroupItemProps>;\n\nRadioGroupItem.displayName = 'RadioGroupItem';\n\nRadioGroupItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  checkedIndicator: customPropTypes.shorthandAllowingChildren,\n  label: customPropTypes.itemShorthand,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  onChange: PropTypes.func,\n  shouldFocus: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool,\n};\n\nRadioGroupItem.defaultProps = {\n  accessibility: radioGroupItemBehavior,\n  indicator: <RadioButtonIcon outline />,\n  checkedIndicator: <RadioButtonIcon />,\n};\n\nRadioGroupItem.handledProps = Object.keys(RadioGroupItem.propTypes) as any;\n\nRadioGroupItem.create = createShorthandFactory({ Component: RadioGroupItem, mappedProp: 'label' });\n"],"mappings":"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"}