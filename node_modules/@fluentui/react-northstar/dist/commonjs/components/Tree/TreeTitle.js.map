{"version":3,"file":"TreeTitle.js","names":["treeTitleClassName","treeTitleSlotClassNames","indicator","TreeTitle","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","useContext","TreeContext","focusItemById","toggleItemActive","toggleItemSelect","accessibility","id","children","className","content","design","hasSubtree","level","index","styles","treeSize","variables","selectionIndicator","disabled","selected","selectable","expanded","indeterminate","getA11Props","useAccessibility","debugName","actionHandlers","performClick","e","shouldPreventDefaultOnKeyDown","preventDefault","stopPropagation","handleClick","focusParent","parent","mapPropsToBehavior","rtl","useStyles","mapPropsToStyles","showIndicator","mapPropsToInlineStyles","unstyled","classes","resolvedStyles","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","selectionIndicatorOverrideProps","predefinedProps","onClick","selectionIndicatorElement","Box","create","defaultProps","as","overrideProps","element","root","rtlTextContainer","getAttributes","forElements","childrenExist","propTypes","commonPropTypes","createCommon","PropTypes","string","bool","number","func","customPropTypes","shorthandAllowingChildren","treeTitleBehavior","Object","keys","createShorthandFactory","Component","mappedProp"],"sources":["components/Tree/TreeTitle.tsx"],"sourcesContent":["import { Accessibility, treeTitleBehavior, TreeTitleBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Box, BoxProps } from '../Box/Box';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { TreeContext } from './context';\n\nexport interface TreeTitleSlotClassNames {\n  indicator: string;\n}\n\nexport interface TreeTitleProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeTitleBehaviorProps>;\n\n  /** Internal usage only -  Id needed to identify this item inside the Tree, passed down from TreeItem */\n  id?: string;\n\n  /** Whether or not the title has a subtree. */\n  hasSubtree?: boolean;\n\n  /** The index of the title among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Level of the tree/subtree that contains this title. */\n  level?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<TreeTitleProps>;\n\n  /** Whether or not the subtree of the title is in the open state. */\n  expanded?: boolean;\n\n  /** Size of the tree containing this title without any children. */\n  treeSize?: number;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /** A selection indicator can appear disabled and be unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A state of selection indicator. */\n  selected?: boolean;\n\n  /** Whether or not tree title is selectable. */\n  selectable?: boolean;\n\n  /** For selectable parents define if all nested children are checked */\n  indeterminate?: boolean;\n\n  /** The id of the parent tree title, if any. */\n  parent?: string;\n\n  unstyled?: boolean;\n}\n\nexport type TreeTitleStylesProps = Pick<\n  TreeTitleProps,\n  'selected' | 'selectable' | 'disabled' | 'indeterminate' | 'level'\n> & {\n  showIndicator: boolean;\n};\n\nexport const treeTitleClassName = 'ui-tree__title';\n\nexport const treeTitleSlotClassNames = {\n  indicator: `${treeTitleClassName}__selection-indicator`,\n};\n\n/**\n * A TreeTitle renders a title of TreeItem.\n */\nexport const TreeTitle = (React.forwardRef<HTMLAnchorElement, TreeTitleProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TreeTitle.displayName, context.telemetry);\n  setStart();\n  const { focusItemById, toggleItemActive, toggleItemSelect } = React.useContext(TreeContext);\n  const {\n    accessibility,\n    id,\n    children,\n    className,\n    content,\n    design,\n    hasSubtree,\n    level,\n    index,\n    styles,\n    treeSize,\n    variables,\n    selectionIndicator,\n    disabled,\n    selected,\n    selectable,\n    expanded,\n    indeterminate,\n  } = props;\n\n  const getA11Props = useAccessibility<TreeTitleBehaviorProps>(accessibility, {\n    debugName: TreeTitle.displayName,\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        handleClick(e);\n      },\n      focusParent: e => {\n        // allow bubbling up to parent treeItem\n        focusItemById(props.parent);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      hasSubtree,\n      level,\n      index,\n      treeSize,\n      selected,\n      selectable,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<TreeTitleStylesProps>(TreeTitle.displayName, {\n    className: treeTitleClassName,\n    mapPropsToStyles: () => ({\n      selected,\n      disabled,\n      selectable,\n      indeterminate,\n      level,\n      showIndicator: selectable && ((hasSubtree && expanded) || selected || indeterminate),\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n    unstyled: props.unstyled,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeTitle.handledProps, props);\n\n  const handleClick = e => {\n    if (hasSubtree) {\n      toggleItemActive(e, id);\n    } else {\n      toggleItemSelect(e, id);\n    }\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const selectionIndicatorOverrideProps = (predefinedProps: BoxProps) => ({\n    onClick: (e: React.SyntheticEvent) => {\n      e.stopPropagation(); // otherwise onClick on title will also be executed\n      if (selectable) {\n        toggleItemSelect(e, id);\n      }\n\n      _.invoke(predefinedProps, 'onClick', e);\n    },\n  });\n\n  const selectionIndicatorElement =\n    selectable &&\n    Box.create(selectionIndicator, {\n      defaultProps: () => ({\n        as: 'span',\n        selected,\n        ...getA11Props('indicator', {\n          className: treeTitleSlotClassNames.indicator,\n          styles: resolvedStyles.selectionIndicator,\n        }),\n      }),\n      overrideProps: selectionIndicatorOverrideProps,\n    });\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        onClick: handleClick,\n        selected,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n      {selectionIndicatorElement}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'a', HTMLAnchorElement, TreeTitleProps> & FluentComponentStaticProps<TreeTitleProps>;\n\nTreeTitle.displayName = 'TreeTitle';\n\nTreeTitle.propTypes = {\n  ...commonPropTypes.createCommon(),\n  id: PropTypes.string,\n  hasSubtree: PropTypes.bool,\n  index: PropTypes.number,\n  level: PropTypes.number,\n  onClick: PropTypes.func,\n  expanded: PropTypes.bool,\n  selected: PropTypes.bool,\n  selectable: PropTypes.bool,\n  treeSize: PropTypes.number,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  unstyled: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  parent: PropTypes.string,\n};\nTreeTitle.defaultProps = {\n  as: 'a' as const,\n  selectionIndicator: {},\n  accessibility: treeTitleBehavior,\n};\nTreeTitle.handledProps = Object.keys(TreeTitle.propTypes) as any;\n\nTreeTitle.create = createShorthandFactory({\n  Component: TreeTitle,\n  mappedProp: 'content',\n});\n"],"mappings":"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"}