{"version":3,"file":"Tree.js","names":["treeClassName","Tree","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","selectable","children","renderedItems","className","design","styles","variables","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","accessibility","debugName","rtl","mapPropsToBehavior","useStyles","mapPropsToInlineStyles","unstyled","classes","useTree","visibleItemIds","getItemById","registerItemRef","toggleItemActive","focusItemById","expandSiblings","toggleItemSelect","getToFocusIDByFirstCharacter","contextValue","useMemo","renderContent","map","id","item","expanded","parent","level","index","treeSize","TreeItem","create","defaultProps","renderItemTitle","overrideProps","key","element","unstable_wrapWithFocusZone","root","rtlTextContainer","getAttributes","forElements","childrenExist","propTypes","commonPropTypes","createCommon","content","activeItemIds","customPropTypes","collectionShorthand","selectedItemIds","defaultActiveItemIds","defaultSelectedItemIds","exclusive","PropTypes","bool","items","collectionObjectShorthand","onActiveItemIdsChange","func","onSelectedItemIdsChange","Item","Title","TreeTitle","treeBehavior","Object","keys","createShorthandFactory","Component","mappedArrayProp"],"sources":["components/Tree/Tree.tsx"],"sourcesContent":["import { Accessibility, treeBehavior, TreeBehaviorProps } from '@fluentui/accessibility';\nimport {\n  useTelemetry,\n  useUnhandledProps,\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { TreeItem, TreeItemProps } from './TreeItem';\nimport { TreeTitle, TreeTitleProps } from './TreeTitle';\nimport {\n  childrenExist,\n  commonPropTypes,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ObjectShorthandCollection,\n  FluentComponentStaticProps,\n  ShorthandRenderFunction,\n} from '../../types';\nimport { useTree } from './hooks/useTree';\nimport { TreeContext, TreeRenderContextValue } from './context';\n\nexport interface TreeProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeBehaviorProps>;\n\n  /** Ids of expanded items. */\n  activeItemIds?: string[];\n\n  /** Ids of selected leaf items. */\n  selectedItemIds?: string[];\n\n  /** Initial activeItemIds value. */\n  defaultActiveItemIds?: string[];\n\n  /** Initial selectedItemIds value. */\n  defaultSelectedItemIds?: string[];\n\n  /** Only allow one subtree to be expanded at a time. */\n  exclusive?: boolean;\n\n  /** Shorthand array of props for Tree. */\n  items?: ObjectShorthandCollection<TreeItemProps>;\n\n  /**\n   * A custom render function for the title slot.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /**\n   * Called when active item ids change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `activeItemIds` reflecting the new state.\n   */\n  onActiveItemIdsChange?: ComponentEventHandler<TreeProps>;\n\n  /**\n   * Called when tree item selection state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `selectedItemIds` reflecting the new state.\n   */\n  onSelectedItemIdsChange?: ComponentEventHandler<TreeProps>;\n\n  /**\n   * Callback that provides rendered tree items to be used by react-virtualized for instance.\n   * Acts as a render prop, with the rendered tree items being the re-used logic.\n   *\n   * @param renderedItem - The array of rendered items.\n   * @returns The render prop result.\n   */\n  renderedItems?: (renderedItems: React.ReactElement[]) => React.ReactNode;\n\n  /** Whether or not tree items are selectable. */\n  selectable?: boolean;\n\n  unstyled?: boolean;\n}\n\nexport const treeClassName = 'ui-tree';\n\nexport type TreeStylesProps = never;\n\n/**\n * A Tree displays data organised in tree hierarchy.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n * @accessibilityIssues\n * [Treeview - JAWS doesn't narrate position for each tree item](https://github.com/FreedomScientific/VFO-standards-support/issues/338)\n * [Aria-selected and aria-checked are not output correctly for trees #432](https://github.com/FreedomScientific/VFO-standards-support/issues/432)\n * [Aria compliant trees are read as empty tables](https://bugs.chromium.org/p/chromium/issues/detail?id=1048770)\n * [VoiceOver narrates \"selected false\" for DOM with role=option and no aria-selected attribute](http://www.openradar.me/FB8050959)\n * [VoiceOver does not support Aria 1.2 listbox role owning unselectable group role](http://www.openradar.me/FB8050958)\n * [Tree as table in Mac > VoiceOver narrates \" no selection \" when user navigates to tree/table](https://bugs.chromium.org/p/chromium/issues/detail?id=1273538)\n * [Tree as table in Mac > VoiceOver narrates \" 0 items enclosed \" when user navigates to expaded treeitem](https://bugs.chromium.org/p/chromium/issues/detail?id=1273540)\n * [Tree as table in Mac > VoiceOver doesn't narrate aria-labelledby element on treeitem](https://bugs.chromium.org/p/chromium/issues/detail?id=1273544)\n */\nexport const Tree = (React.forwardRef<HTMLDivElement, TreeProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Tree.displayName, context.telemetry);\n  setStart();\n\n  const { selectable, children, renderedItems, className, design, styles, variables } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Tree.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Tree.displayName,\n    rtl: context.rtl,\n    mapPropsToBehavior: () => ({\n      selectable,\n    }),\n  });\n\n  const { classes } = useStyles<TreeStylesProps>(Tree.displayName, {\n    className: treeClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n    unstyled: props.unstyled,\n  });\n\n  const {\n    visibleItemIds,\n    getItemById,\n    registerItemRef,\n    toggleItemActive,\n    focusItemById,\n    expandSiblings,\n    toggleItemSelect,\n    getToFocusIDByFirstCharacter,\n  } = useTree(props);\n\n  const contextValue: TreeRenderContextValue = React.useMemo(\n    () => ({\n      getItemById,\n      registerItemRef,\n      toggleItemActive,\n      expandSiblings,\n      focusItemById,\n      toggleItemSelect,\n      getToFocusIDByFirstCharacter,\n    }),\n    [\n      getItemById,\n      registerItemRef,\n      toggleItemActive,\n      focusItemById,\n      expandSiblings,\n      toggleItemSelect,\n      getToFocusIDByFirstCharacter,\n    ],\n  );\n\n  const renderContent = (): React.ReactElement[] => {\n    return visibleItemIds.map(id => {\n      const item = getItemById(id);\n      const { expanded, parent, level, index, treeSize } = item;\n      return TreeItem.create(item.item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            renderItemTitle: props.renderItemTitle,\n          }),\n        overrideProps: {\n          expanded,\n          parent,\n          key: id,\n          level,\n          index,\n          treeSize,\n          selectable: selectable ? item.item.selectable : false,\n        },\n      });\n    });\n  };\n\n  const element = (\n    <TreeContext.Provider value={contextValue}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            ref,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenExist(children) ? children : renderedItems ? renderedItems(renderContent()) : renderContent()}\n        </ElementType>,\n      )}\n    </TreeContext.Provider>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, TreeProps> &\n  FluentComponentStaticProps<TreeProps> & {\n    Item: typeof TreeItem;\n    Title: typeof TreeTitle;\n  };\n\nTree.displayName = 'Tree';\n\nTree.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeItemIds: customPropTypes.collectionShorthand,\n  selectedItemIds: customPropTypes.collectionShorthand,\n  defaultActiveItemIds: customPropTypes.collectionShorthand,\n  defaultSelectedItemIds: customPropTypes.collectionShorthand,\n  exclusive: PropTypes.bool,\n  selectable: PropTypes.bool,\n  unstyled: PropTypes.bool,\n  items: customPropTypes.collectionObjectShorthand,\n  onActiveItemIdsChange: PropTypes.func,\n  onSelectedItemIdsChange: PropTypes.func,\n  renderItemTitle: PropTypes.func,\n  renderedItems: PropTypes.func,\n};\n\nTree.Item = TreeItem;\nTree.Title = TreeTitle;\n\nTree.defaultProps = {\n  accessibility: treeBehavior,\n};\n\nTree.handledProps = Object.keys(Tree.propTypes) as any;\n\nTree.create = createShorthandFactory({\n  Component: Tree,\n  mappedArrayProp: 'items',\n});\n"],"mappings":"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"}