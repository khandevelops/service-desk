{"version":3,"file":"context.js","names":["TreeContext","React","createContext","getItemById","id","registerItemRef","toggleItemActive","focusItemById","expandSiblings","toggleItemSelect","getToFocusIDByFirstCharacter","e"],"sources":["components/Tree/context.ts"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\nimport { FlatTreeItem } from './hooks/flattenTree';\n\nexport interface TreeRenderContextValue {\n  getItemById: (id: string) => FlatTreeItem & { [key: string]: any };\n  registerItemRef: (id: string, node: HTMLElement) => void;\n  toggleItemActive: (e: React.SyntheticEvent, idToToggle: string) => void;\n  focusItemById: (id: string) => void;\n  expandSiblings: (e: React.SyntheticEvent, id: string) => void;\n  toggleItemSelect: (e: React.SyntheticEvent, idToToggle: string) => void;\n  getToFocusIDByFirstCharacter: (e: React.KeyboardEvent, idToStartSearch: string) => string;\n}\n\nexport const TreeContext = React.createContext<TreeRenderContextValue>({\n  getItemById: id => ({ id } as any),\n  registerItemRef: _.noop,\n  toggleItemActive: _.noop,\n  focusItemById: _.noop,\n  expandSiblings: _.noop,\n  toggleItemSelect: _.noop,\n  getToFocusIDByFirstCharacter: (e, id) => id,\n});\n"],"mappings":";;;;;;AAAA;AAA+B;AAAA;AAcxB,IAAMA,WAAW,gBAAGC,KAAK,CAACC,aAAa,CAAyB;EACrEC,WAAW,EAAE,qBAAAC,EAAE;IAAA,OAAK;MAAEA,EAAE,EAAFA;IAAG,CAAC;EAAA,CAAQ;EAClCC,eAAe,gBAAQ;EACvBC,gBAAgB,gBAAQ;EACxBC,aAAa,gBAAQ;EACrBC,cAAc,gBAAQ;EACtBC,gBAAgB,gBAAQ;EACxBC,4BAA4B,EAAE,sCAACC,CAAC,EAAEP,EAAE;IAAA,OAAKA,EAAE;EAAA;AAC7C,CAAC,CAAC;AAAC"}