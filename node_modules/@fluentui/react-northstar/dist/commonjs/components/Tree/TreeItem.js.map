{"version":3,"file":"TreeItem.js","names":["treeItemClassName","TreeItem","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","children","className","contentRef","design","title","renderItemTitle","expanded","level","index","styles","variables","treeSize","selectionIndicator","selectable","id","parent","useContext","TreeContext","getItemById","registerItemRef","toggleItemActive","focusItemById","expandSiblings","toggleItemSelect","getToFocusIDByFirstCharacter","selected","hasSubtree","childrenIds","getA11Props","useAccessibility","actionHandlers","performClick","e","shouldPreventDefaultOnKeyDown","preventDefault","stopPropagation","focusParent","handleFocusParent","collapse","expand","focusFirstChild","handleFocusFirstChild","handleSiblingsExpand","performSelection","handleSelection","debugName","mapPropsToBehavior","indeterminate","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","unstyled","classes","handleTitleOverrides","predefinedProps","onClick","titleProps","handleClick","target","currentTarget","handleKeyDown","key","length","match","altKey","ctrlKey","metaKey","toFocusID","elementRef","useCallback","node","handleRef","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","element","root","onKeyDown","rtlTextContainer","getAttributes","forElements","childrenExist","TreeTitle","create","defaultProps","as","render","overrideProps","propTypes","commonPropTypes","createCommon","content","customPropTypes","PropTypes","string","isRequired","number","items","collectionShorthand","onFocusFirstChild","func","onFocusParent","onTitleClick","onSiblingsExpand","bool","itemShorthand","shorthandAllowingChildren","treeItemBehavior","Object","keys","createShorthandFactory","Component","mappedProp"],"sources":["components/Tree/TreeItem.tsx"],"sourcesContent":["import { Accessibility, treeItemBehavior, TreeItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { handleRef } from '@fluentui/react-component-ref';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandRenderFunction,\n  ShorthandValue,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ComponentKeyboardEventHandler,\n} from '../../types';\nimport { TreeTitle, TreeTitleProps } from './TreeTitle';\nimport { BoxProps } from '../Box/Box';\nimport { TreeContext } from './context';\n\nexport interface TreeItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeItemBehaviorProps>;\n\n  /** Ref for the item DOM element. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /** Id needed to identify this item inside the Tree. */\n  id: string;\n\n  /** The index of the item among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Array of props for sub tree. */\n  items?: ShorthandCollection<TreeItemProps>;\n\n  /** Level of the tree/subtree that contains this item. */\n  level?: number;\n\n  /** Called when the item's first child is about to be focused. */\n  onFocusFirstChild?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's parent is about to be focused. */\n  onFocusParent?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when a tree title is clicked. */\n  onTitleClick?: ComponentEventHandler<TreeItemProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's siblings are about to be expanded. */\n  onSiblingsExpand?: ComponentEventHandler<TreeItemProps>;\n\n  /** Whether or not the item is in the expanded state. Only makes sense if item has children items. If set to true, item is initialy expanded. */\n  expanded?: boolean;\n\n  /** The id of the parent tree item, if any. */\n  parent?: string;\n\n  /**\n   * A custom render iterator for rendering each tree title.\n   * The default component, props, and children are available for each tree title.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /** Size of the tree/subtree that contains this item. */\n  treeSize?: number;\n\n  /** Properties for TreeTitle. */\n  title?: ShorthandValue<TreeTitleProps>;\n\n  /** Whether or not the item can be selectable. */\n  selectable?: boolean;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /**\n   * Called on item key down.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<TreeItemProps>;\n\n  unstyled?: boolean;\n}\n\nexport type TreeItemStylesProps = Required<Pick<TreeItemProps, 'level'>> & {\n  selectable?: boolean;\n};\nexport const treeItemClassName = 'ui-tree__item';\n\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport const TreeItem = (React.forwardRef<HTMLDivElement, TreeItemProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TreeItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    contentRef,\n    design,\n    title,\n    renderItemTitle,\n    expanded,\n    level,\n    index,\n    styles,\n    variables,\n    treeSize,\n    selectionIndicator,\n    selectable,\n    id,\n    parent,\n  } = props;\n\n  const {\n    getItemById,\n    registerItemRef,\n    toggleItemActive,\n    focusItemById,\n    expandSiblings,\n    toggleItemSelect,\n    getToFocusIDByFirstCharacter,\n  } = React.useContext(TreeContext);\n\n  const { selected, hasSubtree, childrenIds } = getItemById(id);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        toggleItemActive(e, id);\n        _.invoke(props, 'onTitleClick', e, props);\n      },\n      focusParent: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusParent(e);\n      },\n      collapse: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleItemActive(e, id);\n      },\n      expand: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleItemActive(e, id);\n      },\n      focusFirstChild: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusFirstChild(e);\n      },\n      expandSiblings: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleSiblingsExpand(e);\n      },\n      performSelection: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        handleSelection(e);\n      },\n    },\n    debugName: TreeItem.displayName,\n    mapPropsToBehavior: () => ({\n      expanded,\n      level,\n      index,\n      hasSubtree,\n      treeSize,\n      selected: selected === true,\n      selectable,\n      indeterminate: selected === 'indeterminate',\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<TreeItemStylesProps>(TreeItem.displayName, {\n    className: treeItemClassName,\n    mapPropsToStyles: () => ({\n      level,\n      selectable,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n    unstyled: props.unstyled,\n  });\n\n  const handleSelection = e => {\n    if (selectable) {\n      toggleItemSelect(e, id);\n    }\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n\n  const handleFocusFirstChild = e => {\n    _.invoke(props, 'onFocusFirstChild', e, props);\n    focusItemById(childrenIds?.[0]);\n  };\n\n  const handleFocusParent = e => {\n    _.invoke(props, 'onFocusParent', e, props);\n    focusItemById(parent);\n  };\n\n  const handleSiblingsExpand = e => {\n    _.invoke(props, 'onSiblingsExpand', e, props);\n    expandSiblings(e, props.id);\n  };\n\n  const handleTitleOverrides = (predefinedProps: TreeTitleProps) => ({\n    id,\n    onClick: (e, titleProps) => {\n      _.invoke(props, 'onTitleClick', e, props);\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n    },\n  });\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (e.target === e.currentTarget) {\n      // onClick listener for mouse click on treeItem DOM only,\n      // which could be triggered by VO+space on selectable tree parent node\n      handleSelection(e);\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key && e.key.length === 1 && e.key.match(/\\S/) && e.key !== '*' && !e.altKey && !e.ctrlKey && !e.metaKey) {\n      e.preventDefault();\n      e.stopPropagation();\n      const toFocusID = getToFocusIDByFirstCharacter(e, props.id);\n      if (toFocusID !== props.id) {\n        focusItemById(toFocusID);\n      }\n    }\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const elementRef = React.useCallback(\n    node => {\n      registerItemRef(id, node);\n      handleRef(contentRef, node);\n      handleRef(ref, node);\n    },\n    [id, contentRef, registerItemRef, ref],\n  );\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeItem.handledProps, props);\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        id,\n        ref: elementRef,\n        selected: selected === true,\n        onClick: handleClick,\n        onKeyDown: handleKeyDown,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children)\n        ? children\n        : TreeTitle.create(title, {\n            defaultProps: () =>\n              getA11Props('title', {\n                hasSubtree,\n                as: hasSubtree ? 'span' : 'a',\n                level,\n                treeSize,\n                expanded,\n                index,\n                selected: selected === true,\n                selectable,\n                parent,\n                ...(hasSubtree && {\n                  indeterminate: selected === 'indeterminate',\n                }),\n                selectionIndicator,\n              }),\n            render: renderItemTitle,\n            overrideProps: handleTitleOverrides,\n          })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, TreeItemProps> & FluentComponentStaticProps<TreeItemProps>;\n\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentRef: customPropTypes.ref,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  level: PropTypes.number,\n  onFocusFirstChild: PropTypes.func,\n  onFocusParent: PropTypes.func,\n  onTitleClick: PropTypes.func,\n  onSiblingsExpand: PropTypes.func,\n  expanded: PropTypes.bool,\n  parent: PropTypes.string,\n  renderItemTitle: PropTypes.func,\n  treeSize: PropTypes.number,\n  title: customPropTypes.itemShorthand,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  selectable: PropTypes.bool,\n  unstyled: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n};\n\nTreeItem.defaultProps = {\n  accessibility: treeItemBehavior,\n  selectable: true,\n};\n\nTreeItem.handledProps = Object.keys(TreeItem.propTypes) as any;\n\nTreeItem.create = createShorthandFactory({\n  Component: TreeItem,\n  mappedProp: 'title',\n});\n"],"mappings":"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"}