{"version":3,"file":"Card.js","names":["cardClassName","Card","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","cardRef","useRef","className","design","styles","variables","children","compact","horizontal","centered","size","fluid","onClick","disabled","expandable","elevated","inverted","ghost","selected","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","accessibility","debugName","actionHandlers","performClick","e","preventDefault","handleClick","focusCard","current","focus","mapPropsToBehavior","rtl","useStyles","mapPropsToStyles","actionable","mapPropsToInlineStyles","classes","element","unstable_wrapWithFocusZone","root","propTypes","commonPropTypes","createCommon","PropTypes","func","bool","CustomPropTypes","defaultProps","cardBehavior","Object","keys","Header","CardHeader","Body","CardBody","Footer","CardFooter","Preview","CardPreview","TopControls","CardTopControls","Column","CardColumn","ExpandableBox","CardExpandableBox","create","createShorthandFactory","Component"],"sources":["components/Card/Card.tsx"],"sourcesContent":["import { Accessibility, cardBehavior, CardBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as CustomPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { commonPropTypes, createShorthandFactory, SizeValue, UIComponentProps } from '../../utils';\nimport { CardBody } from './CardBody';\nimport { CardColumn } from './CardColumn';\nimport { CardFooter } from './CardFooter';\nimport { CardHeader } from './CardHeader';\nimport { CardPreview } from './CardPreview';\nimport { CardTopControls } from './CardTopControls';\nimport { CardExpandableBox } from './CardExpandableBox';\n\nexport interface CardProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<CardBehaviorProps>;\n\n  /** A primary content. */\n  children?: React.ReactNode;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<CardProps>;\n\n  /** A card can be compact, without any padding inside. */\n  compact?: boolean;\n\n  /** A card will used horizontal layout. */\n  horizontal?: boolean;\n\n  /** Centers content in a card. */\n  centered?: boolean;\n\n  /** A card can be sized. */\n  size?: SizeValue;\n\n  /** A card can take up the width and height of its container. */\n  fluid?: boolean;\n\n  /** A card can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A card can be hiding part of the content and expand on hover/focus. */\n  expandable?: boolean;\n\n  /** A card can have elevation styles. */\n  elevated?: boolean;\n\n  /** A card can have inverted background styles. */\n  inverted?: boolean;\n\n  /** A card can have ghost styles. */\n  ghost?: boolean;\n\n  /** A card can show that it is currently selected or not. */\n  selected?: boolean;\n}\n\nexport type CardStylesProps = Pick<\n  CardProps,\n  | 'compact'\n  | 'horizontal'\n  | 'centered'\n  | 'size'\n  | 'fluid'\n  | 'disabled'\n  | 'expandable'\n  | 'elevated'\n  | 'inverted'\n  | 'ghost'\n  | 'selected'\n> & {\n  actionable: boolean;\n};\n\nexport const cardClassName = 'ui-card';\n\n/**\n * A Card is used to display data in sematically grouped way.\n * * @accessibility\n * By default adds `group` role ([more information available in aria documentation](https://www.w3.org/TR/wai-aria-1.1/#group)), thus it's necessary to provide `aria-roledescription` for correct widget description. [More information available in aria documentation.](https://www.w3.org/TR/wai-aria-1.1/#aria-roledescription-property)\n * When card is actionable (i.e. has `onClick` property), use [cardFocusableBehavior](/components/card/accessibility#card-focusable). [More information available in aria documentation.](https://www.w3.org/TR/wai-aria-practices/#gridNav_focus)\n * When card contains actionable elements, use [cardChildrenFocusableBehavior](/components/card/accessibility#card-children-focusable).\n *\n */\nexport const Card = (React.forwardRef<HTMLDivElement, CardProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Card.displayName, context.telemetry);\n  setStart();\n  const cardRef = React.useRef<HTMLElement>();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    children,\n    compact,\n    horizontal,\n    centered,\n    size,\n    fluid,\n    onClick,\n    disabled,\n    expandable,\n    elevated,\n    inverted,\n    ghost,\n    selected,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Card.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Card.displayName,\n    actionHandlers: {\n      performClick: e => {\n        // prevent Spacebar from scrolling\n        e.preventDefault();\n        handleClick(e);\n      },\n      focusCard: e => {\n        cardRef.current.focus();\n      },\n    },\n    mapPropsToBehavior: () => ({\n      disabled,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardStylesProps>(Card.displayName, {\n    className: cardClassName,\n    mapPropsToStyles: () => ({\n      centered,\n      horizontal,\n      compact,\n      size,\n      fluid,\n      actionable: !!onClick,\n      disabled,\n      expandable,\n      elevated,\n      inverted,\n      ghost,\n      selected,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const element = (\n    <Ref innerRef={cardRef}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            onClick: handleClick,\n            ref,\n            ...unhandledProps,\n          })}\n        >\n          {children}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, CardProps> &\n  FluentComponentStaticProps<CardProps> & {\n    Header: typeof CardHeader;\n    Body: typeof CardBody;\n    Footer: typeof CardFooter;\n    Preview: typeof CardPreview;\n    TopControls: typeof CardPreview;\n    Column: typeof CardColumn;\n    ExpandableBox: typeof CardExpandableBox;\n  };\n\nCard.displayName = 'Card';\n\nCard.propTypes = {\n  ...commonPropTypes.createCommon(),\n  onClick: PropTypes.func,\n  compact: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  centered: PropTypes.bool,\n  size: CustomPropTypes.size,\n  fluid: PropTypes.bool,\n  expandable: PropTypes.bool,\n  disabled: PropTypes.bool,\n  elevated: PropTypes.bool,\n  ghost: PropTypes.bool,\n  inverted: PropTypes.bool,\n  selected: PropTypes.bool,\n};\n\nCard.defaultProps = {\n  accessibility: cardBehavior,\n  size: 'medium',\n};\n\nCard.handledProps = Object.keys(Card.propTypes) as any;\nCard.Header = CardHeader;\nCard.Body = CardBody;\nCard.Footer = CardFooter;\nCard.Preview = CardPreview;\nCard.TopControls = CardTopControls;\nCard.Column = CardColumn;\nCard.ExpandableBox = CardExpandableBox;\n\nCard.create = createShorthandFactory({ Component: Card });\n"],"mappings":"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"}