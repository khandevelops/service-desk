{"version":3,"file":"ToolbarDivider.js","names":["toolbarDividerClassName","ToolbarDivider","compose","props","ref","composeOptions","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","className","design","styles","variables","parentVariables","React","useContext","ToolbarVariablesContext","getA11yProps","useAccessibility","debugName","rtl","useStyles","mapPropsToInlineStyles","mergeVariablesOverrides","unstable_props","classes","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","element","root","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon"],"sources":["components/Toolbar/ToolbarDivider.tsx"],"sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  compose,\n} from '@fluentui/react-bindings';\nimport * as React from 'react';\n\nimport { ChildrenComponentProps, ContentComponentProps, UIComponentProps, commonPropTypes } from '../../utils';\nimport { ToolbarVariablesContext } from './toolbarVariablesContext';\n\nexport interface ToolbarDividerProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport type ToolbarDividerStylesProps = never;\nexport const toolbarDividerClassName = 'ui-toolbar__divider';\n\n/**\n * A ToolbarDivider is a non-actionable element that visually segments Toolbar items.\n */\nexport const ToolbarDivider = compose<'div', ToolbarDividerProps, ToolbarDividerStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, className, design, styles, variables } = props;\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarDividerStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergeVariablesOverrides(parentVariables, variables),\n      }),\n      rtl: context.rtl,\n      composeOptions,\n      unstable_props: props,\n    });\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const element = <ElementType {...getA11yProps('root', { ref, ...unhandledProps, className: classes.root })} />;\n    setEnd();\n\n    return element;\n  },\n  {\n    displayName: 'ToolbarDivider',\n    className: toolbarDividerClassName,\n\n    shorthandConfig: {\n      mappedProp: 'content',\n    },\n    handledProps: ['accessibility', 'as', 'children', 'className', 'content', 'styles', 'variables', 'design'],\n  },\n);\n\nToolbarDivider.propTypes = commonPropTypes.createCommon();\n"],"mappings":";;;;AACA;AAUA;AAEA;AACA;AAAoE;AAAA;AAU7D,IAAMA,uBAAuB,GAAG,qBAAqB;;AAE5D;AACA;AACA;AAFA;AAGO,IAAMC,cAAc,GAAG,IAAAC,sBAAO,EACnC,UAACC,KAAK,EAAEC,GAAG,EAAEC,cAAc,EAAK;EAC9B,IAAMC,OAAO,GAAG,IAAAC,+BAAgB,GAAE;EAClC,oBAA6B,IAAAC,2BAAY,EAACH,cAAc,CAACI,WAAW,EAAEH,OAAO,CAACI,SAAS,CAAC;IAAhFC,QAAQ,iBAARA,QAAQ;IAAEC,MAAM,iBAANA,MAAM;EACxBD,QAAQ,EAAE;EAEV,IAAQE,aAAa,GAA2CV,KAAK,CAA7DU,aAAa;IAAEC,SAAS,GAAgCX,KAAK,CAA9CW,SAAS;IAAEC,MAAM,GAAwBZ,KAAK,CAAnCY,MAAM;IAAEC,MAAM,GAAgBb,KAAK,CAA3Ba,MAAM;IAAEC,SAAS,GAAKd,KAAK,CAAnBc,SAAS;EAC3D,IAAMC,eAAe,GAAGC,KAAK,CAACC,UAAU,CAACC,gDAAuB,CAAC;EAEjE,IAAMC,YAAY,GAAG,IAAAC,+BAAgB,EAACV,aAAa,EAAE;IACnDW,SAAS,EAAEnB,cAAc,CAACI,WAAW;IACrCgB,GAAG,EAAEnB,OAAO,CAACmB;EACf,CAAC,CAAC;EACF,iBAAoB,IAAAC,wBAAS,EAA4BrB,cAAc,CAACI,WAAW,EAAE;MACnFK,SAAS,EAAET,cAAc,CAACS,SAAS;MACnCa,sBAAsB,EAAE;QAAA,OAAO;UAC7Bb,SAAS,EAATA,SAAS;UACTC,MAAM,EAANA,MAAM;UACNC,MAAM,EAANA,MAAM;UACNC,SAAS,EAAE,IAAAW,sCAAuB,EAACV,eAAe,EAAED,SAAS;QAC/D,CAAC;MAAA,CAAC;MACFQ,GAAG,EAAEnB,OAAO,CAACmB,GAAG;MAChBpB,cAAc,EAAdA,cAAc;MACdwB,cAAc,EAAE1B;IAClB,CAAC,CAAC;IAXM2B,OAAO,cAAPA,OAAO;EAaf,IAAMC,WAAW,GAAG,IAAAC,6BAAc,EAAC7B,KAAK,CAAC;EACzC,IAAM8B,cAAc,GAAG,IAAAC,gCAAiB,EAAC7B,cAAc,CAAC8B,YAAY,EAAEhC,KAAK,CAAC;EAE5E,IAAMiC,OAAO,gBAAG,oBAAC,WAAW,EAAKd,YAAY,CAAC,MAAM;IAAIlB,GAAG,EAAHA;EAAG,GAAK6B,cAAc;IAAEnB,SAAS,EAAEgB,OAAO,CAACO;EAAI,GAAG,CAAI;EAC9GzB,MAAM,EAAE;EAER,OAAOwB,OAAO;AAChB,CAAC,EACD;EACE3B,WAAW,EAAE,gBAAgB;EAC7BK,SAAS,EAAEd,uBAAuB;EAElCsC,eAAe,EAAE;IACfC,UAAU,EAAE;EACd,CAAC;EACDJ,YAAY,EAAE,CAAC,eAAe,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ;AAC3G,CAAC,CACF;AAAC;AAEFlC,cAAc,CAACuC,SAAS,GAAGC,sBAAe,CAACC,YAAY,EAAE"}