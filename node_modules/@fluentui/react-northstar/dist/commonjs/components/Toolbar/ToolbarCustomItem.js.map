{"version":3,"file":"ToolbarCustomItem.js","names":["toolbarCustomItemClassName","ToolbarCustomItem","compose","props","ref","composeOptions","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","fitted","focusable","styles","variables","parentVariables","React","useContext","ToolbarVariablesContext","getA11yProps","useAccessibility","debugName","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","mergeVariablesOverrides","unstable_props","classes","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","handleBlur","e","handleFocus","element","IS_FOCUSABLE_ATTRIBUTE","root","onBlur","onFocus","childrenExist","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon","PropTypes","oneOfType","bool","oneOf","func"],"sources":["components/Toolbar/ToolbarCustomItem.tsx"],"sourcesContent":["import { Accessibility, IS_FOCUSABLE_ATTRIBUTE } from '@fluentui/accessibility';\nimport {\n  compose,\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ComponentEventHandler } from '../../types';\nimport {\n  ChildrenComponentProps,\n  ContentComponentProps,\n  UIComponentProps,\n  childrenExist,\n  commonPropTypes,\n} from '../../utils';\nimport { ToolbarVariablesContext } from './toolbarVariablesContext';\n\nexport interface ToolbarCustomItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A custom item can remove element padding, vertically or horizontally. */\n  fitted?: boolean | 'horizontally' | 'vertically';\n\n  /** A custom item can be focused. */\n  focusable?: boolean;\n\n  /** A custom item can't be actionable. */\n  onClick?: never;\n\n  /**\n   * Called after user's focus. Will be called only if the item is focusable.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ToolbarCustomItemProps>;\n\n  /**\n   * Called after item blur. Will be called only if the item is focusable.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ToolbarCustomItemProps>;\n}\n\nexport type ToolbarCustomItemStylesProps = Required<Pick<ToolbarCustomItemProps, 'fitted'>>;\nexport const toolbarCustomItemClassName = 'ui-toolbar__customitem';\n\n/**\n * A ToolbarCustomItem renders Toolbar item as a non-actionable `div` with custom content inside.\n */\nexport const ToolbarCustomItem = compose<'div', ToolbarCustomItemProps, ToolbarCustomItemStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, children, className, content, design, fitted, focusable, styles, variables } = props;\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarCustomItemStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({ fitted }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergeVariablesOverrides(parentVariables, variables),\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const handleBlur = (e: React.SyntheticEvent) => {\n      if (focusable) {\n        _.invoke(props, 'onBlur', e, props);\n      }\n    };\n\n    const handleFocus = (e: React.SyntheticEvent) => {\n      if (focusable) {\n        _.invoke(props, 'onFocus', e, props);\n      }\n    };\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          [IS_FOCUSABLE_ATTRIBUTE]: focusable,\n          ...unhandledProps,\n          className: classes.root,\n          onBlur: handleBlur,\n          onFocus: handleFocus,\n          ref,\n        })}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: toolbarCustomItemClassName,\n    displayName: 'ToolbarCustomItem',\n\n    shorthandConfig: { mappedProp: 'content' },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'fitted',\n      'focusable',\n      'onBlur',\n      'onFocus',\n      'styles',\n      'variables',\n    ],\n  },\n);\n\nToolbarCustomItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf<'horizontally' | 'vertically'>(['horizontally', 'vertically']),\n  ]),\n  focusable: PropTypes.bool,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n};\n"],"mappings":"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"}