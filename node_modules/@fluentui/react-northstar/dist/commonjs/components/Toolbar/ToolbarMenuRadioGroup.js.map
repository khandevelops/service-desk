{"version":3,"file":"ToolbarMenuRadioGroup.js","names":["toolbarMenuRadioGroupClassName","ToolbarMenuRadioGroup","compose","props","ref","composeOptions","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","activeIndex","className","design","items","styles","variables","wrapper","slotProps","resolveSlotProps","parentVariables","React","useContext","ToolbarVariablesContext","mergedVariables","mergeVariablesOverrides","getA11yProps","useAccessibility","debugName","rtl","useStyles","mapPropsToInlineStyles","unstable_props","classes","handleItemOverrides","predefinedProps","onClick","e","itemProps","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","content","root","item","index","createShorthand","ToolbarMenuItem","defaultProps","toolbarMenuItemRadioBehavior","as","active","overrideProps","element","slots","children","ToolbarMenuRadioGroupWrapper","propTypes","commonPropTypes","createCommon","PropTypes","number","customPropTypes","collectionShorthand","onItemClick","func","itemShorthand","toolbarMenuRadioGroupBehavior"],"sources":["components/Toolbar/ToolbarMenuRadioGroup.tsx"],"sourcesContent":["import {\n  Accessibility,\n  toolbarMenuRadioGroupBehavior,\n  toolbarMenuItemRadioBehavior,\n  ToolbarMenuRadioGroupBehaviorProps,\n} from '@fluentui/accessibility';\nimport {\n  compose,\n  mergeVariablesOverrides,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthand,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  UIComponentProps,\n  commonPropTypes,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandCollection, ShorthandValue } from '../../types';\nimport { ToolbarMenuItem, ToolbarMenuItemProps } from './ToolbarMenuItem';\nimport { ToolbarMenuRadioGroupWrapper, ToolbarMenuRadioGroupWrapperProps } from './ToolbarMenuRadioGroupWrapper';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\n\nexport interface ToolbarMenuRadioGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuRadioGroupBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number;\n\n  /** Shorthand array of props for ToolbarMenuRadioGroup. */\n  items?: ShorthandCollection<ToolbarMenuItemProps>;\n\n  /**\n   * Called on item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<ToolbarMenuRadioGroupWrapperProps>;\n}\n\nexport type ToolbarMenuRadioGroupStylesProps = never;\n\nexport const toolbarMenuRadioGroupClassName = 'ui-toolbars'; // FIXME: required by getComponentInfo/isConformant. But this is group inside a toolbar not a group of toolbars\n\n/**\n * A ToolbarMenuRadioGroup renders ToolbarMenuItem as a group of mutually exclusive options.\n */\nexport const ToolbarMenuRadioGroup = compose<\n  'ul',\n  ToolbarMenuRadioGroupProps,\n  ToolbarMenuRadioGroupStylesProps,\n  {},\n  {}\n>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, activeIndex, className, design, items, styles, variables, wrapper } = props;\n\n    const slotProps = composeOptions.resolveSlotProps<ToolbarMenuRadioGroupProps>(props);\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarMenuRadioGroupStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const handleItemOverrides = (predefinedProps: ToolbarMenuItemProps): ToolbarMenuItemProps => ({\n      onClick: (e, itemProps) => {\n        _.invoke(predefinedProps, 'onClick', e, itemProps);\n        _.invoke(props, 'onItemClick', e, itemProps);\n      },\n      wrapper: null,\n    });\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const content = (\n      <ElementType {...getA11yProps('root', { ...unhandledProps, className: classes.root, ref })}>\n        <ToolbarVariablesProvider value={mergedVariables}>\n          {_.map(items, (item, index) =>\n            createShorthand(ToolbarMenuItem, item, {\n              defaultProps: () => ({\n                accessibility: toolbarMenuItemRadioBehavior,\n                as: 'li',\n                active: activeIndex === index,\n                index,\n              }),\n              overrideProps: handleItemOverrides,\n            }),\n          )}\n        </ToolbarVariablesProvider>\n      </ElementType>\n    );\n    const element = createShorthand(composeOptions.slots.wrapper, wrapper, {\n      defaultProps: () => getA11yProps('wrapper', slotProps.wrapper || {}),\n      overrideProps: {\n        children: content,\n      },\n    });\n    setEnd();\n\n    return element;\n  },\n  {\n    className: toolbarMenuRadioGroupClassName,\n    displayName: 'ToolbarMenuRadioGroup',\n\n    slots: {\n      wrapper: ToolbarMenuRadioGroupWrapper,\n    },\n\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n\n      'activeIndex',\n      'items',\n      'onItemClick',\n      'wrapper',\n    ],\n  },\n);\n\nToolbarMenuRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  activeIndex: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  wrapper: customPropTypes.itemShorthand,\n};\nToolbarMenuRadioGroup.defaultProps = {\n  as: 'ul',\n  accessibility: toolbarMenuRadioGroupBehavior,\n  wrapper: {},\n};\n"],"mappings":"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"}