{"version":3,"file":"ToolbarItem.js","names":["toolbarItemClassName","ToolbarItem","compose","props","ref","composeOptions","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","active","className","design","icon","children","disabled","disabledFocusable","popup","menuOpen","wrapper","styles","variables","partitionPopperPropsFromShorthand","menu","positioningProps","itemRef","React","useRef","menuRef","parentVariables","useContext","ToolbarVariablesContext","mergedVariables","mergeVariablesOverrides","useContextSelectors","ToolbarMenuContext","menuSlot","v","slots","getA11yProps","useAccessibility","debugName","actionHandlers","performClick","event","preventDefault","handleClick","performWrapperClick","handleWrapperClick","closeMenuAndFocusTrigger","trySetMenuOpen","current","doNotNavigateNextToolbarItem","stopPropagation","mapPropsToBehavior","as","String","hasMenu","hasPopup","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","handleBlur","e","handleFocus","doesNodeContainClick","nativeEvent","target","handleOutsideClick","getRefs","isItemClick","isNestedClick","childRef","isInside","newValue","handleMenuOverrides","predefinedProps","onBlur","isInsideOrMenuTrigger","contains","relatedTarget","onItemClick","itemProps","ElementType","getElementType","slotProps","resolveSlotProps","unhandledProps","useUnhandledProps","handledProps","itemElement","node","handleRef","root","onFocus","onClick","childrenExist","createShorthand","submenuElement","nestingRef","ToolbarMenu","defaultProps","overrideProps","popupElement","trigger","undefined","contentElement","wrapperElement","ToolbarItemIcon","ToolbarItemWrapper","Popup","trapFocus","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon","PropTypes","bool","customPropTypes","shorthandAllowingChildren","oneOfType","arrayOf","onMenuOpenChange","func","shape","never","string","toolbarItemBehavior"],"sources":["components/Toolbar/ToolbarItem.tsx"],"sourcesContent":["import { Accessibility, toolbarItemBehavior, ToolbarItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  compose,\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useContextSelectors,\n} from '@fluentui/react-bindings';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { GetRefs, NodeRef, Unstable_NestingAuto } from '@fluentui/react-component-nesting-registry';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthand,\n  doesNodeContainClick,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection } from '../../types';\nimport { partitionPopperPropsFromShorthand, Popper, PopperShorthandProps } from '../../utils/positioner';\n\nimport { ToolbarMenu, ToolbarMenuProps } from './ToolbarMenu';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { ToolbarMenuItemProps } from '../Toolbar/ToolbarMenuItem';\nimport { ToolbarItemShorthandKinds } from './Toolbar';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\nimport { ToolbarItemWrapper, ToolbarItemWrapperProps } from './ToolbarItemWrapper';\nimport { ToolbarItemIcon, ToolbarItemIconProps } from './ToolbarItemIcon';\nimport { ToolbarItemSubscribedValue, ToolbarMenuContext } from './toolbarMenuContext';\n\nexport interface ToolbarItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ToolbarItemBehaviorProps>;\n\n  /** A toolbar item can be active. */\n  active?: boolean;\n\n  /** A toolbar item can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** A toolbar item can be disabled and focusable at the same time. */\n  disabledFocusable?: boolean;\n\n  /** Name or shorthand for Toolbar Item Icon */\n  icon?: ShorthandValue<ToolbarItemIconProps>;\n\n  /**\n   * Shorthand for the submenu.\n   * If submenu is specified, the item is wrapped to group the item and the menu elements together.\n   */\n  menu?:\n    | ShorthandValue<ToolbarMenuProps & { popper?: PopperShorthandProps }>\n    | ShorthandCollection<ToolbarMenuItemProps, ToolbarItemShorthandKinds>;\n\n  /** Indicates if the menu inside the item is open. */\n  menuOpen?: boolean;\n\n  /**\n   * Event for request to change 'menuOpen' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onMenuOpenChange?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Called after item blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ToolbarItemProps>;\n\n  /**\n   * Attaches a `Popup` component to the ToolbarItem.\n   * Accepts all props as a `Popup`, except `trigger` and `children`.\n   * Traps focus by default.\n   * @see PopupProps\n   */\n  popup?: Omit<PopupProps, 'trigger' | 'children'> | string;\n\n  /** Shorthand for the wrapper component. The item is wrapped only if it contains a menu! */\n  wrapper?: ShorthandValue<ToolbarItemWrapperProps>;\n}\n\nexport type ToolbarItemStylesProps = Required<Pick<ToolbarItemProps, 'active' | 'disabled' | 'disabledFocusable'>>;\n\nexport const toolbarItemClassName = 'ui-toolbar__item';\n\n/**\n * A ToolbarItem renders Toolbar item as a button with an icon.\n */\nexport const ToolbarItem = compose<'button', ToolbarItemProps, ToolbarItemStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      active,\n      className,\n      design,\n      icon,\n      children,\n      disabled,\n      disabledFocusable,\n      popup,\n      menuOpen,\n      wrapper,\n      styles,\n      variables,\n    } = props;\n    const [menu, positioningProps] = partitionPopperPropsFromShorthand(props.menu);\n\n    const itemRef = React.useRef<HTMLElement>();\n    const menuRef = React.useRef<HTMLElement>();\n\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const { menuSlot } = (useContextSelectors(ToolbarMenuContext, {\n      menuSlot: v => v.slots.menu,\n    }) as unknown) as ToolbarItemSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n        performWrapperClick: event => {\n          handleWrapperClick(event);\n        },\n        closeMenuAndFocusTrigger: event => {\n          trySetMenuOpen(false, event);\n          _.invoke(itemRef.current, 'focus');\n        },\n        doNotNavigateNextToolbarItem: event => {\n          event.stopPropagation();\n        },\n      },\n      mapPropsToBehavior: () => ({\n        as: String(props.as),\n        disabled,\n        disabledFocusable,\n        hasMenu: !!menu,\n        hasPopup: !!popup,\n        menuOpen,\n        active,\n      }),\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarItemStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({ active, disabled, disabledFocusable }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const handleBlur = (e: React.SyntheticEvent) => {\n      _.invoke(props, 'onBlur', e, props);\n    };\n\n    const handleFocus = (e: React.SyntheticEvent) => {\n      _.invoke(props, 'onFocus', e, props);\n    };\n\n    const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled || disabledFocusable) {\n        e.preventDefault();\n        return;\n      }\n\n      if (menu) {\n        trySetMenuOpen(!menuOpen, e);\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const handleWrapperClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (menu) {\n        if (doesNodeContainClick(menuRef.current, e.nativeEvent as MouseEvent, context.target, false)) {\n          trySetMenuOpen(false, e);\n        }\n      }\n    };\n\n    const handleOutsideClick = (getRefs: GetRefs) => (e: MouseEvent) => {\n      const isItemClick = doesNodeContainClick(itemRef.current, e, context.target);\n      const isNestedClick = _.some(getRefs(), (childRef: NodeRef) => {\n        return doesNodeContainClick(childRef.current as HTMLElement, e, context.target);\n      });\n      const isInside = isItemClick || isNestedClick;\n\n      if (!isInside) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    const trySetMenuOpen = (newValue: boolean, e: Event | React.SyntheticEvent) => {\n      _.invoke(props, 'onMenuOpenChange', e, { ...props, menuOpen: newValue });\n    };\n\n    const handleMenuOverrides = (getRefs: GetRefs) => (predefinedProps: ToolbarMenuProps) => ({\n      onBlur: (e: React.FocusEvent) => {\n        const isInsideOrMenuTrigger = _.some(getRefs(), (childRef: NodeRef) => {\n          return (\n            childRef.current.contains(e.relatedTarget as HTMLElement) ||\n            itemRef.current.contains(e.relatedTarget as HTMLElement)\n          );\n        });\n\n        if (!isInsideOrMenuTrigger) {\n          trySetMenuOpen(false, e);\n        }\n      },\n      onItemClick: (e, itemProps: ToolbarMenuItemProps) => {\n        const { popup, menuOpen } = itemProps;\n        _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n        if (popup) {\n          return;\n        }\n        // TODO: should we pass toolbarMenuItem to the user callback so he can decide if he wants to close the menu?\n        trySetMenuOpen(menuOpen, e);\n      },\n    });\n\n    const ElementType = getElementType(props);\n    const slotProps = composeOptions.resolveSlotProps<ToolbarItemProps>(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const itemElement = (\n      <Ref\n        innerRef={node => {\n          itemRef.current = node;\n          handleRef(ref, node);\n        }}\n      >\n        <ElementType\n          {...getA11yProps('root', {\n            ...unhandledProps,\n            disabled,\n            className: classes.root,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onClick: handleClick,\n          })}\n        >\n          {childrenExist(children) ? children : createShorthand(composeOptions.slots.icon, icon, slotProps.icon)}\n        </ElementType>\n      </Ref>\n    );\n\n    const submenuElement = menuOpen ? (\n      <Unstable_NestingAuto>\n        {(getRefs, nestingRef) => {\n          return (\n            <>\n              <Ref\n                innerRef={(node: HTMLElement) => {\n                  nestingRef.current = node;\n                  menuRef.current = node;\n                }}\n              >\n                <Popper align=\"start\" position=\"above\" targetRef={itemRef} {...positioningProps}>\n                  <ToolbarVariablesProvider value={mergedVariables}>\n                    {createShorthand(composeOptions.slots.menu || menuSlot || ToolbarMenu, menu, {\n                      defaultProps: () => slotProps.menu,\n                      overrideProps: handleMenuOverrides(getRefs),\n                    })}\n                  </ToolbarVariablesProvider>\n                </Popper>\n              </Ref>\n              <EventListener listener={handleOutsideClick(getRefs)} target={context.target} type=\"click\" capture />\n            </>\n          );\n        }}\n      </Unstable_NestingAuto>\n    ) : null;\n\n    if (popup) {\n      const popupElement = createShorthand(composeOptions.slots.popup, popup, {\n        defaultProps: () => slotProps.popup,\n        overrideProps: {\n          trigger: itemElement,\n          children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger`\n        },\n      });\n      setEnd();\n\n      return popupElement;\n    }\n\n    // wrap the item if it has menu (even if it is closed = not rendered)\n    if (menu) {\n      const contentElement = (\n        <>\n          {itemElement}\n          {submenuElement}\n        </>\n      );\n\n      if (wrapper) {\n        const wrapperElement = createShorthand(composeOptions.slots.wrapper, wrapper, {\n          defaultProps: () => getA11yProps('wrapper', slotProps.wrapper || {}),\n          overrideProps: predefinedProps => ({\n            children: contentElement,\n            onClick: e => {\n              handleWrapperClick(e);\n              _.invoke(predefinedProps, 'onClick', e);\n            },\n          }),\n        });\n        setEnd();\n\n        return wrapperElement;\n      }\n\n      setEnd();\n      return contentElement;\n    }\n\n    setEnd();\n\n    return itemElement;\n  },\n  {\n    className: toolbarItemClassName,\n    displayName: 'ToolbarItem',\n\n    slots: {\n      icon: ToolbarItemIcon,\n      wrapper: ToolbarItemWrapper,\n      popup: Popup, // TODO: compose Popup to ToolbarItemPopup once it has compose functionality\n    },\n\n    slotProps: () => ({\n      popup: { trapFocus: true },\n    }),\n\n    shorthandConfig: { mappedProp: 'content' },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'disabledFocusable',\n      'variables',\n      'active',\n      'disabled',\n      'icon',\n      'menu',\n      'menuOpen',\n      'onMenuOpenChange',\n      'onClick',\n      'onFocus',\n      'onBlur',\n      'popup',\n      'wrapper',\n    ],\n  },\n);\n\nToolbarItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  disabledFocusable: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  menu: PropTypes.oneOfType([\n    customPropTypes.shorthandAllowingChildren,\n    PropTypes.arrayOf(customPropTypes.shorthandAllowingChildren),\n  ]),\n  menuOpen: PropTypes.bool,\n  onMenuOpenChange: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  popup: PropTypes.oneOfType([\n    PropTypes.shape({\n      ...Popup.propTypes,\n      trigger: customPropTypes.never,\n      children: customPropTypes.never,\n    }),\n    PropTypes.string,\n  ]),\n  wrapper: customPropTypes.shorthandAllowingChildren,\n};\nToolbarItem.defaultProps = {\n  as: 'button',\n  accessibility: toolbarItemBehavior,\n  wrapper: {},\n};\n"],"mappings":"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"}