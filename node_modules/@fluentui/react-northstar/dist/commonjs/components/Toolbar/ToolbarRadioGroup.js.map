{"version":3,"file":"ToolbarRadioGroup.js","names":["toolbarRadioGroupClassName","ToolbarRadioGroup","compose","props","ref","composeOptions","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","activeIndex","children","className","design","items","variables","styles","itemRefs","slotProps","resolveSlotProps","parentVariables","React","useContext","ToolbarVariablesContext","mergedVariables","mergeVariablesOverrides","getA11yProps","useAccessibility","debugName","actionHandlers","nextItem","event","setFocusedItem","prevItem","rtl","useStyles","mapPropsToInlineStyles","unstable_props","classes","direction","filteredRadioItems","item","index","currentItem","disabled","currentFocusedIndex","current","tabIndex","itemsLength","length","nextIndex","nextItemToFocus","focus","target","activeElement","stopPropagation","preventDefault","renderItems","kind","createRef","createShorthand","slots","divider","defaultProps","toolbarItem","active","key","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","element","root","childrenExist","ToolbarItem","ToolbarDivider","toolbarRadioGroupItemBehavior","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon","PropTypes","number","customPropTypes","collectionShorthandWithKindProp","toolbarRadioGroupBehavior"],"sources":["components/Toolbar/ToolbarRadioGroup.tsx"],"sourcesContent":["import {\n  Accessibility,\n  toolbarRadioGroupBehavior,\n  toolbarRadioGroupItemBehavior,\n  ToolbarRadioGroupBehaviorProps,\n} from '@fluentui/accessibility';\nimport {\n  compose,\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  ChildrenComponentProps,\n  ContentComponentProps,\n  createShorthand,\n  UIComponentProps,\n  childrenExist,\n  commonPropTypes,\n} from '../../utils';\nimport { ShorthandCollection } from '../../types';\nimport { ToolbarDivider, ToolbarDividerProps } from './ToolbarDivider';\nimport { ToolbarItem, ToolbarItemProps } from './ToolbarItem';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\n\nexport type ToolbarRadioGroupItemShorthandKinds = {\n  divider: ToolbarDividerProps;\n  item: ToolbarItemProps;\n};\n\nexport interface ToolbarRadioGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarRadioGroupBehaviorProps>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number;\n\n  /** Shorthand array of props for ToolbarRadioGroup. */\n  items?: ShorthandCollection<ToolbarItemProps, ToolbarRadioGroupItemShorthandKinds>;\n}\n\nexport type ToolbarRadioGroupStylesProps = never;\nexport const toolbarRadioGroupClassName = 'ui-toolbars'; // FIXME: required by getComponentInfo/isConformant. But this is group inside a toolbar not a group of toolbars\n\n/**\n * A ToolbarRadioGroup renders Toolbar item as a group of mutually exclusive options.\n * Component doesn't implement mutual exclusiveness, it just serves accessibility purposes.\n *\n * @accessibility\n * Implements [ARIA RadioGroup](https://www.w3.org/TR/wai-aria-practices/#radiobutton) design pattern.\n */\nexport const ToolbarRadioGroup = compose<'div', ToolbarRadioGroupProps, ToolbarRadioGroupStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, activeIndex, children, className, design, items, variables, styles } = props;\n    const itemRefs: React.RefObject<HTMLElement>[] = [];\n\n    const slotProps = composeOptions.resolveSlotProps(props);\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        nextItem: event => setFocusedItem(event, 1),\n        prevItem: event => setFocusedItem(event, -1),\n      },\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarRadioGroupStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({ className, design, styles, variables: mergedVariables }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const setFocusedItem = (event: React.KeyboardEvent, direction) => {\n      // filter items which are not disabled\n      const filteredRadioItems: React.RefObject<HTMLElement>[] = _.filter(itemRefs, (item, index) => {\n        const currentItem = items[index] as ToolbarItemProps;\n        return currentItem && !currentItem.disabled;\n      });\n\n      // get the index of currently focused element (w/ tabindex = 0) or the first one as default\n      const currentFocusedIndex =\n        _.findIndex(filteredRadioItems, (item: React.RefObject<HTMLElement>) => {\n          return item.current.tabIndex === 0;\n        }) || 0;\n\n      const itemsLength = filteredRadioItems.length;\n      let nextIndex = currentFocusedIndex + direction;\n\n      if (nextIndex >= itemsLength) {\n        nextIndex = 0;\n      }\n\n      if (nextIndex < 0) {\n        nextIndex = itemsLength - 1;\n      }\n\n      const nextItemToFocus = filteredRadioItems[nextIndex].current;\n      if (nextItemToFocus) {\n        nextItemToFocus.focus();\n      }\n\n      if (context.target.activeElement === nextItemToFocus) {\n        event.stopPropagation();\n      }\n      event.preventDefault();\n    };\n\n    const renderItems = () => {\n      return _.map(items, (item, index) => {\n        const kind = _.get(item, 'kind', 'item');\n\n        const ref = React.createRef<HTMLElement>();\n        itemRefs[index] = ref;\n\n        if (kind === 'divider') {\n          return createShorthand(composeOptions.slots.divider, item, {\n            defaultProps: () => slotProps.divider,\n          });\n        }\n\n        const toolbarItem = createShorthand(composeOptions.slots.item, item, {\n          defaultProps: () => ({\n            ...slotProps.item,\n            active: activeIndex === index,\n          }),\n        });\n\n        return (\n          <Ref innerRef={ref} key={toolbarItem.key}>\n            {toolbarItem}\n          </Ref>\n        );\n      });\n    };\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          ...unhandledProps,\n          className: classes.root,\n          ref,\n        })}\n      >\n        <ToolbarVariablesProvider value={mergedVariables}>\n          {childrenExist(children) ? children : renderItems()}\n        </ToolbarVariablesProvider>\n      </ElementType>\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: toolbarRadioGroupClassName,\n    displayName: 'ToolbarRadioGroup',\n\n    slots: {\n      item: ToolbarItem,\n      divider: ToolbarDivider,\n    },\n    slotProps: () => ({\n      item: {\n        accessibility: toolbarRadioGroupItemBehavior,\n      },\n    }),\n\n    shorthandConfig: { mappedProp: 'content' },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n\n      'activeIndex',\n      'items',\n    ],\n  },\n);\n\nToolbarRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  activeIndex: PropTypes.number,\n  items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item']),\n};\nToolbarRadioGroup.defaultProps = {\n  accessibility: toolbarRadioGroupBehavior,\n};\n"],"mappings":"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"}