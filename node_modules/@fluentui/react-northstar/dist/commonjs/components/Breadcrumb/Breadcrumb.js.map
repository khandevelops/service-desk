{"version":3,"file":"Breadcrumb.js","names":["breadcrumbClassName","Breadcrumb","compose","props","ref","composeOptions","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","children","content","className","design","styles","variables","size","contextValue","React","useMemo","getA11yProps","useAccessibility","debugName","rtl","useStyles","mapPropsToInlineStyles","unstable_props","classes","unhandledProps","useUnhandledProps","handledProps","ElementType","getElementType","result","unstable_wrapWithFocusZone","root","container","childrenExist","wrappedElement","mapPropsToStylesProps","defaultProps","as","breadcrumbBehavior","propTypes","commonPropTypes","createCommon","PropTypes","oneOf","Item","BreadcrumbItem","Divider","BreadcrumbDivider","Link","BreadcrumbLink","create","createShorthandFactory","Component"],"sources":["components/Breadcrumb/Breadcrumb.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  compose,\n  useFluentContext,\n  useTelemetry,\n  useAccessibility,\n  useStyles,\n  useUnhandledProps,\n  getElementType,\n  childrenExist,\n  ShorthandConfig,\n  ComponentWithAs,\n} from '@fluentui/react-bindings';\nimport {\n  commonPropTypes,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  ShorthandFactory,\n  createShorthandFactory,\n} from '../../utils';\nimport { Accessibility, breadcrumbBehavior, BreadcrumbBehaviorProps } from '@fluentui/accessibility';\nimport { BreadcrumbItem } from './BreadcrumbItem';\nimport { BreadcrumbDivider } from './BreadcrumbDivider';\nimport { BreadcrumbLink } from './BreadcrumbLink';\nimport { BreadcrumbContext, BreadcrumbSizeValues } from './breadcrumbContext';\nimport { Ref } from '@fluentui/react-component-ref';\n\nexport interface BreadcrumbProps\n  extends UIComponentProps<BreadcrumbProps>,\n    ContentComponentProps,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<BreadcrumbBehaviorProps>;\n\n  /** Breadcrumb can be sized */\n  size?: BreadcrumbSizeValues;\n}\n\nexport type BreadcrumbStylesProps = Required<Pick<BreadcrumbProps, 'size'>>;\n\nexport const breadcrumbClassName = 'ui-breadcrumb';\n\n/**\n * Breadcrumb is a component that indicates the path of the current page\n *\n * @accessibility\n * Implements [ARIA Breadcrumb](https://www.w3.org/TR/wai-aria-practices-1.1/#breadcrumb) design pattern.\n * Refers to [this ARIA discussion](https://github.com/w3c/aria-practices/issues/635), and uses arrow key to navigate between each breadcrumb item.\n *\n * @accessibilityIssues\n * [Under NVDA Browse mode - Breadcrumb is not navigable](https://github.com/w3c/aria-practices/issues/635 )\n */\nexport const Breadcrumb = compose<'nav', BreadcrumbProps, BreadcrumbStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n    const { accessibility, children, content, className, design, styles, variables, size } = props;\n\n    const contextValue = React.useMemo(() => ({ size }), [size]);\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<BreadcrumbStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n        size,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const result = getA11yProps.unstable_wrapWithFocusZone(\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ...unhandledProps,\n        })}\n      >\n        <BreadcrumbContext.Provider value={contextValue}>\n          <div\n            {...getA11yProps('container', {\n              className: classes.container,\n            })}\n          >\n            {childrenExist(children) ? children : content}\n          </div>\n        </BreadcrumbContext.Provider>\n      </ElementType>,\n    );\n    const wrappedElement = ref ? <Ref innerRef={ref}>{result}</Ref> : result;\n\n    setEnd();\n\n    return wrappedElement;\n  },\n  {\n    className: breadcrumbClassName,\n    displayName: 'Breadcrumb',\n    handledProps: ['accessibility', 'as', 'children', 'className', 'content', 'design', 'styles', 'variables', 'size'],\n    mapPropsToStylesProps: ({ size }) => ({\n      size,\n    }),\n  },\n) as ComponentWithAs<'nav', BreadcrumbProps> & {\n  create: ShorthandFactory<BreadcrumbProps>;\n  shorthandConfig: ShorthandConfig<BreadcrumbProps>;\n\n  Item: typeof BreadcrumbItem;\n  Divider: typeof BreadcrumbDivider;\n  Link: typeof BreadcrumbLink;\n};\n\nBreadcrumb.defaultProps = {\n  as: 'nav',\n  size: 'medium',\n  accessibility: breadcrumbBehavior,\n};\n\nBreadcrumb.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: PropTypes.oneOf(['smaller', 'small', 'medium', 'large']),\n};\n\nBreadcrumb.Item = BreadcrumbItem;\nBreadcrumb.Divider = BreadcrumbDivider;\nBreadcrumb.Link = BreadcrumbLink;\n\nBreadcrumb.create = createShorthandFactory({\n  Component: Breadcrumb,\n});\n"],"mappings":"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"}