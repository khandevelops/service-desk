{"version":3,"file":"Embed.js","names":["embedClassName","embedSlotClassNames","control","Embed","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","alt","title","iframe","placeholder","video","variables","styles","className","design","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","accessibility","debugName","actionHandlers","performClick","event","handleClick","mapPropsToBehavior","rtl","useAutoControlled","defaultValue","defaultActive","value","active","initialValue","setACtive","useState","iframeLoaded","setIframeLoaded","frameRef","useRef","e","stopPropagation","preventDefault","iframeNil","newActive","handleFrameOverrides","predefinedProps","onLoad","current","contentWindow","focus","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","placeholderElement","image","width","height","hasIframe","hasVideo","controlVisible","placeholderVisible","element","root","onClick","Video","create","defaultProps","autoPlay","controls","loop","muted","poster","Box","as","overrideProps","propTypes","commonPropTypes","createCommon","children","content","PropTypes","bool","customPropTypes","itemShorthand","every","disallow","onActiveChange","func","string","embedBehavior","Object","keys","createShorthandFactory","Component"],"sources":["components/Embed/Embed.tsx"],"sourcesContent":["import { Accessibility, embedBehavior, EmbedBehaviorProps } from '@fluentui/accessibility';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n\nimport { createShorthandFactory, UIComponentProps, commonPropTypes } from '../../utils';\nimport { Image } from '../Image/Image';\nimport { Video, VideoProps } from '../Video/Video';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Ref } from '@fluentui/react-component-ref';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAutoControlled,\n  useAccessibility,\n  useTelemetry,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface EmbedSlotClassNames {\n  control: string;\n}\n\nexport interface EmbedProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<EmbedBehaviorProps>;\n\n  /** Alternative text. */\n  alt?: string;\n\n  /** Corresponds to HTML title attribute. */\n  title?: string;\n\n  /** Whether the embedded object should be active. */\n  active?: boolean;\n\n  /** Whether the embedded object should start active. */\n  defaultActive?: boolean;\n\n  /** Shorthand for an control. */\n  control?: ShorthandValue<BoxProps>;\n\n  /** Shorthand for an embedded iframe. */\n  iframe?: ShorthandValue<BoxProps>;\n\n  /**\n   * Event for request to change 'active' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onActiveChange?: ComponentEventHandler<EmbedProps>;\n\n  /**\n   * Called when is clicked.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onClick?: ComponentEventHandler<EmbedProps>;\n\n  /** Image source URL for when video isn't playing. */\n  placeholder?: string;\n\n  /** Shorthand for an embedded video. */\n  video?: ShorthandValue<VideoProps>;\n}\n\nexport const embedClassName = 'ui-embed';\nexport const embedSlotClassNames: EmbedSlotClassNames = {\n  control: `${embedClassName}__control`,\n};\n\nexport type EmbedStylesProps = Required<Pick<EmbedProps, 'active'>> & { iframeLoaded: boolean };\n\n/**\n * An Embed displays content from external websites, like a post from external social network.\n *\n * @accessibility\n * A `placeholder` slot represents an [`Image`](/components/image/definition) component, please follow recommendations from its\n * accessibility section.\n */\nexport const Embed = (React.forwardRef<HTMLSpanElement, EmbedProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Embed.displayName, context.telemetry);\n  setStart();\n  const { alt, title, control, iframe, placeholder, video, variables, styles, className, design } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Embed.handledProps, props);\n\n  const getA11yProps = useAccessibility<EmbedBehaviorProps>(props.accessibility, {\n    debugName: Embed.displayName,\n    actionHandlers: {\n      performClick: event => handleClick(event),\n    },\n    mapPropsToBehavior: () => ({\n      alt,\n      title,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [active, setACtive] = useAutoControlled({\n    defaultValue: props.defaultActive,\n    value: props.active,\n    initialValue: false,\n  });\n\n  const [iframeLoaded, setIframeLoaded] = React.useState(false);\n  const frameRef = React.useRef<HTMLFrameElement>();\n\n  const handleClick = e => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const iframeNil = _.isNil(props.iframe);\n    const newActive = !active;\n\n    if (iframeNil || (!iframeNil && newActive)) {\n      setACtive(newActive);\n      _.invoke(props, 'onActiveChange', e, { ...props, active: newActive });\n    }\n\n    _.invoke(props, 'onClick', e, { ...props, active: newActive });\n  };\n\n  const handleFrameOverrides = predefinedProps => ({\n    onLoad: (e: React.SyntheticEvent) => {\n      _.invoke(predefinedProps, 'onLoad', e);\n      setIframeLoaded(true);\n      frameRef.current.contentWindow.focus();\n    },\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<EmbedStylesProps>(Embed.displayName, {\n    className: embedClassName,\n    mapPropsToStyles: () => ({\n      iframeLoaded,\n      active,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const placeholderElement = placeholder ? (\n    <Image\n      src={placeholder}\n      styles={resolvedStyles.image}\n      variables={{ width: variables.width, height: variables.height }}\n    />\n  ) : null;\n\n  const hasIframe = !_.isNil(iframe);\n  const hasVideo = !_.isNil(video);\n  const controlVisible = !active || hasVideo;\n  const placeholderVisible = !active || (hasIframe && active && !iframeLoaded);\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onClick: handleClick,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {active && (\n        <>\n          {Video.create(video, {\n            defaultProps: () =>\n              getA11yProps('video', {\n                autoPlay: true,\n                controls: false,\n                loop: true,\n                muted: true,\n                poster: placeholder,\n                styles: resolvedStyles.video,\n                variables: {\n                  width: variables.width,\n                  height: variables.height,\n                },\n              }),\n          })}\n          {iframe && (\n            <Ref innerRef={frameRef}>\n              {Box.create(iframe, {\n                defaultProps: () =>\n                  getA11yProps('iframe', {\n                    as: 'iframe',\n                    styles: resolvedStyles.iframe,\n                  }),\n                overrideProps: handleFrameOverrides,\n              })}\n            </Ref>\n          )}\n        </>\n      )}\n\n      {placeholderVisible && placeholderElement}\n      {controlVisible &&\n        Box.create(control, {\n          defaultProps: () =>\n            getA11yProps('control', {\n              className: embedSlotClassNames.control,\n              styles: resolvedStyles.control,\n            }),\n        })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, EmbedProps> & FluentComponentStaticProps<EmbedProps>;\n\nEmbed.displayName = 'Embed';\n\nEmbed.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  active: PropTypes.bool,\n  defaultActive: PropTypes.bool,\n  control: customPropTypes.itemShorthand,\n  iframe: customPropTypes.every([customPropTypes.disallow(['video']), customPropTypes.itemShorthand]),\n  onActiveChange: PropTypes.func,\n  onClick: PropTypes.func,\n  placeholder: PropTypes.string,\n  video: customPropTypes.every([customPropTypes.disallow(['iframe']), customPropTypes.itemShorthand]),\n};\n\nEmbed.defaultProps = {\n  as: 'span' as const,\n  accessibility: embedBehavior,\n  control: {},\n  variables: {},\n};\n\nEmbed.handledProps = Object.keys(Embed.propTypes) as any;\n\nEmbed.create = createShorthandFactory({ Component: Embed });\n"],"mappings":"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"}