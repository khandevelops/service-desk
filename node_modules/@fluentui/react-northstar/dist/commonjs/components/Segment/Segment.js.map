{"version":3,"file":"Segment.js","names":["segmentClassName","Segment","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","children","content","color","inverted","disabled","className","design","styles","variables","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","getA11yProps","useAccessibility","accessibility","debugName","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","element","unstable_wrapWithFocusZone","root","rtlTextContainer","getAttributes","forElements","childrenExist","Box","create","propTypes","commonPropTypes","createCommon","PropTypes","bool","Object","keys","createShorthandFactory","Component"],"sources":["components/Segment/Segment.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ColorComponentProps,\n  createShorthandFactory,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\n\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  useTelemetry,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useUnhandledProps,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface SegmentProps\n  extends UIComponentProps<SegmentProps>,\n    ChildrenComponentProps,\n    ColorComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** An segment can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted?: boolean;\n}\n\nexport type SegmentStylesProps = Required<Pick<SegmentProps, 'color' | 'inverted' | 'disabled'>>;\n\nexport const segmentClassName = 'ui-segment';\n\n/**\n * A Segment visually groups related content.\n */\nexport const Segment = (React.forwardRef<HTMLDivElement, SegmentProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Segment.displayName, context.telemetry);\n  setStart();\n  const { children, content, color, inverted, disabled, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Segment.handledProps, props);\n\n  const getA11yProps = useAccessibility<never>(props.accessibility, {\n    debugName: Segment.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<SegmentStylesProps>(Segment.displayName, {\n    className: segmentClassName,\n    mapPropsToStyles: () => ({\n      color,\n      inverted,\n      disabled,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : Box.create(content)}\n    </ElementType>,\n  );\n\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, SegmentProps> & FluentComponentStaticProps<SegmentProps>;\n\nSegment.displayName = 'Segment';\n\nSegment.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n    color: true,\n  }),\n  disabled: PropTypes.bool,\n  inverted: PropTypes.bool,\n};\nSegment.handledProps = Object.keys(Segment.propTypes) as any;\n\nSegment.create = createShorthandFactory({\n  Component: Segment,\n});\n"],"mappings":"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"}