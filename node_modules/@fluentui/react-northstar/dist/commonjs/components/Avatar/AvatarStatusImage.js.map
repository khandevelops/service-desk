{"version":3,"file":"AvatarStatusImage.js","names":["avatarStatusImageClassName","AvatarStatusImage","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","children","className","design","size","styles","variables","useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","getA11Props","useAccessibility","accessibility","debugName","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","element","root","propTypes","commonPropTypes","createCommon","customPropTypes","Object","keys","defaultProps","imageBehavior","as","shorthandConfig","allowsJSX","mappedProp","create","createShorthandFactory","Component"],"sources":["components/Avatar/AvatarStatusImage.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Accessibility, imageBehavior, ImageBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\nimport { AvatarSizeValue } from './Avatar';\n\nexport interface AvatarStatusImageProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ImageBehaviorProps>;\n\n  /** Size multiplier */\n  size?: AvatarSizeValue;\n\n  /** AvatarImage source URL. */\n  src?: string;\n}\n\nexport type AvatarStatusImageStylesProps = Required<Pick<AvatarStatusImageProps, 'size'>>;\nexport const avatarStatusImageClassName = 'ui-avatar__statusimage';\n\n/**\n * A AvatarStatusImage provides a status image for the Avatar.\n */\nexport const AvatarStatusImage = (React.forwardRef<HTMLImageElement, AvatarStatusImageProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(AvatarStatusImage.displayName, context.telemetry);\n  setStart();\n\n  const { children, className, design, size, styles, variables } = props;\n\n  const { classes } = useStyles<AvatarStatusImageStylesProps>(AvatarStatusImage.displayName, {\n    className: avatarStatusImageClassName,\n    mapPropsToStyles: () => ({\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: AvatarStatusImage.displayName,\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(AvatarStatusImage.handledProps, props);\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...unhandledProps })}>{children}</ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'img', HTMLImageElement, AvatarStatusImageProps> &\n  FluentComponentStaticProps<AvatarStatusImageProps>;\n\nAvatarStatusImage.displayName = 'AvatarStatusImage';\n\nAvatarStatusImage.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: customPropTypes.size,\n};\nAvatarStatusImage.handledProps = Object.keys(AvatarStatusImage.propTypes) as any;\nAvatarStatusImage.defaultProps = {\n  accessibility: imageBehavior,\n  as: 'img',\n};\n\nAvatarStatusImage.shorthandConfig = {\n  allowsJSX: false,\n  mappedProp: 'src',\n};\nAvatarStatusImage.create = createShorthandFactory({\n  allowsJSX: false,\n  Component: AvatarStatusImage,\n  mappedProp: 'src',\n});\n"],"mappings":";;;;AAAA;AAEA;AACA;AASA;AAGA;AAAwF;AAAA;AAejF,IAAMA,0BAA0B,GAAG,wBAAwB;;AAElE;AACA;AACA;AAFA;AAGO,IAAMC,iBAAiB,gBAAIC,KAAK,CAACC,UAAU,CAA2C,UAACC,KAAK,EAAEC,GAAG,EAAK;EAC3G,IAAMC,OAAO,GAAG,IAAAC,+BAAgB,GAAE;EAClC,oBAA6B,IAAAC,2BAAY,EAACP,iBAAiB,CAACQ,WAAW,EAAEH,OAAO,CAACI,SAAS,CAAC;IAAnFC,QAAQ,iBAARA,QAAQ;IAAEC,MAAM,iBAANA,MAAM;EACxBD,QAAQ,EAAE;EAEV,IAAQE,QAAQ,GAAiDT,KAAK,CAA9DS,QAAQ;IAAEC,SAAS,GAAsCV,KAAK,CAApDU,SAAS;IAAEC,MAAM,GAA8BX,KAAK,CAAzCW,MAAM;IAAEC,IAAI,GAAwBZ,KAAK,CAAjCY,IAAI;IAAEC,MAAM,GAAgBb,KAAK,CAA3Ba,MAAM;IAAEC,SAAS,GAAKd,KAAK,CAAnBc,SAAS;EAE5D,iBAAoB,IAAAC,wBAAS,EAA+BlB,iBAAiB,CAACQ,WAAW,EAAE;MACzFK,SAAS,EAAEd,0BAA0B;MACrCoB,gBAAgB,EAAE;QAAA,OAAO;UACvBJ,IAAI,EAAJA;QACF,CAAC;MAAA,CAAC;MACFK,sBAAsB,EAAE;QAAA,OAAO;UAC7BP,SAAS,EAATA,SAAS;UACTC,MAAM,EAANA,MAAM;UACNE,MAAM,EAANA,MAAM;UACNC,SAAS,EAATA;QACF,CAAC;MAAA,CAAC;MACFI,GAAG,EAAEhB,OAAO,CAACgB;IACf,CAAC,CAAC;IAZMC,OAAO,cAAPA,OAAO;EAcf,IAAMC,WAAW,GAAG,IAAAC,+BAAgB,EAACrB,KAAK,CAACsB,aAAa,EAAE;IACxDC,SAAS,EAAE1B,iBAAiB,CAACQ,WAAW;IACxCa,GAAG,EAAEhB,OAAO,CAACgB;EACf,CAAC,CAAC;EAEF,IAAMM,WAAW,GAAG,IAAAC,6BAAc,EAACzB,KAAK,CAAC;EACzC,IAAM0B,cAAc,GAAG,IAAAC,gCAAiB,EAAC9B,iBAAiB,CAAC+B,YAAY,EAAE5B,KAAK,CAAC;EAE/E,IAAM6B,OAAO,gBACX,oBAAC,WAAW,EAAKT,WAAW,CAAC,MAAM;IAAIV,SAAS,EAAES,OAAO,CAACW,IAAI;IAAE7B,GAAG,EAAHA;EAAG,GAAKyB,cAAc,EAAG,EAAGjB,QAAQ,CACrG;EACDD,MAAM,EAAE;EAER,OAAOqB,OAAO;AAChB,CAAC,CACmD;AAAC;AAErDhC,iBAAiB,CAACQ,WAAW,GAAG,mBAAmB;AAEnDR,iBAAiB,CAACkC,SAAS,qBACtBC,sBAAe,CAACC,YAAY,EAAE;EACjCrB,IAAI,EAAEsB,eAAe,CAACtB;AAAI,EAC3B;AACDf,iBAAiB,CAAC+B,YAAY,GAAGO,MAAM,CAACC,IAAI,CAACvC,iBAAiB,CAACkC,SAAS,CAAQ;AAChFlC,iBAAiB,CAACwC,YAAY,GAAG;EAC/Bf,aAAa,EAAEgB,4BAAa;EAC5BC,EAAE,EAAE;AACN,CAAC;AAED1C,iBAAiB,CAAC2C,eAAe,GAAG;EAClCC,SAAS,EAAE,KAAK;EAChBC,UAAU,EAAE;AACd,CAAC;AACD7C,iBAAiB,CAAC8C,MAAM,GAAG,IAAAC,6BAAsB,EAAC;EAChDH,SAAS,EAAE,KAAK;EAChBI,SAAS,EAAEhD,iBAAiB;EAC5B6C,UAAU,EAAE;AACd,CAAC,CAAC"}