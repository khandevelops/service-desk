"use strict";

exports.__esModule = true;
exports.avatarStatusImageClassName = exports.AvatarStatusImage = void 0;
var React = _interopRequireWildcard(require("react"));
var _accessibility = require("@fluentui/accessibility");
var _reactBindings = require("@fluentui/react-bindings");
var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));
var _utils = require("../../utils");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var avatarStatusImageClassName = 'ui-avatar__statusimage';

/**
 * A AvatarStatusImage provides a status image for the Avatar.
 */
exports.avatarStatusImageClassName = avatarStatusImageClassName;
var AvatarStatusImage = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var context = (0, _reactBindings.useFluentContext)();
  var _useTelemetry = (0, _reactBindings.useTelemetry)(AvatarStatusImage.displayName, context.telemetry),
    setStart = _useTelemetry.setStart,
    setEnd = _useTelemetry.setEnd;
  setStart();
  var children = props.children,
    className = props.className,
    design = props.design,
    size = props.size,
    styles = props.styles,
    variables = props.variables;
  var _useStyles = (0, _reactBindings.useStyles)(AvatarStatusImage.displayName, {
      className: avatarStatusImageClassName,
      mapPropsToStyles: function mapPropsToStyles() {
        return {
          size: size
        };
      },
      mapPropsToInlineStyles: function mapPropsToInlineStyles() {
        return {
          className: className,
          design: design,
          styles: styles,
          variables: variables
        };
      },
      rtl: context.rtl
    }),
    classes = _useStyles.classes;
  var getA11Props = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: AvatarStatusImage.displayName,
    rtl: context.rtl
  });
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(AvatarStatusImage.handledProps, props);
  var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
    className: classes.root,
    ref: ref
  }, unhandledProps)), children);
  setEnd();
  return element;
});
exports.AvatarStatusImage = AvatarStatusImage;
AvatarStatusImage.displayName = 'AvatarStatusImage';
AvatarStatusImage.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon(), {
  size: customPropTypes.size
});
AvatarStatusImage.handledProps = Object.keys(AvatarStatusImage.propTypes);
AvatarStatusImage.defaultProps = {
  accessibility: _accessibility.imageBehavior,
  as: 'img'
};
AvatarStatusImage.shorthandConfig = {
  allowsJSX: false,
  mappedProp: 'src'
};
AvatarStatusImage.create = (0, _utils.createShorthandFactory)({
  allowsJSX: false,
  Component: AvatarStatusImage,
  mappedProp: 'src'
});
//# sourceMappingURL=AvatarStatusImage.js.map
