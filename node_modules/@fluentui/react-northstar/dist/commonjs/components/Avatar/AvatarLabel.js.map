{"version":3,"file":"AvatarLabel.js","names":["avatarlabelClassName","labelClassName","AvatarLabel","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","styles","variables","square","size","circular","getA11Props","useAccessibility","debugName","rtl","useStyles","mapPropsToStyles","mapPropsToInlineStyles","classes","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","element","root","rtlTextContainer","getAttributes","forElements","childrenExist","propTypes","commonPropTypes","createCommon","PropTypes","bool","customPropTypes","Object","keys","defaultProps","as","shorthandConfig","mappedProp"],"sources":["components/Avatar/AvatarLabel.tsx"],"sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { labelClassName } from '../Label/Label';\nimport { AvatarSizeValue } from './Avatar';\n\nexport interface AvatarLabelProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** The AvatarLabel can have a square shape. */\n  square?: boolean;\n\n  /** The AvatarLabel can be circular. */\n  circular?: boolean;\n\n  /** Size multiplier. */\n  size?: AvatarSizeValue;\n}\n\nexport type AvatarLabelStylesProps = Pick<AvatarLabelProps, 'size' | 'square' | 'circular'>;\nexport const avatarlabelClassName = labelClassName;\n\n/**\n * A AvatarLabel allows user to classify content.\n */\nexport const AvatarLabel = (React.forwardRef<HTMLSpanElement, AvatarLabelProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(AvatarLabel.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, children, className, content, design, styles, variables, square, size, circular } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: AvatarLabel.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<AvatarLabelStylesProps>(AvatarLabel.displayName, {\n    className: avatarlabelClassName,\n    mapPropsToStyles: () => ({\n      square,\n      size,\n      circular,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(AvatarLabel.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, AvatarLabelProps> &\n  FluentComponentStaticProps<AvatarLabelProps>;\n\nAvatarLabel.displayName = 'AvatarLabel';\n\nAvatarLabel.propTypes = {\n  ...commonPropTypes.createCommon(),\n  square: PropTypes.bool,\n  size: customPropTypes.size,\n  circular: PropTypes.bool,\n};\nAvatarLabel.handledProps = Object.keys(AvatarLabel.propTypes) as any;\n\nAvatarLabel.defaultProps = {\n  as: 'span',\n};\n\nAvatarLabel.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"mappings":"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"}