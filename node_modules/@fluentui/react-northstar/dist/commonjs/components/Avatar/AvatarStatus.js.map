{"version":3,"file":"AvatarStatus.js","names":["avatarStatusClassName","statusClassName","AvatarStatus","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","className","color","design","icon","image","size","state","styles","variables","useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","getA11Props","useAccessibility","accessibility","debugName","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","iconElement","createShorthand","AvatarStatusIcon","defaultProps","imageElement","AvatarStatusImage","element","root","propTypes","commonPropTypes","createCommon","children","content","PropTypes","string","customPropTypes","shorthandAllowingChildren","itemShorthandWithoutJSX","oneOf","Object","keys","avatarStatusBehavior","as","create","createShorthandFactory","Component","mappedProp"],"sources":["components/Avatar/AvatarStatus.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useAccessibility,\n  getElementType,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { commonPropTypes, UIComponentProps, createShorthandFactory, createShorthand } from '../../utils';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Accessibility, statusBehavior as avatarStatusBehavior, StatusBehaviorProps } from '@fluentui/accessibility';\nimport { AvatarStatusIcon, AvatarStatusIconProps } from './AvatarStatusIcon';\nimport { AvatarStatusImage, AvatarStatusImageProps } from './AvatarStatusImage';\nimport { statusClassName } from '../Status/Status';\nimport { AvatarSizeValue } from './Avatar';\n\nexport interface AvatarStatusProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<StatusBehaviorProps>;\n\n  /** A custom color. */\n  color?: string;\n\n  /** Shorthand for the icon, to provide customizing status */\n  icon?: ShorthandValue<AvatarStatusIconProps>;\n\n  /** Shorthand for the image. */\n  image?: ShorthandValue<AvatarStatusImageProps>;\n\n  /** Size multiplier */\n  size?: AvatarSizeValue;\n\n  /** The pre-defined state values which can be consumed directly. */\n  state?: 'success' | 'info' | 'warning' | 'error' | 'unknown';\n}\n\nexport type AvatarStatusStylesProps = Required<Pick<AvatarStatusProps, 'color' | 'size' | 'state'>>;\n// update in upcoming breaking change and enable a unit test\nexport const avatarStatusClassName = statusClassName;\n\n/**\n * A AvatarStatus provides a status for the Avatar.\n */\nexport const AvatarStatus = (React.forwardRef<HTMLSpanElement, AvatarStatusProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(AvatarStatus.displayName, context.telemetry);\n  setStart();\n\n  const { className, color, design, icon, image, size, state, styles, variables } = props;\n  const { classes } = useStyles<AvatarStatusStylesProps>(AvatarStatus.displayName, {\n    className: avatarStatusClassName,\n    mapPropsToStyles: () => ({\n      color,\n      size,\n      state,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: AvatarStatus.displayName,\n    rtl: context.rtl,\n  });\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(AvatarStatus.handledProps, props);\n\n  const iconElement = createShorthand(\n    AvatarStatusIcon,\n    icon as ShorthandValue<AvatarStatusIconProps & { as: 'span' }>,\n    {\n      defaultProps: () => ({\n        size,\n        state,\n      }),\n    },\n  );\n\n  const imageElement = createShorthand(AvatarStatusImage, image, {\n    defaultProps: () =>\n      getA11Props('image', {\n        size,\n      }),\n  });\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...unhandledProps })}>\n      {imageElement || iconElement}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, AvatarStatusProps> & FluentComponentStaticProps;\n\nAvatarStatus.displayName = 'AvatarStatus';\nAvatarStatus.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  color: PropTypes.string,\n  icon: customPropTypes.shorthandAllowingChildren,\n  image: customPropTypes.itemShorthandWithoutJSX,\n  size: customPropTypes.size,\n  state: PropTypes.oneOf(['success', 'info', 'warning', 'error', 'unknown']),\n};\nAvatarStatus.handledProps = Object.keys(AvatarStatus.propTypes) as any;\nAvatarStatus.defaultProps = {\n  accessibility: avatarStatusBehavior,\n  as: 'span',\n  size: 'medium',\n  state: 'unknown',\n};\n\nAvatarStatus.create = createShorthandFactory({ Component: AvatarStatus, mappedProp: 'state' });\n"],"mappings":"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"}