{"version":3,"file":"AvatarIcon.js","names":["avatarIconClassName","AvatarIcon","React","forwardRef","props","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","className","children","design","styles","variables","size","square","content","useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","getA11Props","useAccessibility","accessibility","debugName","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","element","root","childrenExist","propTypes","commonPropTypes","createCommon","PropTypes","bool","customPropTypes","Object","keys","defaultProps","as","shorthandConfig","mappedProp"],"sources":["components/Avatar/AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useAccessibility,\n  getElementType,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport {\n  commonPropTypes,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  childrenExist,\n} from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { AvatarSizeValue } from './Avatar';\n\nexport interface AvatarIconProps extends UIComponentProps, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /** The avatar icon can have a square shape. */\n  square?: boolean;\n\n  /** Size multiplier. */\n  size?: AvatarSizeValue;\n}\n\nexport type AvatarIconStylesProps = Required<Pick<AvatarIconProps, 'size' | 'square'>>;\nexport const avatarIconClassName = 'ui-avatar__icon';\n\n/**\n * A AvatarIcon provides a status icon for the Avatar.\n */\nexport const AvatarIcon = (React.forwardRef<HTMLSpanElement, AvatarIconProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(AvatarIcon.displayName, context.telemetry);\n  setStart();\n\n  const { className, children, design, styles, variables, size, square, content } = props;\n\n  const { classes } = useStyles<AvatarIconStylesProps>(AvatarIcon.displayName, {\n    className: avatarIconClassName,\n    mapPropsToStyles: () => ({\n      size,\n      square,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: AvatarIcon.displayName,\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(AvatarIcon.handledProps, props);\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...unhandledProps })}>\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, AvatarIconProps> &\n  FluentComponentStaticProps<AvatarIconProps>;\n\nAvatarIcon.displayName = 'AvatarIcon';\nAvatarIcon.propTypes = {\n  ...commonPropTypes.createCommon(),\n  square: PropTypes.bool,\n  size: customPropTypes.size,\n};\nAvatarIcon.handledProps = Object.keys(AvatarIcon.propTypes) as any;\nAvatarIcon.defaultProps = {\n  as: 'span',\n};\n\nAvatarIcon.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"mappings":";;;;AAAA;AACA;AASA;AACA;AACA;AAMqB;AAAA;AAiBd,IAAMA,mBAAmB,GAAG,iBAAiB;;AAEpD;AACA;AACA;AAFA;AAGO,IAAMC,UAAU,gBAAIC,KAAK,CAACC,UAAU,CAAmC,UAACC,KAAK,EAAEC,GAAG,EAAK;EAC5F,IAAMC,OAAO,GAAG,IAAAC,+BAAgB,GAAE;EAClC,oBAA6B,IAAAC,2BAAY,EAACP,UAAU,CAACQ,WAAW,EAAEH,OAAO,CAACI,SAAS,CAAC;IAA5EC,QAAQ,iBAARA,QAAQ;IAAEC,MAAM,iBAANA,MAAM;EACxBD,QAAQ,EAAE;EAEV,IAAQE,SAAS,GAAiET,KAAK,CAA/ES,SAAS;IAAEC,QAAQ,GAAuDV,KAAK,CAApEU,QAAQ;IAAEC,MAAM,GAA+CX,KAAK,CAA1DW,MAAM;IAAEC,MAAM,GAAuCZ,KAAK,CAAlDY,MAAM;IAAEC,SAAS,GAA4Bb,KAAK,CAA1Ca,SAAS;IAAEC,IAAI,GAAsBd,KAAK,CAA/Bc,IAAI;IAAEC,MAAM,GAAcf,KAAK,CAAzBe,MAAM;IAAEC,OAAO,GAAKhB,KAAK,CAAjBgB,OAAO;EAE7E,iBAAoB,IAAAC,wBAAS,EAAwBpB,UAAU,CAACQ,WAAW,EAAE;MAC3EI,SAAS,EAAEb,mBAAmB;MAC9BsB,gBAAgB,EAAE;QAAA,OAAO;UACvBJ,IAAI,EAAJA,IAAI;UACJC,MAAM,EAANA;QACF,CAAC;MAAA,CAAC;MACFI,sBAAsB,EAAE;QAAA,OAAO;UAC7BV,SAAS,EAATA,SAAS;UACTE,MAAM,EAANA,MAAM;UACNC,MAAM,EAANA,MAAM;UACNC,SAAS,EAATA;QACF,CAAC;MAAA,CAAC;MACFO,GAAG,EAAElB,OAAO,CAACkB;IACf,CAAC,CAAC;IAbMC,OAAO,cAAPA,OAAO;EAef,IAAMC,WAAW,GAAG,IAAAC,+BAAgB,EAACvB,KAAK,CAACwB,aAAa,EAAE;IACxDC,SAAS,EAAE5B,UAAU,CAACQ,WAAW;IACjCe,GAAG,EAAElB,OAAO,CAACkB;EACf,CAAC,CAAC;EAEF,IAAMM,WAAW,GAAG,IAAAC,6BAAc,EAAC3B,KAAK,CAAC;EACzC,IAAM4B,cAAc,GAAG,IAAAC,gCAAiB,EAAChC,UAAU,CAACiC,YAAY,EAAE9B,KAAK,CAAC;EAExE,IAAM+B,OAAO,gBACX,oBAAC,WAAW,EAAKT,WAAW,CAAC,MAAM;IAAIb,SAAS,EAAEY,OAAO,CAACW,IAAI;IAAE/B,GAAG,EAAHA;EAAG,GAAK2B,cAAc,EAAG,EACtF,IAAAK,oBAAa,EAACvB,QAAQ,CAAC,GAAGA,QAAQ,GAAGM,OAAO,CAEhD;EACDR,MAAM,EAAE;EAER,OAAOuB,OAAO;AAChB,CAAC,CAC4C;AAAC;AAE9ClC,UAAU,CAACQ,WAAW,GAAG,YAAY;AACrCR,UAAU,CAACqC,SAAS,qBACfC,sBAAe,CAACC,YAAY,EAAE;EACjCrB,MAAM,EAAEsB,SAAS,CAACC,IAAI;EACtBxB,IAAI,EAAEyB,eAAe,CAACzB;AAAI,EAC3B;AACDjB,UAAU,CAACiC,YAAY,GAAGU,MAAM,CAACC,IAAI,CAAC5C,UAAU,CAACqC,SAAS,CAAQ;AAClErC,UAAU,CAAC6C,YAAY,GAAG;EACxBC,EAAE,EAAE;AACN,CAAC;AAED9C,UAAU,CAAC+C,eAAe,GAAG;EAC3BC,UAAU,EAAE;AACd,CAAC"}