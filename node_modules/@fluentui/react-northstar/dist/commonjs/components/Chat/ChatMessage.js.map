{"version":3,"file":"ChatMessage.js","names":["chatMessageClassName","chatMessageSlotClassNames","actionMenu","author","badge","bar","body","bubble","bubbleInset","compactBody","reactionGroup","timestamp","partitionActionMenuPropsFromShorthand","value","Array","isArray","inline","showActionMenu","props","ChatMessage","React","forwardRef","inputProps","ref","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","parentAttached","useContextSelector","ChatItemContext","v","attached","chatProps","useChatContextSelectors","density","accessibility","behaviors","message","undefined","chatMessageBehavior","badgePosition","children","className","content","design","details","header","mine","positionActionMenu","reactionGroupPosition","readStatus","styles","overflow","unstable_overflow","unstable_layout","layout","variables","failed","bubbleInsetContent","headerContent","isRefreshComfyLayout","partitionPopperPropsFromShorthand","actionMenuOptions","positioningProps","inlineActionMenu","controlledShowActionMenu","useAutoControlled","defaultValue","setShowActionMenu","hasActionMenu","hasHeaderReactionGroup","actionMenuId","useRef","current","getOrGenerateIdFromShorthand","modifiers","useCallback","target","container","name","options","fallbackPlacements","boundary","getScrollParent","popperRef","usePopper","align","position","positionFixed","enabled","useMergedRefs","actionsMenuTargetRef","targetRef","actionsMenuRef","containerRef","useState","focused","setFocused","getA11Props","useAccessibility","actionHandlers","preventDefault","event","currentTarget","focus","stopPropagation","debugName","mapPropsToBehavior","rtl","useStyles","mapPropsToStyles","hasBadge","hasReactions","mapPropsToInlineStyles","classes","resolvedStyles","handleFocus","e","updatePosition","handleBlur","shouldPreserveFocusState","relatedTarget","handleMouseEnter","handleMouseLeave","renderActionMenu","actionMenuElement","Menu","create","defaultProps","IS_FOCUSABLE_ATTRIBUTE","menuAsToolbarBehavior","overrideProps","id","handleKeyDown","toFocusItemInActionMenu","querySelector","querySelectorAll","keyCode","keyboardKey","Enter","Tab","isShift","shiftKey","focusableElementsInsideMessage","firstFocusableInsideMessage","lastFocusableInsideMessage","length","boundaryElementInsideMessage","childrenPropExists","childrenExist","rootClasses","cx","root","ElementType","getElementType","unhandledProps","useUnhandledProps","handledProps","badgeElement","Label","reactionGroupElement","Reaction","Group","authorElement","Text","size","timestampElement","messageContent","createShorthand","ChatMessageContent","predefinedProps","mergeVariablesOverrides","detailsElement","ChatMessageDetails","readStatusElement","ChatMessageReadStatus","elements","headerElement","ChatMessageHeader","bodyElement","Box","bubbleElement","onMouseEnter","onMouseLeave","bubbleInsetElement","as","element","unstable_wrapWithFocusZone","onBlur","onFocus","onKeyDown","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","PropTypes","oneOfType","customPropTypes","itemShorthand","collectionShorthand","bool","oneOf","func","node","Object","keys","createShorthandFactory","Component","mappedProp"],"sources":["components/Chat/ChatMessage.tsx"],"sourcesContent":["import {\n  Accessibility,\n  chatMessageBehavior,\n  ChatMessageBehaviorProps,\n  IS_FOCUSABLE_ATTRIBUTE,\n  keyboardKey,\n  menuAsToolbarBehavior,\n} from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useAccessibility,\n  useAutoControlled,\n  useContextSelector,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useMergedRefs,\n  ForwardRefWithAs,\n  mergeVariablesOverrides,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  ComponentEventHandler,\n  ComponentKeyboardEventHandler,\n  FluentComponentStaticProps,\n  ObjectShorthandValue,\n  ShorthandCollection,\n  ShorthandValue,\n} from '../../types';\nimport {\n  ChildrenComponentProps,\n  childrenExist,\n  commonPropTypes,\n  ContentComponentProps,\n  createShorthand,\n  createShorthandFactory,\n  getOrGenerateIdFromShorthand,\n  rtlTextContainer,\n  UIComponentProps,\n} from '../../utils';\nimport {\n  getScrollParent,\n  partitionPopperPropsFromShorthand,\n  PopperModifiersFn,\n  PopperRefHandle,\n  PopperShorthandProps,\n  usePopper,\n} from '../../utils/positioner';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Flex } from '../Flex/Flex';\nimport { Label, LabelProps } from '../Label/Label';\nimport { Menu, MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PortalInner } from '../Portal/PortalInner';\nimport { Reaction, ReactionProps } from '../Reaction/Reaction';\nimport { ReactionGroupProps } from '../Reaction/ReactionGroup';\nimport { Text, TextProps } from '../Text/Text';\nimport { useChatContextSelectors } from './chatContext';\nimport { ChatDensity } from './chatDensity';\nimport { ChatItemContext } from './chatItemContext';\nimport { ChatMessageDetails, ChatMessageDetailsProps } from './ChatMessageDetails';\nimport { ChatMessageHeader, ChatMessageHeaderProps } from './ChatMessageHeader';\nimport { ChatMessageReadStatus, ChatMessageReadStatusProps } from './ChatMessageReadStatus';\nimport { ChatMessageContent } from './ChatMessageContent';\n\nexport interface ChatMessageSlotClassNames {\n  actionMenu: string;\n  author: string;\n  badge: string;\n  bar: string;\n  bubble: string;\n  bubbleInset: string;\n  body: string;\n  compactBody: string;\n  reactionGroup: string;\n  timestamp: string;\n}\n\nexport type ChatMessageLayout = 'default' | 'refresh';\n\nexport interface ChatMessageProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ChatMessageBehaviorProps>;\n\n  /**\n   * Menu with actions of the message.\n   * popper: alters the action menu positioning.\n   * inline: whether the action menu should be rendered inline with the chat message, or in the body. It's true by default.\n   * showActionMenu: controls if the action menu is visible or not.\n   */\n  actionMenu?:\n    | ShorthandValue<MenuProps & { popper?: PopperShorthandProps; inline?: boolean; showActionMenu?: boolean }>\n    | ShorthandCollection<MenuItemProps & { inline?: boolean; showActionMenu?: boolean }>;\n\n  /** Controls messages's relation to other chat messages. Is automatically set by the ChatItem. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Author of the message. */\n  author?: ShorthandValue<TextProps>;\n\n  /** Badge attached to the message. */\n  badge?: ShorthandValue<LabelProps>;\n\n  /** A message can format the badge to appear at the start or the end of the message. */\n  badgePosition?: 'start' | 'end';\n\n  /** A message can have a custom body. Only rendered in compact density. */\n  compactBody?: ShorthandValue<BoxProps>;\n\n  /** Chat density. Is automatically set by the Chat. */\n  density?: ChatDensity;\n\n  /** Message details info slot. Displayed in the header or body in comfy and compact density respectively. */\n  details?: ShorthandValue<ChatMessageDetailsProps>;\n\n  /** A message can have a custom header. */\n  header?: ShorthandValue<ChatMessageHeaderProps>;\n\n  /** Optional slot for inserting content into the default header. */\n  headerContent?: React.ReactNode;\n\n  /** Indicates whether message belongs to the current user. */\n  mine?: boolean;\n\n  /**\n   * Called after user's blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called on chat message item key down.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user enters by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user leaves by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseLeave?: ComponentEventHandler<ChatMessageProps>;\n\n  /** Allows suppression of action menu positioning for performance reasons. */\n  positionActionMenu?: boolean;\n\n  /** Reaction group applied to the message. */\n  reactionGroup?: ShorthandValue<ReactionGroupProps> | ShorthandCollection<ReactionProps>;\n\n  /** A message can format the reactions group to appear at the start or the end of the message. */\n  reactionGroupPosition?: 'start' | 'end';\n\n  /** Message read status indicator. */\n  readStatus?: ShorthandValue<ChatMessageReadStatusProps>;\n\n  /** Timestamp of the message. */\n  timestamp?: ShorthandValue<TextProps>;\n\n  /** Positions an actionMenu slot in \"fixed\" mode. */\n  unstable_overflow?: boolean;\n\n  /** A message can render with different layouts. */\n  unstable_layout?: ChatMessageLayout;\n\n  /** Indicates whether the message is in a failed state. */\n  failed?: boolean;\n\n  /** A message can have a custom body element (only applicable to \"refresh\" layout). */\n  body?: ShorthandValue<BoxProps>;\n\n  /** A message can have a custom bubble element (only applicable to \"refresh\" layout). */\n  bubble?: ShorthandValue<BoxProps>;\n\n  /** A message can have a custom bubble inset element which sits next to the bubble (only applicable to \"refresh\" layout). */\n  bubbleInset?: ShorthandValue<BoxProps>;\n\n  /** Optional override for the content in the default bubble inset (only applicable to \"refresh\" layout). */\n  bubbleInsetContent?: React.ReactNode;\n}\n\nexport type ChatMessageStylesProps = Pick<ChatMessageProps, 'attached' | 'badgePosition' | 'density' | 'mine'> & {\n  hasBadge: boolean;\n  hasHeaderReactionGroup: boolean;\n  hasReactions: boolean;\n  layout: ChatMessageLayout;\n  failed: boolean;\n\n  // focused, hasActionMenu and showActionMenu controls the visibility of action menu\n  focused: boolean;\n  hasActionMenu: boolean;\n  showActionMenu: boolean;\n};\n\nexport const chatMessageClassName = 'ui-chat__message';\nexport const chatMessageSlotClassNames: ChatMessageSlotClassNames = {\n  actionMenu: `${chatMessageClassName}__actions`,\n  author: `${chatMessageClassName}__author`,\n  badge: `${chatMessageClassName}__badge`,\n  bar: `${chatMessageClassName}__bar`,\n  body: `${chatMessageClassName}__body`,\n  bubble: `${chatMessageClassName}__bubble`,\n  bubbleInset: `${chatMessageClassName}__bubble-inset`,\n  compactBody: `${chatMessageClassName}__compact-body`,\n  reactionGroup: `${chatMessageClassName}__reactions`,\n  timestamp: `${chatMessageClassName}__timestamp`,\n};\n\nfunction partitionActionMenuPropsFromShorthand<P>(\n  value: ShorthandValue<P & { inline?: boolean; showActionMenu?: boolean }>,\n): [ShorthandValue<P> | ObjectShorthandValue<P>, boolean | undefined, boolean | undefined] {\n  if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n    const { inline, showActionMenu, ...props } = value as ObjectShorthandValue<P> & {\n      inline?: boolean;\n      showActionMenu?: boolean;\n    };\n\n    return [props as ObjectShorthandValue<P>, inline ?? true, showActionMenu];\n  }\n\n  return [value, true, false];\n}\n\n/**\n * A ChatMessage represents a single message in chat.\n */\nexport const ChatMessage = (React.forwardRef<HTMLDivElement, ChatMessageProps>((inputProps, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ChatMessage.displayName, context.telemetry);\n  setStart();\n\n  const parentAttached = useContextSelector(ChatItemContext, v => v.attached);\n  const chatProps = useChatContextSelectors({\n    density: v => v.density,\n    accessibility: v => v.behaviors.message,\n  });\n\n  const props = {\n    ...inputProps,\n    density: inputProps.density === undefined ? chatProps.density : inputProps.density,\n    accessibility:\n      inputProps.accessibility === undefined\n        ? chatProps.accessibility || chatMessageBehavior\n        : inputProps.accessibility,\n  };\n  const {\n    accessibility,\n    attached = parentAttached,\n    author,\n    badge,\n    badgePosition,\n    children,\n    className,\n    compactBody,\n    content,\n    density,\n    design,\n    details,\n    header,\n    mine,\n    positionActionMenu,\n    reactionGroup,\n    reactionGroupPosition,\n    readStatus,\n    styles,\n    timestamp,\n    unstable_overflow: overflow,\n    unstable_layout: layout = 'default',\n    variables,\n    failed,\n    bubble,\n    body,\n    bubbleInset,\n    bubbleInsetContent,\n    headerContent,\n  } = props;\n\n  const isRefreshComfyLayout = layout === 'refresh' && density === 'comfy';\n\n  const [actionMenuOptions, positioningProps] = partitionPopperPropsFromShorthand(props.actionMenu);\n  const [actionMenu, inlineActionMenu, controlledShowActionMenu] = partitionActionMenuPropsFromShorthand(\n    actionMenuOptions,\n  );\n  const [showActionMenu, setShowActionMenu] = useAutoControlled<boolean>({\n    defaultValue: false,\n    value: controlledShowActionMenu,\n  });\n  const hasActionMenu = !_.isNil(actionMenu);\n  const hasHeaderReactionGroup = !!reactionGroup && reactionGroupPosition === 'start';\n\n  const actionMenuId = React.useRef<string>();\n  actionMenuId.current = getOrGenerateIdFromShorthand(`${chatMessageClassName}-`, actionMenu, actionMenuId.current);\n\n  const modifiers = React.useCallback<PopperModifiersFn>(\n    (target, container) => {\n      return (\n        positionActionMenu && [\n          // https://popper.js.org/docs/v2/modifiers/flip/\n          // Forces to flip only in \"top-*\" positions\n          { name: 'flip', options: { fallbackPlacements: ['top'] } },\n          overflow && {\n            name: 'preventOverflow',\n            options: { boundary: getScrollParent(container) },\n          },\n        ]\n      );\n    },\n    [positionActionMenu, overflow],\n  );\n\n  const popperRef = React.useRef<PopperRefHandle>();\n  const { targetRef: actionsMenuTargetRef, containerRef: actionsMenuRef } = usePopper({\n    align: 'end',\n    position: 'above',\n    positionFixed: overflow,\n\n    enabled: hasActionMenu && positionActionMenu,\n    modifiers,\n\n    ...positioningProps,\n    popperRef: useMergedRefs(positioningProps?.popperRef, popperRef),\n  });\n\n  // `focused` state is used for show/hide actionMenu\n  const [focused, setFocused] = React.useState<boolean>(false);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      // prevents default FocusZone behavior, e.g., in ChatMessageBehavior, it prevents FocusZone from using arrow keys\n      // as navigation (only Tab key should work)\n      preventDefault: event => {\n        // preventDefault only if event coming from inside the message\n        if (event.currentTarget !== event.target) {\n          event.preventDefault();\n        }\n      },\n\n      focus: event => {\n        const target = actionsMenuTargetRef.current;\n        if (target) {\n          target.focus();\n          event.stopPropagation();\n        }\n      },\n    },\n    debugName: ChatMessage.displayName,\n    mapPropsToBehavior: () => ({\n      hasActionMenu,\n      inlineActionMenu,\n      actionMenuId: actionMenuId.current,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<ChatMessageStylesProps>(ChatMessage.displayName, {\n    className: chatMessageClassName,\n    mapPropsToStyles: () => ({\n      attached,\n      badgePosition,\n      density,\n      focused,\n      hasActionMenu,\n      hasBadge: !!badge,\n      hasHeaderReactionGroup,\n      mine,\n      showActionMenu,\n      hasReactions: !!reactionGroup,\n      failed,\n      layout,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    popperRef.current?.updatePosition();\n\n    // react onFocus is called even when nested component receives focus (i.e. it bubbles)\n    // so when focus moves within actionMenu, the `focus` state in chatMessage remains true, and keeps actionMenu visible\n    setFocused(true);\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    // `focused` controls is focused the whole `ChatMessage` or any of its children. When we're navigating\n    // with keyboard the focused element will be changed and there is no way to use `:focus` selector\n    const shouldPreserveFocusState = _.invoke(e, 'currentTarget.contains', (e as any).relatedTarget);\n\n    setFocused(shouldPreserveFocusState);\n    setShowActionMenu(false);\n\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleMouseEnter = (e: React.SyntheticEvent) => {\n    popperRef.current?.updatePosition();\n    if (hasActionMenu && !inlineActionMenu) {\n      setShowActionMenu(true);\n    }\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const handleMouseLeave = (e: React.SyntheticEvent) => {\n    if (!focused && hasActionMenu && !inlineActionMenu) {\n      setShowActionMenu(false);\n    }\n    _.invoke(props, 'onMouseLeave', e, props);\n  };\n\n  const renderActionMenu = () => {\n    const actionMenuElement = Menu.create(actionMenu, {\n      defaultProps: () => ({\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        accessibility: menuAsToolbarBehavior,\n        className: chatMessageSlotClassNames.actionMenu,\n        styles: resolvedStyles.actionMenu,\n      }),\n      overrideProps: {\n        id: actionMenuId.current,\n      },\n    });\n\n    const content = actionMenuElement ? <Ref innerRef={actionsMenuRef}>{actionMenuElement}</Ref> : actionMenuElement;\n\n    return inlineActionMenu || !content ? content : <PortalInner>{content}</PortalInner>;\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (hasActionMenu && !inlineActionMenu) {\n      // reference: https://github.com/microsoft/fluentui/pull/17329\n\n      const toFocusItemInActionMenu =\n        actionsMenuRef.current?.querySelector('[tabindex=\"0\"]') ??\n        actionsMenuRef.current?.querySelectorAll('[tabindex=\"-1\"]:not([data-is-focusable=\"false\"])')[0];\n\n      if (e.keyCode === keyboardKey.Enter) {\n        toFocusItemInActionMenu?.focus();\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      if (e.keyCode === keyboardKey.Tab) {\n        // TAB/SHIFT+TAB cycles focus among actionMenu and focusable elements within chat message\n        const isShift = !!e.shiftKey;\n\n        const focusableElementsInsideMessage: NodeListOf<HTMLElement> = e.currentTarget.querySelectorAll(\n          '[tabindex=\"-1\"]:not([data-is-focusable=\"false\"])',\n        );\n        const firstFocusableInsideMessage = focusableElementsInsideMessage[0];\n        const lastFocusableInsideMessage = focusableElementsInsideMessage[focusableElementsInsideMessage.length - 1];\n\n        if (e.target === toFocusItemInActionMenu) {\n          // focus is now inside action menu\n          // cycle focus into the first/last focusable element inside chat message\n          if (isShift) {\n            lastFocusableInsideMessage?.focus();\n          } else {\n            firstFocusableInsideMessage?.focus();\n          }\n          e.stopPropagation();\n          e.preventDefault();\n        } else {\n          const boundaryElementInsideMessage = isShift ? firstFocusableInsideMessage : lastFocusableInsideMessage;\n          if (e.target === boundaryElementInsideMessage) {\n            // focus is now on the first/last focusable element inside chat message\n            toFocusItemInActionMenu.focus(); // cycle focus back into action Menu\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        }\n      }\n    }\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const childrenPropExists = childrenExist(children);\n  const rootClasses = childrenPropExists ? cx(classes.root, classes.content) : classes.root;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatMessage.handledProps, props);\n\n  const badgeElement = Label.create(badge, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.badge,\n      styles: resolvedStyles.badge,\n    }),\n  });\n\n  const reactionGroupElement = Reaction.Group.create(reactionGroup, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.reactionGroup,\n      styles: resolvedStyles.reactionGroup,\n    }),\n  });\n\n  const actionMenuElement = renderActionMenu();\n\n  const authorElement = Text.create(author, {\n    defaultProps: () => ({\n      size: density === 'comfy' ? 'small' : undefined,\n      styles: resolvedStyles.author,\n      className: chatMessageSlotClassNames.author,\n    }),\n  });\n\n  const timestampElement = Text.create(timestamp, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.timestamp,\n      timestamp: true,\n      className: chatMessageSlotClassNames.timestamp,\n    }),\n  });\n\n  const messageContent = createShorthand(ChatMessageContent, content, {\n    defaultProps: () => ({ badgePosition, density, failed, hasBadge: !!badge, mine, unstable_layout: layout }),\n    overrideProps: predefinedProps => ({\n      variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n    }),\n  });\n\n  const detailsElement = createShorthand(ChatMessageDetails, details, {\n    defaultProps: () => ({ attached, density, hasHeaderReactionGroup, mine }),\n  });\n\n  const readStatusElement = createShorthand(ChatMessageReadStatus, readStatus, {\n    defaultProps: () => ({ density }),\n  });\n\n  let elements = <></>;\n  if (density === 'compact') {\n    const headerElement = createShorthand(ChatMessageHeader, header);\n\n    const bodyElement = Box.create(compactBody || {}, {\n      defaultProps: () =>\n        getA11Props('compactBody', {\n          className: chatMessageSlotClassNames.compactBody,\n          styles: resolvedStyles.compactBody,\n        }),\n      overrideProps: () => ({\n        content: (\n          <>\n            <Flex.Item grow={1}>\n              <div>\n                {authorElement}\n                {messageContent}\n              </div>\n            </Flex.Item>\n            {timestampElement}\n            {detailsElement}\n            {badgeElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {actionMenuElement}\n        <div className={chatMessageSlotClassNames.bar} />\n        {headerElement}\n        {bodyElement}\n        {reactionGroupElement}\n        {readStatusElement}\n      </>\n    );\n  } else if (isRefreshComfyLayout) {\n    const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n      defaultProps: () => ({\n        styles: resolvedStyles.header,\n        content: (\n          <>\n            {authorElement}\n            {headerContent}\n            {detailsElement}\n          </>\n        ),\n      }),\n    });\n\n    const bubbleElement = Box.create(bubble || {}, {\n      defaultProps: () =>\n        getA11Props('bubble', {\n          className: chatMessageSlotClassNames.bubble,\n          styles: resolvedStyles.bubble,\n        }),\n      overrideProps: () => ({\n        ref: actionsMenuTargetRef,\n        content: (\n          <>\n            {actionMenuElement}\n            {messageContent}\n            {reactionGroupElement}\n            {readStatusElement}\n          </>\n        ),\n        onMouseEnter(e: React.SyntheticEvent) {\n          popperRef.current?.updatePosition();\n          handleMouseEnter(e);\n        },\n        onMouseLeave(e: React.SyntheticEvent) {\n          handleMouseLeave(e);\n        },\n      }),\n    });\n\n    const bubbleInsetElement = Box.create(bubbleInset || {}, {\n      defaultProps: () => ({\n        as: 'span',\n        className: chatMessageSlotClassNames.bubbleInset,\n        styles: resolvedStyles.bubbleInset,\n      }),\n      overrideProps: () => ({\n        content: (\n          <>\n            {badgeElement}\n            {bubbleInsetContent}\n            {timestampElement}\n          </>\n        ),\n      }),\n    });\n\n    const bodyElement = Box.create(body || {}, {\n      defaultProps: () =>\n        getA11Props('body', {\n          className: chatMessageSlotClassNames.body,\n          styles: resolvedStyles.body,\n        }),\n      overrideProps: () => ({\n        content: (\n          <>\n            {bubbleElement}\n            {bubbleInsetElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {headerElement}\n        {bodyElement}\n      </>\n    );\n  } else {\n    const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n      overrideProps: () => ({\n        content: (\n          <>\n            {authorElement}\n            {timestampElement}\n            {detailsElement}\n            {reactionGroupPosition === 'start' && reactionGroupElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {actionMenuElement}\n        <div className={chatMessageSlotClassNames.bar} />\n        {badgePosition === 'start' && badgeElement}\n        {headerElement}\n        {messageContent}\n        {reactionGroupPosition === 'end' && reactionGroupElement}\n        {badgePosition === 'end' && badgeElement}\n        {readStatusElement}\n      </>\n    );\n  }\n\n  const element = (\n    <Ref innerRef={!isRefreshComfyLayout && actionsMenuTargetRef}>\n      {getA11Props.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11Props('root', {\n            className: rootClasses,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onMouseEnter: handleMouseEnter,\n            onMouseLeave: handleMouseLeave,\n            onKeyDown: handleKeyDown,\n            ref,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenPropExists ? children : elements}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, ChatMessageProps> &\n  FluentComponentStaticProps<ChatMessageProps>;\n\nChatMessage.displayName = 'ChatMessage';\n\nChatMessage.defaultProps = {\n  badgePosition: 'end',\n  positionActionMenu: true,\n  reactionGroupPosition: 'start',\n};\n\nChatMessage.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actionMenu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  author: customPropTypes.itemShorthand,\n  badge: customPropTypes.itemShorthand,\n  badgePosition: PropTypes.oneOf(['start', 'end']),\n  compactBody: customPropTypes.itemShorthand,\n  density: PropTypes.oneOf<ChatDensity>(['comfy', 'compact']),\n  details: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  mine: PropTypes.bool,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  positionActionMenu: PropTypes.bool,\n  reactionGroup: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  reactionGroupPosition: PropTypes.oneOf(['start', 'end']),\n  readStatus: customPropTypes.itemShorthand,\n  timestamp: customPropTypes.itemShorthand,\n  unstable_overflow: PropTypes.bool,\n  unstable_layout: PropTypes.oneOf(['default', 'refresh']),\n  failed: PropTypes.bool,\n  headerContent: PropTypes.node,\n  body: customPropTypes.itemShorthand,\n  bubble: customPropTypes.itemShorthand,\n  bubbleInset: customPropTypes.itemShorthand,\n  bubbleInsetContent: PropTypes.node,\n};\n\nChatMessage.handledProps = Object.keys(ChatMessage.propTypes) as any;\n\nChatMessage.create = createShorthandFactory({ Component: ChatMessage, mappedProp: 'content' });\n"],"mappings":"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"}