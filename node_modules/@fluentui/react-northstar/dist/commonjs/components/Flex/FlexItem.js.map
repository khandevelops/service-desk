{"version":3,"file":"FlexItem.js","names":["applyStyles","element","styles","classes","type","React","cloneElement","className","cx","props","root","mergeStyles","flexItemClassName","FlexItem","context","useFluentContext","useTelemetry","displayName","telemetry","setStart","setEnd","align","children","design","grow","flexDirection","push","shrink","size","variables","useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","resolvedStyles","Children","only","propTypes","commonPropTypes","createCommon","accessibility","content","PropTypes","oneOfType","func","oneOf","string","bool","number","__isFlexItem"],"sources":["components/Flex/FlexItem.tsx"],"sourcesContent":["import { ComponentSlotClasses, useStyles, useTelemetry, useFluentContext } from '@fluentui/react-bindings';\nimport { ComponentSlotStylesPrepared, ComponentSlotStylesResolved, mergeStyles } from '@fluentui/styles';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { commonPropTypes, UIComponentProps, ChildrenComponentProps } from '../../utils';\n\ntype ChildrenFunction = (params: { styles: ComponentSlotStylesPrepared; classes: string }) => React.ReactElement;\n\nexport type FlexItemChildren = React.ReactElement | ChildrenFunction;\n\nexport interface FlexItemProps extends UIComponentProps, ChildrenComponentProps<FlexItemChildren> {\n  /** Controls item's alignment. */\n  align?: 'auto' | 'start' | 'end' | 'center' | 'baseline' | 'stretch';\n\n  /** Defines size of the item. */\n  size?: 'size.half' | 'size.quarter' | 'size.small' | 'size.medium' | 'size.large' | string;\n\n  /**\n   * Item can fill remaining space of the container.\n   * If numeric value is provided, remaining space will be distributed proportionally between all the items.\n   * */\n  grow?: boolean | number;\n\n  /**\n   * Controls item's ability to shrink.\n   * */\n  shrink?: boolean | number;\n\n  /**\n   * Item can be pushed towards opposite side in the container's direction.\n   */\n  push?: boolean;\n\n  /**\n   * IGNORE (will be refactored and not exposed via API).\n   * Value is automatically set by parent Flex component.\n   */\n  flexDirection?: 'row' | 'column';\n}\n\nexport type FlexItemStylesProps = Pick<FlexItemProps, 'align' | 'grow' | 'flexDirection' | 'push' | 'shrink' | 'size'>;\n\nconst applyStyles = (\n  element: React.ReactElement,\n  styles: ComponentSlotStylesResolved,\n  classes: ComponentSlotClasses,\n): React.ReactElement => {\n  if (!styles) {\n    return element;\n  }\n\n  // if element is DOM element\n  if (typeof element.type === 'string') {\n    return React.cloneElement(element, {\n      className: cx(element.props.className, classes.root),\n    });\n  }\n\n  // assuming element is Fluent UI element\n  return React.cloneElement(element, {\n    styles: mergeStyles(styles.root || {}, element.props.styles),\n  });\n};\n\nexport const flexItemClassName = 'ui-flex__item';\n\n/**\n * A FlexItem is a layout component that customizes alignment of Flex child.\n */\nexport const FlexItem: React.FC<FlexItemProps> & { __isFlexItem: boolean } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(FlexItem.displayName, context.telemetry);\n  setStart();\n\n  const { align, children, className, design, grow, flexDirection, push, shrink, size, styles, variables } = props;\n\n  const { classes, styles: resolvedStyles } = useStyles<FlexItemStylesProps>(FlexItem.displayName, {\n    className: flexItemClassName,\n    mapPropsToStyles: () => ({\n      align,\n      grow,\n      flexDirection,\n      push,\n      shrink,\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  let element: React.ReactElement;\n\n  // pass calculated bits using Render Props pattern\n  if (typeof children === 'function') {\n    element = children({\n      styles: resolvedStyles.root as ComponentSlotStylesPrepared,\n      classes: classes.root,\n    });\n  } else if (_.isNil(children)) {\n    element = null;\n  } else {\n    element = applyStyles(React.Children.only(children) as React.ReactElement, resolvedStyles, classes);\n  }\n\n  setEnd();\n\n  return element;\n};\n\nFlexItem.displayName = 'FlexItem';\n\nFlexItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    accessibility: false,\n    content: false,\n  }),\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n\n  align: PropTypes.oneOf(['auto', 'start', 'end', 'center', 'baseline', 'stretch']),\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['size.half', 'size.quarter', 'size.small', 'size.medium', 'size.large']),\n    PropTypes.string,\n  ]),\n  shrink: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n\n  push: PropTypes.bool,\n\n  /**\n   * Will be automatically set by parent Flex component\n   */\n  flexDirection: PropTypes.oneOf(['row', 'column']),\n};\n\n// Boolean flag for now, Symbol-based approach may be used instead.\n// However, there are  concerns related to browser compatibility if Symbols will be used.\n// Completely alternative approach - check class name of React element (and generalize this logic).\nFlexItem.__isFlexItem = true;\n"],"mappings":"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"}