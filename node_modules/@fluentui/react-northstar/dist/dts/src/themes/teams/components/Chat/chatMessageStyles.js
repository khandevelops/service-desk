"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.chatMessageStyles = void 0;
var lodash_1 = require("lodash");
var chatDensity_1 = require("../../../../components/Chat/chatDensity");
var ChatMessage_1 = require("../../../../components/Chat/ChatMessage");
var utils_1 = require("../../../../utils");
var getBorderFocusStyles_1 = require("../../getBorderFocusStyles");
var chatMessageStylesComfy_1 = require("./chatMessageStylesComfy");
var chatMessageStylesCompact_1 = require("./chatMessageStylesCompact");
var chatMessageStylesComfyRefresh_1 = require("./chatMessageStylesComfyRefresh");
var displayActionMenu = function (overlayZIndex) { return ({
    // we need higher zIndex for the action menu in order to be displayed above the focus border of the chat message
    zIndex: overlayZIndex,
    overflow: 'visible',
    // opacity should always be preferred over visibility in order to avoid accessibility bugs in
    // JAWS behavior on Windows
    opacity: 1,
    width: 'auto',
}); };
var chatMessageDensityStyles = {
    comfy: chatMessageStylesComfy_1.chatMessageStylesComfy,
    compact: chatMessageStylesCompact_1.chatMessageStylesCompact,
};
var getChatMessageVariantStyles = function (props) {
    var density = props.density || chatDensity_1.defaultChatDensity;
    if (props.layout === 'refresh' && density === 'comfy') {
        return chatMessageStylesComfyRefresh_1.chatMessageStylesComfyRefresh;
    }
    return chatMessageDensityStyles[density];
};
exports.chatMessageStyles = {
    root: function (componentStyleFunctionParam) {
        var _a, _b;
        var _c, _d;
        var p = componentStyleFunctionParam.props, v = componentStyleFunctionParam.variables, siteVariables = componentStyleFunctionParam.theme.siteVariables;
        if (p.layout === 'refresh' && p.density === 'comfy') {
            return chatMessageStylesComfyRefresh_1.chatMessageStylesComfyRefresh.root(componentStyleFunctionParam);
        }
        return __assign(__assign(__assign({ borderRadius: v.borderRadius, display: 'inline-block', outline: 0, position: 'relative', wordBreak: 'break-word', wordWrap: 'break-word' }, getBorderFocusStyles_1.getBorderFocusStyles({ borderRadius: 'inherit', variables: siteVariables })), (lodash_1.isNil(v.showActionMenu) &&
            p.hasActionMenu && __assign({ ':hover': (_a = {},
                _a["> ." + ChatMessage_1.chatMessageSlotClassNames.actionMenu] = displayActionMenu(v.overlayZIndex),
                _a) }, (p.showActionMenu && (_b = {},
            _b["> ." + ChatMessage_1.chatMessageSlotClassNames.actionMenu] = displayActionMenu(v.overlayZIndex),
            _b))))), (_d = (_c = getChatMessageVariantStyles(p)).root) === null || _d === void 0 ? void 0 : _d.call(_c, componentStyleFunctionParam));
    },
    actionMenu: function (componentStyleFunctionParam) {
        var _a, _b;
        var p = componentStyleFunctionParam.props, v = componentStyleFunctionParam.variables;
        var defaultShowActionMenu = p.hasActionMenu && (p.focused || p.showActionMenu);
        var showActionMenu = lodash_1.isNil(v.showActionMenu) ? defaultShowActionMenu : v.showActionMenu;
        return __assign(__assign({ backgroundColor: v.backgroundColor, border: '1px solid', borderColor: v.reactionGroupBorderColor, borderRadius: v.borderRadius, boxShadow: v.actionMenuBoxShadow, '[data-popper-escaped]': { opacity: 0 }, zIndex: -1, overflow: 'hidden', opacity: 0, width: 0 }, (showActionMenu && displayActionMenu(v.overlayZIndex))), (_b = (_a = getChatMessageVariantStyles(p)).actionMenu) === null || _b === void 0 ? void 0 : _b.call(_a, componentStyleFunctionParam));
    },
    author: function (componentStyleFunctionParam) {
        var _a, _b;
        var p = componentStyleFunctionParam.props;
        return (_b = (_a = getChatMessageVariantStyles(p)).author) === null || _b === void 0 ? void 0 : _b.call(_a, componentStyleFunctionParam);
    },
    compactBody: function (componentStyleFunctionParam) {
        var _a, _b;
        var p = componentStyleFunctionParam.props;
        return (_b = (_a = getChatMessageVariantStyles(p)).compactBody) === null || _b === void 0 ? void 0 : _b.call(_a, componentStyleFunctionParam);
    },
    timestamp: function (componentStyleFunctionParam) {
        var _a, _b;
        var p = componentStyleFunctionParam.props;
        return __assign({ display: 'inline-block' }, (_b = (_a = getChatMessageVariantStyles(p)).timestamp) === null || _b === void 0 ? void 0 : _b.call(_a, componentStyleFunctionParam));
    },
    badge: function (componentStyleFunctionParam) {
        var _a, _b;
        var p = componentStyleFunctionParam.props, v = componentStyleFunctionParam.variables;
        return __assign({ backgroundColor: v.hasMention ? v.hasMentionNubbinColor : v.isImportantColor, borderRadius: '50%', boxShadow: v.badgeShadow, color: v.badgeTextColor, height: 'auto', padding: utils_1.pxToRem(4), width: 'auto', zIndex: v.zIndex, '& > :first-child': { display: 'inline-flex' } }, (_b = (_a = getChatMessageVariantStyles(p)).badge) === null || _b === void 0 ? void 0 : _b.call(_a, componentStyleFunctionParam));
    },
    body: function (componentStyleFunctionParam) {
        var _a, _b;
        var p = componentStyleFunctionParam.props;
        return __assign({}, (_b = (_a = getChatMessageVariantStyles(p)).body) === null || _b === void 0 ? void 0 : _b.call(_a, componentStyleFunctionParam));
    },
    bubble: function (componentStyleFunctionParam) {
        var _a, _b;
        var p = componentStyleFunctionParam.props;
        return __assign({}, (_b = (_a = getChatMessageVariantStyles(p)).bubble) === null || _b === void 0 ? void 0 : _b.call(_a, componentStyleFunctionParam));
    },
    bubbleInset: function (componentStyleFunctionParam) {
        var _a, _b;
        var p = componentStyleFunctionParam.props;
        return __assign({}, (_b = (_a = getChatMessageVariantStyles(p)).bubbleInset) === null || _b === void 0 ? void 0 : _b.call(_a, componentStyleFunctionParam));
    },
    reactionGroup: function (componentStyleFunctionParam) {
        var _a, _b;
        var p = componentStyleFunctionParam.props;
        return (_b = (_a = getChatMessageVariantStyles(p)).reactionGroup) === null || _b === void 0 ? void 0 : _b.call(_a, componentStyleFunctionParam);
    },
};
