{"version":3,"file":"whatInput.js","names":["isBrowser","currentInput","eventTimer","ignoreMap","whatInputInitialized","inputMap","keydown","keyup","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","touchstart","isBuffering","pointerMap","supportsPassive","opts","Object","defineProperty","get","window","addEventListener","e","setUp","detectWheel","addListeners","doUpdate","document","eventTarget","options","passive","capture","PointerEvent","setInput","MSPointerEvent","eventBuffer","keyboardInputFocused","eventKey","activeElement","tagName","getAttribute","event","which","value","type","pointerType","ignoreMatch","indexOf","shouldUpdate","view","process","env","NODE_ENV","target","documentElement","setAttribute","clearTimeout","setTimeout","wheelType","createElement","onmousewheel","undefined","Array","prototype","setUpWhatInput","targetWindow","defaultView","initializedTimes","cleanupWhatInput","removeEventListener","tryCleanupWhatInput","setWhatInputSource","newInput","ask","isFromKeyboard"],"sources":["utils/whatInput.ts"],"sourcesContent":["import { isBrowser } from './isBrowser';\n\n// Taken from https://github.com/ten1seven/what-input/blob/master/src/scripts/what-input.js\n/* eslint-disable */\n\n/*\n * variables\n */\n\n// last used input type\nlet currentInput = 'mouse'; // assume happy path\n\n// event buffer timer\nlet eventTimer = null;\n\n// list of modifier keys commonly used with the mouse and\n// can be safely ignored to prevent false keyboard detection\nconst ignoreMap = [\n  16, // shift\n  17, // control\n  18, // alt\n  91, // Windows key / left Apple cmd\n  93, // Windows menu / right Apple cmd\n];\n// used to count how many Providers needed to initialize whatinput.\nconst whatInputInitialized = 'whatInputInitialized';\n\n// mapping of events to input types\nconst inputMap = {\n  keydown: 'keyboard',\n  keyup: 'keyboard',\n  mousedown: 'mouse',\n  mousemove: 'mouse',\n  MSPointerDown: 'pointer',\n  MSPointerMove: 'pointer',\n  pointerdown: 'pointer',\n  pointermove: 'pointer',\n  touchstart: 'touch',\n};\n\n// boolean: true if touch buffer is active\nlet isBuffering = false;\n\n// map of IE 10 pointer events\nconst pointerMap = {\n  2: 'touch',\n  3: 'touch', // treat pen like touch\n  4: 'mouse',\n};\n\n// check support for passive event listeners\nlet supportsPassive = false;\n\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get: () => {\n      supportsPassive = true;\n    },\n  });\n\n  window.addEventListener('test', null, opts);\n} catch (e) {}\n\n/*\n * set up\n */\n\nconst setUp = () => {\n  // add correct mouse wheel event mapping to `inputMap`\n  inputMap[detectWheel()] = 'mouse';\n\n  addListeners(window);\n  doUpdate(window.document);\n};\n\ntype WhatInputEvents = MouseEvent | TouchEvent | KeyboardEvent;\n\n/*\n * events\n */\n\nconst addListeners = (eventTarget: Window) => {\n  // `pointermove`, `MSPointerMove`, `mousemove` and mouse wheel event binding\n  // can only demonstrate potential, but not actual, interaction\n  // and are treated separately\n  const options = supportsPassive ? { passive: true, capture: true } : true;\n\n  // pointer events (mouse, pen, touch)\n  // @ts-ignore\n  if (eventTarget.PointerEvent) {\n    eventTarget.addEventListener('pointerdown', setInput);\n    // @ts-ignore\n  } else if (window.MSPointerEvent) {\n    eventTarget.addEventListener('MSPointerDown', setInput);\n  } else {\n    // mouse events\n    eventTarget.addEventListener('mousedown', setInput, true);\n\n    // touch events\n    if ('ontouchstart' in eventTarget) {\n      eventTarget.addEventListener('touchstart', eventBuffer, options);\n      eventTarget.addEventListener('touchend', setInput, true);\n    }\n  }\n\n  // keyboard events\n  eventTarget.addEventListener('keydown', eventBuffer, true);\n  eventTarget.addEventListener('keyup', eventBuffer, true);\n};\n\n/**\n *\n * @param document document to apply the update to\n * @param eventKey keyboard key passed from the event\n * @returns true if mode should be switched, false if not (when an input-like element is focused, and the key was not a navigational key)\n */\nconst keyboardInputFocused = (document: Document, eventKey: number) => {\n  if (\n    document.activeElement.tagName === 'INPUT' ||\n    document.activeElement.tagName === 'TEXTAREA' ||\n    document.activeElement.getAttribute('contenteditable')\n  ) {\n    return (\n      eventKey === 9 || // tab\n      eventKey === 117\n    ); // F6\n  }\n  return true;\n};\n\n// checks conditions before updating new input\nconst setInput = (event: WhatInputEvents) => {\n  // only execute if the event buffer timer isn't running\n  if (!isBuffering) {\n    const eventKey = event.which;\n    let value = inputMap[event.type];\n\n    if (value === 'pointer') {\n      value = pointerType(event);\n    }\n\n    const ignoreMatch = ignoreMap.indexOf(eventKey) === -1;\n    const shouldUpdate =\n      (value === 'keyboard' && eventKey && ignoreMatch && keyboardInputFocused(event.view.document, eventKey)) ||\n      value === 'mouse' ||\n      value === 'touch';\n\n    if (currentInput !== value && shouldUpdate) {\n      currentInput = value;\n\n      // https://github.com/testing-library/user-event/issues/709\n      // JSDOM does not implement `event.view` so prune this code path in test\n      if (process.env.NODE_ENV !== 'test') {\n        doUpdate(event.view.document);\n      }\n    }\n  }\n};\n\n// updates the doc and `inputTypes` array with new input\nconst doUpdate = (target: Document) => {\n  target.documentElement.setAttribute(`data-whatinput`, currentInput);\n};\n\n// buffers events that frequently also fire mouse events\nconst eventBuffer = (event: WhatInputEvents) => {\n  // set the current input\n  setInput(event);\n\n  // clear the timer if it happens to be running\n  window.clearTimeout(eventTimer);\n\n  // set the isBuffering to `true`\n  isBuffering = true;\n\n  // run the timer\n  eventTimer = window.setTimeout(() => {\n    // if the timer runs out, set isBuffering back to `false`\n    isBuffering = false;\n  }, 100);\n};\n\n/*\n * utilities\n */\n\nconst pointerType = event => {\n  if (typeof event.pointerType === 'number') {\n    return pointerMap[event.pointerType];\n  }\n\n  // treat pen like touch\n  return event.pointerType === 'pen' ? 'touch' : event.pointerType;\n};\n\n// detect version of mouse wheel event to use\n// via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\nconst detectWheel = () => {\n  let wheelType;\n\n  // Modern browsers support \"wheel\"\n  if ('onwheel' in document.createElement('div')) {\n    wheelType = 'wheel';\n  } else {\n    // Webkit and IE support at least \"mousewheel\"\n    // or assume that remaining browsers are older Firefox\n    wheelType =\n      // @ts-ignore\n      document.onmousewheel !== undefined ? 'mousewheel' : 'DOMMouseScroll';\n  }\n\n  return wheelType;\n};\n\n// don't start script unless browser cuts the mustard\n// (also passes if polyfills are used)\nif (isBrowser() && 'addEventListener' in window && Array.prototype.indexOf) {\n  setUp();\n}\n\n/*\n * set up for document\n */\n\nexport const setUpWhatInput = (target: Document) => {\n  const targetWindow = target.defaultView;\n  if (isBrowser() && targetWindow && 'addEventListener' in targetWindow && Array.prototype.indexOf) {\n    const initializedTimes = target[whatInputInitialized];\n    if (typeof initializedTimes === 'number' && initializedTimes > 0) {\n      target[whatInputInitialized] = initializedTimes + 1;\n      return;\n    }\n    target[whatInputInitialized] = 1;\n\n    addListeners(targetWindow);\n    doUpdate(target);\n  }\n};\n\nfunction cleanupWhatInput(eventTarget: Window) {\n  const options = supportsPassive ? { capture: true } : true;\n\n  // @ts-ignore\n  if (eventTarget.PointerEvent) {\n    eventTarget.removeEventListener('pointerdown', setInput);\n    // @ts-ignore\n  } else if (window.MSPointerEvent) {\n    eventTarget.removeEventListener('MSPointerDown', setInput);\n  } else {\n    // mouse events\n    eventTarget.removeEventListener('mousedown', setInput, true);\n\n    // touch events\n    if ('ontouchstart' in eventTarget) {\n      eventTarget.removeEventListener('touchstart', eventBuffer, options);\n      eventTarget.removeEventListener('touchend', setInput, true);\n    }\n  }\n\n  // keyboard events\n  eventTarget.removeEventListener('keydown', eventBuffer, true);\n  eventTarget.removeEventListener('keyup', eventBuffer, true);\n}\n\nexport const tryCleanupWhatInput = (target: Document) => {\n  const targetWindow = target.defaultView;\n  if (isBrowser() && targetWindow && 'removeEventListener' in targetWindow) {\n    if (target[whatInputInitialized] === 1) {\n      delete target[whatInputInitialized];\n      cleanupWhatInput(targetWindow);\n    } else {\n      target[whatInputInitialized] = target[whatInputInitialized] - 1;\n    }\n  }\n};\n\nexport const setWhatInputSource = (target: Document, newInput: 'mouse' | 'keyboard' | 'initial') => {\n  currentInput = newInput;\n  doUpdate(target);\n};\n\n// returns string: the current input type\n// returns the same value as the `data-whatinput` attribute\nexport const ask = (): string => currentInput;\n\nexport const isFromKeyboard = (): boolean => ask() === 'keyboard';\n"],"mappings":"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"}