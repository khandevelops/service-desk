{"version":3,"file":"positioningHelper.js","names":["PlacementParts","getPositionMap","rtl","above","top","below","bottom","before","right","left","after","getAlignmentMap","start","end","center","shouldAlignToCenter","p","a","positionedVertically","alignedVertically","getPlacement","align","position","alignment","computedPosition","computedAlignment","stringifiedAlignment","applyRtlToOffset","offset","undefined","Array","isArray","param"],"sources":["utils/positioner/positioningHelper.ts"],"sourcesContent":["import * as PopperJs from '@popperjs/core';\nimport { Alignment, Offset, OffsetFunction, OffsetFunctionParam, Position } from './types';\n\nenum PlacementParts {\n  top = 'top',\n  bottom = 'bottom',\n  start = 'start',\n  end = 'end',\n  left = 'left',\n  right = 'right',\n  center = '',\n}\n\nconst getPositionMap = (rtl: boolean): Record<Position, PlacementParts> => ({\n  above: PlacementParts.top,\n  below: PlacementParts.bottom,\n  before: rtl ? PlacementParts.right : PlacementParts.left,\n  after: rtl ? PlacementParts.left : PlacementParts.right,\n});\n\nconst getAlignmentMap = (rtl: boolean): Record<Alignment, PlacementParts> => ({\n  start: rtl ? PlacementParts.end : PlacementParts.start,\n  end: rtl ? PlacementParts.start : PlacementParts.end,\n  top: PlacementParts.start,\n  bottom: PlacementParts.end,\n  center: PlacementParts.center,\n});\n\nconst shouldAlignToCenter = (p: Position, a: Alignment) => {\n  const positionedVertically = p === 'above' || p === 'below';\n  const alignedVertically = a === 'top' || a === 'bottom';\n\n  return (positionedVertically && alignedVertically) || (!positionedVertically && !alignedVertically);\n};\n\n/**\n * | position | alignment | placement       | placement RTL\n * -----------------------------------------------------------------\n * | above    | start     |  top-start      |  top-end\n * | above    | center    |  top            |  top\n * | above    | end       |  top-end        |  top-start\n * | below    | start     |  bottom-start   |  bottom-end\n * | below    | center    |  bottom         |  bottom\n * | below    | end       |  bottom-end     |  bottom-start\n * | before   | top       |  left-start     |  right-start\n * | before   | center    |  left           |  right\n * | before   | bottom    |  left-end       |  right-end\n * | after    | top       |  right-start    |  left-start\n * | after    | center    |  right          |  left\n * | after    | bottom    |  right-end      |  left-end\n */\nexport const getPlacement = (align: Alignment, position: Position, rtl: boolean): PopperJs.Placement => {\n  const alignment: Alignment = shouldAlignToCenter(position, align) ? 'center' : align;\n  const computedPosition = getPositionMap(rtl)[position];\n  const computedAlignment = getAlignmentMap(rtl)[alignment];\n  const stringifiedAlignment = computedAlignment && `-${computedAlignment}`;\n\n  return `${computedPosition}${stringifiedAlignment}` as PopperJs.Placement;\n};\n\nexport const applyRtlToOffset = (offset: Offset | undefined): Offset | undefined => {\n  if (typeof offset === 'undefined') {\n    return undefined;\n  }\n\n  if (Array.isArray(offset)) {\n    offset[0] = offset[0] * -1;\n\n    return offset;\n  }\n\n  return ((param: OffsetFunctionParam) => applyRtlToOffset(offset(param))) as OffsetFunction;\n};\n"],"mappings":"IAGKA,cAAc;AAAA,WAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;AAAA,GAAdA,cAAc,KAAdA,cAAc;AAUnB,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,GAAY;EAAA,OAAwC;IAC1EC,KAAK,EAAEH,cAAc,CAACI,GAAG;IACzBC,KAAK,EAAEL,cAAc,CAACM,MAAM;IAC5BC,MAAM,EAAEL,GAAG,GAAGF,cAAc,CAACQ,KAAK,GAAGR,cAAc,CAACS,IAAI;IACxDC,KAAK,EAAER,GAAG,GAAGF,cAAc,CAACS,IAAI,GAAGT,cAAc,CAACQ;EACpD,CAAC;AAAA,CAAC;AAEF,IAAMG,eAAe,GAAG,SAAlBA,eAAe,CAAIT,GAAY;EAAA,OAAyC;IAC5EU,KAAK,EAAEV,GAAG,GAAGF,cAAc,CAACa,GAAG,GAAGb,cAAc,CAACY,KAAK;IACtDC,GAAG,EAAEX,GAAG,GAAGF,cAAc,CAACY,KAAK,GAAGZ,cAAc,CAACa,GAAG;IACpDT,GAAG,EAAEJ,cAAc,CAACY,KAAK;IACzBN,MAAM,EAAEN,cAAc,CAACa,GAAG;IAC1BC,MAAM,EAAEd,cAAc,CAACc;EACzB,CAAC;AAAA,CAAC;AAEF,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,CAAW,EAAEC,CAAY,EAAK;EACzD,IAAMC,oBAAoB,GAAGF,CAAC,KAAK,OAAO,IAAIA,CAAC,KAAK,OAAO;EAC3D,IAAMG,iBAAiB,GAAGF,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,QAAQ;EAEvD,OAAQC,oBAAoB,IAAIC,iBAAiB,IAAM,CAACD,oBAAoB,IAAI,CAACC,iBAAkB;AACrG,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAgB,EAAEC,QAAkB,EAAEpB,GAAY,EAAyB;EACtG,IAAMqB,SAAoB,GAAGR,mBAAmB,CAACO,QAAQ,EAAED,KAAK,CAAC,GAAG,QAAQ,GAAGA,KAAK;EACpF,IAAMG,gBAAgB,GAAGvB,cAAc,CAACC,GAAG,CAAC,CAACoB,QAAQ,CAAC;EACtD,IAAMG,iBAAiB,GAAGd,eAAe,CAACT,GAAG,CAAC,CAACqB,SAAS,CAAC;EACzD,IAAMG,oBAAoB,GAAGD,iBAAiB,UAAQA,iBAAmB;EAEzE,YAAUD,gBAAgB,GAAGE,oBAAoB;AACnD,CAAC;AAED,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,MAA0B,EAAyB;EAClF,IAAI,OAAOA,MAAM,KAAK,WAAW,EAAE;IACjC,OAAOC,SAAS;EAClB;EAEA,IAAIC,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,EAAE;IACzBA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAE1B,OAAOA,MAAM;EACf;EAEA,OAAQ,UAACI,KAA0B;IAAA,OAAKL,gBAAgB,CAACC,MAAM,CAACI,KAAK,CAAC,CAAC;EAAA;AACzE,CAAC"}