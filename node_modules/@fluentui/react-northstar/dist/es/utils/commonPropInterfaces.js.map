{"version":3,"file":"commonPropInterfaces.js","names":[],"sources":["utils/commonPropInterfaces.ts"],"sourcesContent":["import { ComponentDesignProp } from '@fluentui/react-bindings';\nimport { ComponentSlotStyle, ComponentVariablesInput } from '@fluentui/styles';\nimport * as React from 'react';\nimport { ReactChildren } from '../types';\n\nexport interface StyledComponentProps<P = any, V = any> {\n  /** Additional CSS styles to apply to the component instance.  */\n  styles?: ComponentSlotStyle<P, V>;\n\n  /** Override for theme site variables to allow modifications of component styling via themes. */\n  variables?: ComponentVariablesInput;\n}\n\nexport interface UIComponentProps<P = any, V = any> extends StyledComponentProps<P, V> {\n  /** Additional CSS class name(s) to apply.  */\n  className?: string;\n  design?: ComponentDesignProp;\n}\n\nexport type SizeValue = 'smallest' | 'smaller' | 'small' | 'medium' | 'large' | 'larger' | 'largest';\n\nexport type AlignValue = 'start' | 'end' | 'center' | 'justify';\n\nexport interface ColorComponentProps<TColor = string> {\n  /** A component can have a color. */\n  color?: TColor;\n}\n\nexport interface ContentComponentProps<TContent = React.ReactNode> {\n  /** Shorthand for primary content. */\n  content?: TContent;\n}\n\nexport interface ChildrenComponentProps<TChildren = ReactChildren> {\n  /**\n   *  Content for childrenApi\n   *  @docSiteIgnore\n   */\n  children?: TChildren;\n}\n"],"mappings":""}