{"version":3,"file":"doesNodeContainClick.js","names":["elementContains","doesNodeContainClick","node","e","target","allowVirtualParents","document","querySelector","clientX","clientY","clientRects","getClientRects","offsetWidth","offsetHeight","length","top","bottom","left","right"],"sources":["utils/doesNodeContainClick.tsx"],"sourcesContent":["import * as _ from 'lodash';\nimport { elementContains } from '@fluentui/dom-utilities';\n\n/**\n * Determines if a click's coordinates are within the bounds of a node.\n *\n * @see https://github.com/Semantic-Org/Semantic-UI-React/pull/2384\n *\n * @param node - A DOM node.\n * @param e - A SyntheticEvent or DOM Event.\n * @param target - A target document.\n * @param allowVirtualParents - A setting for `elementContains()`.\n */\nexport const doesNodeContainClick = (\n  node: HTMLElement,\n  e: MouseEvent,\n  // eslint-disable-next-line no-undef\n  target: Document = document,\n  allowVirtualParents: boolean = true,\n): boolean => {\n  if (_.some([e, node], _.isNil)) return false;\n\n  // if there is an e.target and it is in the document, use a simple node.contains() check\n  if (e.target) {\n    _.invoke(e.target, 'setAttribute', 'data-suir-click-target', true);\n\n    if (target.querySelector('[data-suir-click-target=true]')) {\n      _.invoke(e.target, 'removeAttribute', 'data-suir-click-target');\n      return elementContains(node, e.target as HTMLElement, allowVirtualParents);\n    }\n  }\n\n  // Below logic handles cases where the e.target is no longer in the document.\n  // The result of the click likely has removed the e.target node.\n  // Instead of node.contains(), we'll identify the click by X/Y position.\n\n  // return early if the event properties aren't available\n  // prevent measuring the node and repainting if we don't need to\n  const { clientX, clientY } = e;\n  if (_.some([clientX, clientY], _.isNil)) return false;\n\n  // false if the node is not visible\n  const clientRects = node.getClientRects();\n  // Heads Up!\n  // getClientRects returns a DOMRectList, not an array nor a plain object\n  // We explicitly avoid _.isEmpty and check .length to cover all possible shapes\n  if (!node.offsetWidth || !node.offsetHeight || !clientRects || !clientRects.length) return false;\n\n  // false if the node doesn't have a valid bounding rect\n  const { top, bottom, left, right } = _.first(clientRects);\n  if (_.some([top, bottom, left, right], _.isNil)) return false;\n\n  // we add a small decimal to the upper bound just to make it inclusive\n  // don't add an whole pixel (1) as the event/node values may be decimal sensitive\n  return _.inRange(clientY, top, bottom + 0.001) && _.inRange(clientX, left, right + 0.001);\n};\n"],"mappings":";;;;;AACA,SAASA,eAAe,QAAQ,yBAAyB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAC/BC,IAAiB,EACjBC,CAAa;AACb;AACAC,MAAgB,EAChBC,mBAA4B,EAChB;EAAA,IAFZD,MAAgB;IAAhBA,MAAgB,GAAGE,QAAQ;EAAA;EAAA,IAC3BD,mBAA4B;IAA5BA,mBAA4B,GAAG,IAAI;EAAA;EAEnC,IAAI,MAAO,CAACF,CAAC,EAAED,IAAI,CAAC,SAAU,EAAE,OAAO,KAAK;;EAE5C;EACA,IAAIC,CAAC,CAACC,MAAM,EAAE;IACZ,QAASD,CAAC,CAACC,MAAM,EAAE,cAAc,EAAE,wBAAwB,EAAE,IAAI,CAAC;IAElE,IAAIA,MAAM,CAACG,aAAa,CAAC,+BAA+B,CAAC,EAAE;MACzD,QAASJ,CAAC,CAACC,MAAM,EAAE,iBAAiB,EAAE,wBAAwB,CAAC;MAC/D,OAAOJ,eAAe,CAACE,IAAI,EAAEC,CAAC,CAACC,MAAM,EAAiBC,mBAAmB,CAAC;IAC5E;EACF;;EAEA;EACA;EACA;;EAEA;EACA;EACA,IAAQG,OAAO,GAAcL,CAAC,CAAtBK,OAAO;IAAEC,OAAO,GAAKN,CAAC,CAAbM,OAAO;EACxB,IAAI,MAAO,CAACD,OAAO,EAAEC,OAAO,CAAC,SAAU,EAAE,OAAO,KAAK;;EAErD;EACA,IAAMC,WAAW,GAAGR,IAAI,CAACS,cAAc,EAAE;EACzC;EACA;EACA;EACA,IAAI,CAACT,IAAI,CAACU,WAAW,IAAI,CAACV,IAAI,CAACW,YAAY,IAAI,CAACH,WAAW,IAAI,CAACA,WAAW,CAACI,MAAM,EAAE,OAAO,KAAK;;EAEhG;EACA,cAAqC,OAAQJ,WAAW,CAAC;IAAjDK,GAAG,WAAHA,GAAG;IAAEC,MAAM,WAANA,MAAM;IAAEC,IAAI,WAAJA,IAAI;IAAEC,KAAK,WAALA,KAAK;EAChC,IAAI,MAAO,CAACH,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,CAAC,SAAU,EAAE,OAAO,KAAK;;EAE7D;EACA;EACA,OAAO,SAAUT,OAAO,EAAEM,GAAG,EAAEC,MAAM,GAAG,KAAK,CAAC,IAAI,SAAUR,OAAO,EAAES,IAAI,EAAEC,KAAK,GAAG,KAAK,CAAC;AAC3F,CAAC"}