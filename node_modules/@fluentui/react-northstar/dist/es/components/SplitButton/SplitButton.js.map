{"version":3,"file":"SplitButton.js","names":["splitButtonBehavior","customPropTypes","PropTypes","React","ALIGNMENTS","POSITIONS","AUTOSIZES","isFromKeyboard","checkIsFromKeyboard","commonPropTypes","createShorthand","createShorthandFactory","SplitButtonToggle","Button","MenuButton","SplitButtonDivider","Ref","useTelemetry","useAutoControlled","useAccessibility","getElementType","useFluentContext","useUnhandledProps","useStyles","splitButtonClassName","SplitButton","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","button","disabled","menu","primary","secondary","toggleButton","size","position","align","flipBoundary","flat","overflowBoundary","popperRef","positionFixed","offset","unstable_disableTether","unstable_pinned","autoSize","className","design","styles","accessibility","variables","targetRef","useRef","ElementType","unhandledProps","handledProps","defaultValue","defaultOpen","value","open","initialValue","setOpen","useState","setIsFromKeyboard","getA11yProps","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleMenuButtonOverrides","predefinedProps","onMenuItemClick","e","menuItemProps","onOpenChange","popupProps","stopPropagation","handleMenuButtonTriggerOverrides","onClick","buttonProps","onFocus","element","root","create","defaultProps","on","trigger","menuButton","overrideProps","target","current","isOpen","Toggle","propTypes","createCommon","content","itemShorthand","bool","oneOfType","arrayOf","itemShorthandWithoutJSX","onMainButtonClick","func","every","disallow","oneOf","object","number","Object","keys","Component"],"sources":["components/SplitButton/SplitButton.tsx"],"sourcesContent":["import { Accessibility, splitButtonBehavior, SplitButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { ALIGNMENTS, POSITIONS, AUTOSIZES } from '../../utils/positioner';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  isFromKeyboard as checkIsFromKeyboard,\n  commonPropTypes,\n  SizeValue,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { SplitButtonToggle, SplitButtonToggleProps } from './SplitButtonToggle';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { MenuButton, MenuButtonProps } from '../MenuButton/MenuButton';\nimport { MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PopupProps } from '../Popup/Popup';\nimport { SplitButtonDivider } from './SplitButtonDivider';\nimport { Ref } from '@fluentui/react-component-ref';\nimport { PositioningProps, AutoSize } from '../../utils/positioner/types';\n\nimport {\n  useTelemetry,\n  useAutoControlled,\n  useAccessibility,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface SplitButtonProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<SplitButtonBehaviorProps>;\n\n  /** Shorthand for the main button. */\n  button?: ShorthandValue<ButtonProps>;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** A split button can be disabled. */\n  disabled?: boolean;\n\n  /** Shorthand for the menu. */\n  menu?: ShorthandValue<MenuProps> | ShorthandCollection<MenuItemProps>;\n\n  /**\n   * Called after user's click on the main button.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMainButtonClick?: ComponentEventHandler<ButtonProps>;\n\n  /**\n   * Called after user's click on a menu item.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMenuItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: ComponentEventHandler<SplitButtonProps>;\n\n  /** Defines whether menu is displayed. */\n  open?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  primary?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  secondary?: boolean;\n\n  /** A split button can be sized */\n  size?: SizeValue;\n\n  /** A button can be elevated or flat. */\n  flat?: boolean;\n\n  /** Shorthand for the toggle button. */\n  toggleButton?: ShorthandValue<SplitButtonToggleProps>;\n}\n\nexport const splitButtonClassName = 'ui-splitbutton';\n\nexport type SplitButtonStylesProps = Required<Pick<SplitButtonProps, 'size'>> & {\n  flat: boolean;\n  isFromKeyboard: boolean;\n};\n\n/**\n * A SplitButton enables users to take one of several related actions, one being dominant and rest being displayed in a menu.\n */\nexport const SplitButton = (React.forwardRef<HTMLDivElement, SplitButtonProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(SplitButton.displayName, context.telemetry);\n  setStart();\n\n  const {\n    button,\n    disabled,\n    menu,\n    primary,\n    secondary,\n    toggleButton,\n    size,\n    position,\n    align,\n    flipBoundary,\n    flat,\n    overflowBoundary,\n    popperRef,\n    positionFixed,\n    offset,\n    unstable_disableTether,\n    unstable_pinned,\n    autoSize,\n    className,\n    design,\n    styles,\n    accessibility,\n    variables,\n  } = props;\n\n  const targetRef = React.useRef<HTMLDivElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(SplitButton.handledProps, props);\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n    initialValue: false,\n  });\n\n  const [isFromKeyboard, setIsFromKeyboard] = React.useState<boolean>(false);\n\n  const getA11yProps = useAccessibility<SplitButtonBehaviorProps>(accessibility, {\n    debugName: SplitButton.displayName,\n    mapPropsToBehavior: () => ({\n      open,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<SplitButtonStylesProps>(SplitButton.displayName, {\n    className: splitButtonClassName,\n    mapPropsToStyles: () => ({\n      isFromKeyboard,\n      size,\n      flat,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleMenuButtonOverrides = (predefinedProps: MenuButtonProps) => ({\n    onMenuItemClick: (e: React.SyntheticEvent, menuItemProps: MenuItemProps) => {\n      setOpen(false);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: false });\n\n      _.invoke(predefinedProps, 'onMenuItemClick', e, menuItemProps);\n      _.invoke(props, 'onMenuItemClick', e, menuItemProps);\n    },\n    onOpenChange: (e: React.SyntheticEvent, popupProps: PopupProps) => {\n      e.stopPropagation();\n      setOpen(popupProps.open);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: popupProps.open });\n    },\n  });\n\n  const handleMenuButtonTriggerOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      _.invoke(props, 'onMainButtonClick', e, buttonProps);\n    },\n    onFocus: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, buttonProps);\n      setIsFromKeyboard(checkIsFromKeyboard());\n    },\n  });\n\n  const element = (\n    <Ref innerRef={targetRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {MenuButton.create(\n          {},\n          {\n            defaultProps: () =>\n              getA11yProps('menuButton', {\n                menu,\n                on: [],\n                open,\n                trigger: createShorthand(Button, button, {\n                  defaultProps: () => ({\n                    styles: resolvedStyles.menuButton,\n                    primary,\n                    secondary,\n                    disabled,\n                  }),\n                  overrideProps: handleMenuButtonTriggerOverrides,\n                }),\n                target: targetRef.current,\n                position,\n                align,\n                flipBoundary,\n                overflowBoundary,\n                popperRef,\n                positionFixed,\n                offset,\n                unstable_disableTether,\n                unstable_pinned,\n                autoSize,\n              }),\n            overrideProps: handleMenuButtonOverrides,\n          },\n        )}\n\n        {createShorthand(\n          SplitButtonDivider,\n          {},\n          {\n            defaultProps: () =>\n              getA11yProps('divider', {\n                primary,\n              }),\n          },\n        )}\n        {SplitButtonToggle.create(toggleButton, {\n          defaultProps: () =>\n            getA11yProps('toggleButton', {\n              disabled,\n              primary,\n              secondary,\n              size,\n              flat,\n            }),\n          overrideProps: (predefinedProps: ButtonProps) => ({\n            onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n              _.invoke(predefinedProps, 'onClick', e, buttonProps);\n\n              setOpen(isOpen => {\n                const open = !isOpen;\n                _.invoke(props, 'onOpenChange', e, { ...props, open });\n                return open;\n              });\n            },\n          }),\n        })}\n      </ElementType>\n    </Ref>\n  );\n\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, SplitButtonProps> &\n  FluentComponentStaticProps<SplitButtonProps> & {\n    Toggle: typeof SplitButtonToggle;\n  };\n\nSplitButton.displayName = 'SplitButton';\n\nSplitButton.Toggle = SplitButtonToggle;\n\nSplitButton.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  button: customPropTypes.itemShorthand,\n  defaultOpen: PropTypes.bool,\n  menu: PropTypes.oneOfType([\n    customPropTypes.itemShorthand,\n    PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX),\n  ]),\n  onMainButtonClick: PropTypes.func,\n  onMenuItemClick: PropTypes.func,\n  onOpenChange: PropTypes.func,\n  open: PropTypes.bool,\n  size: customPropTypes.size,\n  flat: PropTypes.bool,\n  popperRef: customPropTypes.ref,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  toggleButton: customPropTypes.itemShorthand,\n  position: PropTypes.oneOf(POSITIONS),\n  align: PropTypes.oneOf(ALIGNMENTS),\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  positionFixed: PropTypes.bool,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n  unstable_pinned: PropTypes.bool,\n  autoSize: PropTypes.oneOf<AutoSize>(AUTOSIZES),\n};\n\nSplitButton.defaultProps = {\n  accessibility: splitButtonBehavior,\n  toggleButton: {},\n  position: 'below',\n  align: 'start',\n};\n\nSplitButton.handledProps = Object.keys(SplitButton.propTypes) as any;\n\nSplitButton.create = createShorthandFactory({\n  Component: SplitButton,\n});\n"],"mappings":"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"}