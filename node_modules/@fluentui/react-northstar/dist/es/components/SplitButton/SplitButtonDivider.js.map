{"version":3,"file":"SplitButtonDivider.js","names":["React","PropTypes","useTelemetry","useAccessibility","getElementType","useFluentContext","useUnhandledProps","useStyles","commonPropTypes","SplitButtonDividerClassName","SplitButtonDivider","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","accessibility","ElementType","primary","unhandledProps","handledProps","getA11yProps","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","bool","Object","keys"],"sources":["components/SplitButton/SplitButtonDivider.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport {\n  useTelemetry,\n  useAccessibility,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  ColorComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface SplitButtonDividerProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ColorComponentProps,\n    ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A split button divider can be formatted to show different levels of emphasis. */\n  primary?: boolean;\n}\n\nexport type SplitButtonDividerStylesProps = Required<Pick<SplitButtonDividerProps, 'primary'>>;\n\nexport const SplitButtonDividerClassName = 'ui-splitButtonDivider';\n\n/**\n * A SplitButtonDivider visually segments content.\n */\nexport const SplitButtonDivider = (React.forwardRef<HTMLDivElement, SplitButtonDividerProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(SplitButtonDivider.displayName, context.telemetry);\n  setStart();\n  const { className, design, styles, variables, accessibility } = props;\n  const ElementType = getElementType(props);\n  const { primary } = props;\n  const unhandledProps = useUnhandledProps(SplitButtonDivider.handledProps, props);\n  const getA11yProps = useAccessibility<never>(accessibility, {\n    debugName: SplitButtonDivider.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<SplitButtonDividerStylesProps>(SplitButtonDivider.displayName, {\n    className: SplitButtonDividerClassName,\n    mapPropsToStyles: () => ({\n      primary,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    />\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, SplitButtonDividerProps> &\n  FluentComponentStaticProps<SplitButtonDividerProps>;\n\nSplitButtonDivider.displayName = 'SplitButtonDivider';\n\nSplitButtonDivider.propTypes = {\n  ...commonPropTypes.createCommon(),\n  primary: PropTypes.bool,\n};\n\nSplitButtonDivider.handledProps = Object.keys(SplitButtonDivider.propTypes) as any;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,SAAS,MAAM,YAAY;AAEvC,SACEC,YAAY,EACZC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,EAChBC,iBAAiB,EACjBC,SAAS,QAEJ,0BAA0B;AAEjC,SAKEC,eAAe,QACV,aAAa;AAoBpB,OAAO,IAAMC,2BAA2B,GAAG,uBAAuB;;AAElE;AACA;AACA;AACA,OAAO,IAAMC,kBAAkB;EAAA,IAAlBA,kBAAkB,gBAAIV,KAAK,CAACW,UAAU,CAA0C,UAACC,KAAK,EAAEC,GAAG,EAAK;IAC3G,IAAMC,OAAO,GAAGT,gBAAgB,EAAE;IAClC,oBAA6BH,YAAY,CAACQ,kBAAkB,CAACK,WAAW,EAAED,OAAO,CAACE,SAAS,CAAC;MAApFC,QAAQ,iBAARA,QAAQ;MAAEC,MAAM,iBAANA,MAAM;IACxBD,QAAQ,EAAE;IACV,IAAQE,SAAS,GAA+CP,KAAK,CAA7DO,SAAS;MAAEC,MAAM,GAAuCR,KAAK,CAAlDQ,MAAM;MAAEC,MAAM,GAA+BT,KAAK,CAA1CS,MAAM;MAAEC,SAAS,GAAoBV,KAAK,CAAlCU,SAAS;MAAEC,aAAa,GAAKX,KAAK,CAAvBW,aAAa;IAC3D,IAAMC,WAAW,GAAGpB,cAAc,CAACQ,KAAK,CAAC;IACzC,IAAQa,OAAO,GAAKb,KAAK,CAAjBa,OAAO;IACf,IAAMC,cAAc,GAAGpB,iBAAiB,CAACI,kBAAkB,CAACiB,YAAY,EAAEf,KAAK,CAAC;IAChF,IAAMgB,YAAY,GAAGzB,gBAAgB,CAAQoB,aAAa,EAAE;MAC1DM,SAAS,EAAEnB,kBAAkB,CAACK,WAAW;MACzCe,GAAG,EAAEhB,OAAO,CAACgB;IACf,CAAC,CAAC;IACF,iBAAoBvB,SAAS,CAAgCG,kBAAkB,CAACK,WAAW,EAAE;QAC3FI,SAAS,EAAEV,2BAA2B;QACtCsB,gBAAgB,EAAE;UAAA,OAAO;YACvBN,OAAO,EAAPA;UACF,CAAC;QAAA,CAAC;QACFO,sBAAsB,EAAE;UAAA,OAAO;YAC7Bb,SAAS,EAATA,SAAS;YACTC,MAAM,EAANA,MAAM;YACNC,MAAM,EAANA,MAAM;YACNC,SAAS,EAATA;UACF,CAAC;QAAA,CAAC;QACFQ,GAAG,EAAEhB,OAAO,CAACgB;MACf,CAAC,CAAC;MAZMG,OAAO,cAAPA,OAAO;IAcf,IAAMC,OAAO,gBACX,oBAAC,WAAW,EACNN,YAAY,CAAC,MAAM;MACrBT,SAAS,EAAEc,OAAO,CAACE,IAAI;MACvBtB,GAAG,EAAHA;IAAG,GACAa,cAAc,EACjB,CAEL;IACDR,MAAM,EAAE;IACR,OAAOgB,OAAO;EAChB,CAAC,CACoD;EAErDxB,kBAAkB,CAACK,WAAW,GAAG,oBAAoB;EAErDL,kBAAkB,CAAC0B,SAAS,qBACvB5B,eAAe,CAAC6B,YAAY,EAAE;IACjCZ,OAAO,EAAExB,SAAS,CAACqC;EAAI,EACxB;EAED5B,kBAAkB,CAACiB,YAAY,GAAGY,MAAM,CAACC,IAAI,CAAC9B,kBAAkB,CAAC0B,SAAS,CAAQ;EAAC,OA/CtE1B,kBAAkB;AAAA"}