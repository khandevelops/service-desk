{"version":3,"file":"Accordion.js","names":["accordionBehavior","customPropTypes","PropTypes","React","childrenExist","commonPropTypes","rtlTextContainer","createShorthand","createShorthandFactory","AccordionTitle","AccordionContent","ContainerFocusHandler","useAutoControlled","useAccessibility","useTelemetry","useFluentContext","useUnhandledProps","getElementType","useStyles","accordionClassName","accordionSlotClassNames","content","title","Accordion","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","expanded","exclusive","accessibility","children","className","design","styles","variables","panels","renderPanelContent","renderPanelTitle","alwaysActiveIndex","defaultValue","defaultActiveIndex","value","activeIndex","initialValue","setActiveIndex","actionHandlers","moveNext","e","preventDefault","focusHandler","movePrevious","moveFirst","moveLast","getA11yProps","debugName","rtl","mapPropsToInlineStyles","classes","useState","focusedIndex","setfocusedIndex","handleNavigationFocus","index","getNavigationItemsSize","length","unhandledProps","handledProps","ElementType","itemRefs","useMemo","Array","from","createRef","useEffect","targetComponent","current","focus","defaultAccordionTitleId","defaultAccordionContentId","computeNewIndex","isIndexActionable","handleTitleOverrides","predefinedProps","onClick","titleProps","onFocus","isIndexActive","renderPanels","syncFocusedIndex","panel","active","canBeCollapsed","titleId","contentId","contentRef","push","defaultProps","id","accordionContentId","overrideProps","render","accordionTitleId","element","root","getAttributes","forElements","propTypes","createCommon","every","disallow","oneOfType","arrayOf","number","bool","onTitleClick","func","onActiveIndexChange","shape","itemShorthand","as","Object","keys","Title","Content","create","Component"],"sources":["components/Accordion/Accordion.tsx"],"sourcesContent":["import { Accessibility, accordionBehavior, AccordionBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { AccordionTitle, AccordionTitleProps } from './AccordionTitle';\nimport { AccordionContent, AccordionContentProps } from './AccordionContent';\n\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  ShorthandRenderFunction,\n  FluentComponentStaticProps,\n} from '../../types';\nimport { ContainerFocusHandler } from '../../utils/accessibility/FocusHandling/FocusContainer';\nimport {\n  useAutoControlled,\n  useAccessibility,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  getElementType,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface AccordionSlotClassNames {\n  content: string;\n  title: string;\n}\n\nexport interface AccordionProps extends UIComponentProps, ChildrenComponentProps {\n  /** Index of the currently active panel. */\n  activeIndex?: number[] | number;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number[] | number;\n\n  /** Only allow one panel to be expanded at a time. */\n  exclusive?: boolean;\n\n  /** At least one panel should be expanded at any time. */\n  expanded?: boolean;\n\n  /**\n   * Called when the active index of the Accordion changes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `activeIndex` reflecting the new state.\n   */\n  onActiveIndexChange?: ComponentEventHandler<AccordionProps>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All item props.\n   */\n  onTitleClick?: ComponentEventHandler<AccordionProps>;\n\n  /** Shorthand array of props for Accordion. */\n  panels?: {\n    content: ShorthandValue<AccordionContentProps>;\n    title: ShorthandValue<AccordionTitleProps>;\n  }[];\n\n  /**\n   * A custom renderer for each Accordion's panel title.\n   *\n   * @param Component - The panel's component type.\n   * @param props - The panel's computed props.\n   */\n  renderPanelTitle?: ShorthandRenderFunction<AccordionTitleProps>;\n\n  /**\n   * A custom renderer for each Accordion's panel content.\n   *\n   * @param Component - The panel's component type.\n   * @param props - The panel's computed props.\n   */\n  renderPanelContent?: ShorthandRenderFunction<AccordionContentProps>;\n\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<AccordionBehaviorProps>;\n}\n\nexport type AccordionStylesProps = never;\nexport const accordionClassName = 'ui-accordion';\nexport const accordionSlotClassNames: AccordionSlotClassNames = {\n  content: `${accordionClassName}__content`,\n  title: `${accordionClassName}__title`,\n};\n\n/**\n * An Accordion represents stacked set of content sections, with action elements to toggle the display of these sections.\n *\n * @accessibility\n * Implements [ARIA Accordion](https://www.w3.org/TR/wai-aria-practices-1.1/#accordion) design pattern (keyboard navigation not yet supported).\n */\nexport const Accordion = (React.forwardRef<HTMLDListElement, AccordionProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Accordion.displayName, context.telemetry);\n  setStart();\n  const {\n    expanded,\n    exclusive,\n    accessibility,\n    children,\n    className,\n    design,\n    styles,\n    variables,\n    panels,\n    renderPanelContent,\n    renderPanelTitle,\n  } = props;\n  const alwaysActiveIndex = expanded ? 0 : -1;\n\n  const [activeIndex, setActiveIndex] = useAutoControlled({\n    defaultValue: props.defaultActiveIndex,\n    value: props.activeIndex,\n    initialValue: exclusive ? alwaysActiveIndex : [alwaysActiveIndex],\n  });\n\n  const actionHandlers = {\n    moveNext: e => {\n      e.preventDefault();\n      focusHandler.moveNext();\n    },\n    movePrevious: e => {\n      e.preventDefault();\n      focusHandler.movePrevious();\n    },\n    moveFirst: e => {\n      e.preventDefault();\n      focusHandler.moveFirst();\n    },\n    moveLast: e => {\n      e.preventDefault();\n      focusHandler.moveLast();\n    },\n  };\n\n  const getA11yProps = useAccessibility<AccordionBehaviorProps>(accessibility, {\n    debugName: Accordion.displayName,\n    actionHandlers,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<AccordionStylesProps>(Accordion.displayName, {\n    className: accordionClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [focusedIndex, setfocusedIndex] = React.useState<number>();\n\n  const handleNavigationFocus = (index: number) => {\n    setfocusedIndex(index);\n  };\n\n  const getNavigationItemsSize = () => props.panels.length;\n  const unhandledProps = useUnhandledProps(Accordion.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const focusHandler: ContainerFocusHandler = new ContainerFocusHandler(\n    getNavigationItemsSize,\n    handleNavigationFocus,\n    true,\n  );\n\n  const itemRefs = React.useMemo<React.RefObject<HTMLElement>[]>(\n    () => Array.from({ length: panels?.length }, () => React.createRef()),\n    // As we are using \"panels.length\" it's fine to have dependency on them\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [panels?.length],\n  );\n\n  React.useEffect(() => {\n    const targetComponent = itemRefs[focusedIndex] && itemRefs[focusedIndex].current;\n    targetComponent && targetComponent.focus();\n  }, [itemRefs, focusedIndex]);\n\n  const defaultAccordionTitleId = React.useMemo(() => _.uniqueId('accordion-title-'), []);\n  const defaultAccordionContentId = React.useMemo(() => _.uniqueId('accordion-content-'), []);\n\n  const computeNewIndex = (index: number): number | number[] => {\n    if (!isIndexActionable(index)) {\n      return activeIndex;\n    }\n\n    if (exclusive) return index === activeIndex ? -1 : index;\n    // check to see if index is in array, and remove it, if not then add it\n    return _.includes(activeIndex as number[], index)\n      ? _.without(activeIndex as number[], index)\n      : [...(activeIndex as number[]), index];\n  };\n\n  const handleTitleOverrides = (predefinedProps: AccordionTitleProps) => ({\n    onClick: (e: React.SyntheticEvent, titleProps: AccordionTitleProps) => {\n      const { index } = titleProps;\n      const activeIndex = computeNewIndex(index);\n      setActiveIndex(activeIndex);\n      setfocusedIndex(index);\n\n      _.invoke(props, 'onActiveIndexChange', e, { ...props, activeIndex });\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n      _.invoke(props, 'onTitleClick', e, titleProps);\n    },\n    onFocus: (e: React.SyntheticEvent, titleProps: AccordionTitleProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, titleProps);\n      setfocusedIndex(predefinedProps.index);\n    },\n  });\n\n  const isIndexActive = (index: number): boolean => {\n    return exclusive ? activeIndex === index : _.includes(activeIndex as number[], index);\n  };\n\n  /**\n   * Checks if panel at index can be actioned upon. Used in the case of expanded accordion,\n   * when at least a panel needs to stay active. Will return false if expanded prop is true,\n   * index is active and either it's an exclusive accordion or if there are no other active\n   * panels open besides this one.\n   *\n   * @param index - The index of the panel.\n   * @returns If the panel can be set active/inactive.\n   */\n  const isIndexActionable = (index: number): boolean => {\n    if (!isIndexActive(index)) {\n      return true;\n    }\n\n    return !expanded || (!exclusive && (activeIndex as number[]).length > 1);\n  };\n\n  const renderPanels = () => {\n    const children: any[] = [];\n    focusHandler.syncFocusedIndex(focusedIndex);\n    _.each(panels, (panel, index) => {\n      const { content, title } = panel;\n      const active = isIndexActive(+index);\n      const canBeCollapsed = isIndexActionable(+index);\n      const titleId = title['id'] || `${defaultAccordionTitleId}${index}`;\n      const contentId = content['id'] || `${defaultAccordionContentId}${index}`;\n      const contentRef = itemRefs[index];\n\n      children.push(\n        createShorthand(AccordionTitle, title, {\n          defaultProps: () => ({\n            className: accordionSlotClassNames.title,\n            active,\n            index: +index,\n            contentRef,\n            canBeCollapsed,\n            id: titleId,\n            accordionContentId: contentId,\n          }),\n          overrideProps: handleTitleOverrides,\n          render: renderPanelTitle,\n        }),\n      );\n      if (active) {\n        children.push(\n          createShorthand(AccordionContent, content, {\n            defaultProps: () => ({\n              className: accordionSlotClassNames.content,\n              active,\n              id: contentId,\n              accordionTitleId: titleId,\n            }),\n            render: renderPanelContent,\n          }),\n        );\n      }\n    });\n    return children;\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n        ref,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderPanels()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'dl', HTMLDListElement, AccordionProps> &\n  FluentComponentStaticProps<AccordionProps> & {\n    Title: typeof AccordionTitle;\n    Content: typeof AccordionContent;\n  };\n\nAccordion.displayName = 'Accordion';\n\nAccordion.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  ]),\n  defaultActiveIndex: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  ]),\n  exclusive: PropTypes.bool,\n  expanded: PropTypes.bool,\n  onTitleClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n  onActiveIndexChange: PropTypes.func,\n  panels: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        content: customPropTypes.itemShorthand,\n        title: customPropTypes.itemShorthand,\n      }),\n    ),\n  ]),\n\n  renderPanelTitle: PropTypes.func,\n  renderPanelContent: PropTypes.func,\n};\n\nAccordion.defaultProps = {\n  accessibility: accordionBehavior,\n  as: 'dl',\n};\n\nAccordion.handledProps = Object.keys(Accordion.propTypes) as any;\nAccordion.Title = AccordionTitle;\nAccordion.Content = AccordionContent;\nAccordion.create = createShorthandFactory({\n  Component: Accordion,\n});\n"],"mappings":"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"}