{"version":3,"file":"FormFieldCustom.js","names":["formFieldBehavior","PropTypes","React","commonPropTypes","getElementType","useUnhandledProps","useTelemetry","useFluentContext","useStyles","useAccessibility","formFieldCustomClassName","FormFieldCustom","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","children","required","type","className","design","styles","variables","inline","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","content","id","string","bool","name","Object","keys","defaultProps"],"sources":["components/Form/FormFieldCustom.tsx"],"sourcesContent":["import { Accessibility, FormFieldBehaviorProps, formFieldBehavior } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes } from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useTelemetry,\n  useFluentContext,\n  useStyles,\n  useAccessibility,\n} from '@fluentui/react-bindings';\n\nexport interface FormFieldCustomProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<FormFieldBehaviorProps>;\n\n  /** The HTML input id. This will be set on the control element and will be use for linking it with the label for correct accessibility. */\n  id?: string;\n\n  /** A field can have its label next to instead of above it. */\n  inline?: boolean;\n\n  /** The HTML input name. */\n  name?: string;\n\n  /** A field can show that input is mandatory. */\n  required?: boolean;\n\n  /** The HTML input type. */\n  type?: string;\n}\n\nexport const formFieldCustomClassName = 'ui-form__fieldcustom';\n\nexport type FormFieldCustomStylesProps = Required<Pick<FormFieldCustomProps, 'type' | 'inline' | 'required'>>;\n\n/**\n * A FormFieldCustom represents a Form element containing a label and an input.\n */\nexport const FormFieldCustom = (React.forwardRef<HTMLDivElement, FormFieldCustomProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(FormFieldCustom.displayName, context.telemetry);\n  setStart();\n\n  const { children, required, type, className, design, styles, variables, inline } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(FormFieldCustom.handledProps, props);\n\n  const getA11yProps = useAccessibility<FormFieldBehaviorProps>(props.accessibility, {\n    debugName: FormFieldCustom.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<FormFieldCustomStylesProps>(FormFieldCustom.displayName, {\n    className: formFieldCustomClassName,\n    mapPropsToStyles: () => ({\n      type,\n      inline,\n      required,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as React.FC<FormFieldCustomProps> & FluentComponentStaticProps<FormFieldCustomProps>;\n\nFormFieldCustom.displayName = 'FormFieldCustom';\n\nFormFieldCustom.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n    children: false,\n  }),\n  id: PropTypes.string,\n  inline: PropTypes.bool,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nFormFieldCustom.handledProps = Object.keys(FormFieldCustom.propTypes) as any;\n\nFormFieldCustom.defaultProps = {\n  accessibility: formFieldBehavior,\n};\n"],"mappings":"AAAA,SAAgDA,iBAAiB,QAAQ,yBAAyB;AAClG,OAAO,KAAKC,SAAS,MAAM,YAAY;AACvC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAAmDC,eAAe,QAAQ,aAAa;AAEvF,SACEC,cAAc,EACdC,iBAAiB,EACjBC,YAAY,EACZC,gBAAgB,EAChBC,SAAS,EACTC,gBAAgB,QACX,0BAA0B;AAwBjC,OAAO,IAAMC,wBAAwB,GAAG,sBAAsB;AAI9D;AACA;AACA;AACA,OAAO,IAAMC,eAAe;EAAA,IAAfA,eAAe,gBAAIT,KAAK,CAACU,UAAU,CAAuC,UAACC,KAAK,EAAEC,GAAG,EAAK;IACrG,IAAMC,OAAO,GAAGR,gBAAgB,EAAE;IAClC,oBAA6BD,YAAY,CAACK,eAAe,CAACK,WAAW,EAAED,OAAO,CAACE,SAAS,CAAC;MAAjFC,QAAQ,iBAARA,QAAQ;MAAEC,MAAM,iBAANA,MAAM;IACxBD,QAAQ,EAAE;IAEV,IAAQE,QAAQ,GAAmEP,KAAK,CAAhFO,QAAQ;MAAEC,QAAQ,GAAyDR,KAAK,CAAtEQ,QAAQ;MAAEC,IAAI,GAAmDT,KAAK,CAA5DS,IAAI;MAAEC,SAAS,GAAwCV,KAAK,CAAtDU,SAAS;MAAEC,MAAM,GAAgCX,KAAK,CAA3CW,MAAM;MAAEC,MAAM,GAAwBZ,KAAK,CAAnCY,MAAM;MAAEC,SAAS,GAAab,KAAK,CAA3Ba,SAAS;MAAEC,MAAM,GAAKd,KAAK,CAAhBc,MAAM;IAE9E,IAAMC,WAAW,GAAGxB,cAAc,CAACS,KAAK,CAAC;IACzC,IAAMgB,cAAc,GAAGxB,iBAAiB,CAACM,eAAe,CAACmB,YAAY,EAAEjB,KAAK,CAAC;IAE7E,IAAMkB,YAAY,GAAGtB,gBAAgB,CAAyBI,KAAK,CAACmB,aAAa,EAAE;MACjFC,SAAS,EAAEtB,eAAe,CAACK,WAAW;MACtCkB,GAAG,EAAEnB,OAAO,CAACmB;IACf,CAAC,CAAC;IAEF,iBAAoB1B,SAAS,CAA6BG,eAAe,CAACK,WAAW,EAAE;QACrFO,SAAS,EAAEb,wBAAwB;QACnCyB,gBAAgB,EAAE;UAAA,OAAO;YACvBb,IAAI,EAAJA,IAAI;YACJK,MAAM,EAANA,MAAM;YACNN,QAAQ,EAARA;UACF,CAAC;QAAA,CAAC;QACFe,sBAAsB,EAAE;UAAA,OAAO;YAC7Bb,SAAS,EAATA,SAAS;YACTC,MAAM,EAANA,MAAM;YACNC,MAAM,EAANA,MAAM;YACNC,SAAS,EAATA;UACF,CAAC;QAAA,CAAC;QACFQ,GAAG,EAAEnB,OAAO,CAACmB;MACf,CAAC,CAAC;MAdMG,OAAO,cAAPA,OAAO;IAgBf,IAAMC,OAAO,gBACX,oBAAC,WAAW,EACNP,YAAY,CAAC,MAAM;MACrBR,SAAS,EAAEc,OAAO,CAACE,IAAI;MACvBzB,GAAG,EAAHA;IAAG,GACAe,cAAc,EACjB,EAEDT,QAAQ,CAEZ;IACDD,MAAM,EAAE;IACR,OAAOmB,OAAO;EAChB,CAAC,CAAkG;EAEnG3B,eAAe,CAACK,WAAW,GAAG,iBAAiB;EAE/CL,eAAe,CAAC6B,SAAS,qBACpBrC,eAAe,CAACsC,YAAY,CAAC;IAC9BC,OAAO,EAAE,KAAK;IACdtB,QAAQ,EAAE;EACZ,CAAC,CAAC;IACFuB,EAAE,EAAE1C,SAAS,CAAC2C,MAAM;IACpBjB,MAAM,EAAE1B,SAAS,CAAC4C,IAAI;IACtBC,IAAI,EAAE7C,SAAS,CAAC2C,MAAM;IACtBvB,QAAQ,EAAEpB,SAAS,CAAC4C,IAAI;IACxBvB,IAAI,EAAErB,SAAS,CAAC2C;EAAM,EACvB;EAEDjC,eAAe,CAACmB,YAAY,GAAGiB,MAAM,CAACC,IAAI,CAACrC,eAAe,CAAC6B,SAAS,CAAQ;EAE5E7B,eAAe,CAACsC,YAAY,GAAG;IAC7BjB,aAAa,EAAEhC;EACjB,CAAC;EAAC,OAhEWW,eAAe;AAAA"}