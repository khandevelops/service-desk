{"version":3,"file":"formFieldBase.js","names":["formFieldBehavior","customPropTypes","PropTypes","React","commonPropTypes","getOrGenerateIdFromShorthand","createShorthand","Box","getElementType","useUnhandledProps","useTelemetry","useAccessibility","useFluentContext","compose","useStyles","FormLabel","FormMessage","FormFieldBaseProvider","formFieldBaseClassName","_FormFieldBase","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","message","inline","errorMessage","control","label","className","design","styles","variables","slotProps","resolveSlotProps","ElementType","unhandledProps","handledProps","messageId","useRef","current","labelId","mapPropsToInlineStyles","rtl","unstable_props","classes","getA11yProps","accessibility","debugName","mapPropsToBehavior","hasErrorMessage","childProps","useMemo","element","root","slots","defaultProps","id","error","shorthandConfig","mappedProp","propTypes","createCommon","children","bool","itemShorthand"],"sources":["components/Form/utils/formFieldBase.tsx"],"sourcesContent":["import { Accessibility, FormFieldBehaviorProps, formFieldBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { UIComponentProps, commonPropTypes, getOrGenerateIdFromShorthand, createShorthand } from '../../../utils';\nimport { ShorthandValue } from '../../../types';\nimport { Box, BoxProps } from '../../Box/Box';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useTelemetry,\n  useAccessibility,\n  useFluentContext,\n  compose,\n  useStyles,\n} from '@fluentui/react-bindings';\nimport { FormLabel, FormLabelProps } from '../FormLabel';\nimport { FormMessage, FormMessageProps } from '../FormMessage';\nimport { FormFieldBaseValue, FormFieldBaseProvider } from './formFieldBaseContext';\n\nexport interface FormFieldBaseProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<FormFieldBehaviorProps>;\n\n  /** A field can have its label next to instead of above it. */\n  inline?: boolean;\n\n  /** A control for the form field. */\n  control?: ShorthandValue<BoxProps>;\n\n  /** A label for the form field. */\n  label?: ShorthandValue<FormLabelProps>;\n\n  /** Text message that will be displayed below the control (can be used for error, warning, success messages). */\n  message?: ShorthandValue<FormMessageProps>;\n\n  /** Message to be shown when input has error */\n  errorMessage?: ShorthandValue<FormMessageProps>;\n}\n\nexport const formFieldBaseClassName = 'ui-form__field__base';\nexport type FormFieldBaseStylesProps = never;\n\n/**\n * A FormFiedBase represents a Form element containing a label and an input.\n */\nexport const _FormFieldBase = compose<'div', FormFieldBaseProps, {}, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { message, inline, errorMessage, control, label, className, design, styles, variables } = props;\n\n    const slotProps = composeOptions.resolveSlotProps<FormFieldBaseProps>(props);\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    const messageId = React.useRef<string>();\n    messageId.current = getOrGenerateIdFromShorthand('error-message-', errorMessage || message, messageId.current);\n    const labelId = React.useRef<string>();\n    labelId.current = getOrGenerateIdFromShorthand('form-label-', label, labelId.current);\n\n    const { classes } = useStyles<FormFieldBaseStylesProps>(_FormFieldBase.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const getA11yProps = useAccessibility<FormFieldBehaviorProps>(props.accessibility, {\n      debugName: composeOptions.displayName,\n      mapPropsToBehavior: () => ({\n        hasErrorMessage: !!errorMessage,\n        messageId: messageId.current,\n        labelId: labelId.current,\n      }),\n      rtl: context.rtl,\n    });\n\n    const childProps: FormFieldBaseValue = React.useMemo(\n      () => ({\n        labelId: labelId.current,\n      }),\n      // TODO: create hooks for id to avoid disbaling esling for accessing the value of refs\n      // eslint-disable-next-line\n      [labelId.current],\n    );\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n        })}\n      >\n        {createShorthand(composeOptions.slots.label, label, {\n          defaultProps: () =>\n            getA11yProps('label', {\n              id: labelId.current,\n              inline,\n              ...slotProps.label,\n            }),\n        })}\n        {/**\n         * When there's a message for the input the labelId and messageId should be consistent in the\n         * aria-labelledby attribute (aria-labelledby=\"labelID messageID\") therefore we need to pass it down\n         * for components like input that are generating its own label internally\n         */}\n        <FormFieldBaseProvider value={childProps}>\n          {createShorthand(composeOptions.slots.control, control || {}, {\n            defaultProps: () =>\n              getA11yProps('control', {\n                error: !!errorMessage || null,\n                ref,\n                ...unhandledProps,\n                ...slotProps.control,\n              }),\n          })}\n        </FormFieldBaseProvider>\n        {createShorthand(composeOptions.slots.message, errorMessage || message, {\n          defaultProps: () =>\n            getA11yProps('message', {\n              id: messageId.current,\n              ...slotProps.message,\n            }),\n        })}\n      </ElementType>\n    );\n    setEnd();\n    return element;\n  },\n  {\n    className: formFieldBaseClassName,\n    displayName: 'FormFieldBase',\n    slots: {\n      label: FormLabel,\n      message: FormMessage,\n      control: Box,\n    },\n    handledProps: [\n      'as',\n      'accessibility',\n      'className',\n      'variables',\n      'design',\n      'styles',\n      'inline',\n      'errorMessage',\n      'message',\n    ],\n    shorthandConfig: {\n      mappedProp: 'control',\n    },\n  },\n);\n\n_FormFieldBase.propTypes = {\n  ...commonPropTypes.createCommon({ children: false }),\n  inline: PropTypes.bool,\n  message: customPropTypes.itemShorthand,\n  errorMessage: customPropTypes.itemShorthand,\n};\n\n_FormFieldBase.defaultProps = {\n  accessibility: formFieldBehavior,\n};\n"],"mappings":"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"}