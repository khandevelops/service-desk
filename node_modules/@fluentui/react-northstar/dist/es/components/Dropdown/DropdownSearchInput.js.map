{"version":3,"file":"DropdownSearchInput.js","names":["customPropTypes","React","PropTypes","cx","createShorthandFactory","commonPropTypes","Input","useFluentContext","useTelemetry","useStyles","useUnhandledProps","dropdownSearchInputClassName","dropdownSearchInputSlotClassNames","input","wrapper","DropdownSearchInput","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibilityComboboxProps","accessibilityInputProps","inputRef","inline","placeholder","disabled","className","design","styles","variables","unhandledProps","handledProps","mapPropsToStyles","mapPropsToInlineStyles","resolvedStyles","handleFocus","e","handleInputKeyDown","handleInputBlur","handleKeyUp","element","root","type","onBlur","onKeyDown","propTypes","createCommon","accessibility","children","content","object","bool","onFocus","func","onInputBlur","onInputKeyDown","onKeyUp","string","Object","keys","create","Component"],"sources":["components/Dropdown/DropdownSearchInput.tsx"],"sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport { Input } from '../Input/Input';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface DropdownSearchInputSlotClassNames {\n  input: string;\n  wrapper: string;\n}\n\nexport interface DropdownSearchInputProps extends UIComponentProps<DropdownSearchInputProps> {\n  /** Accessibility props for combobox slot. */\n  accessibilityComboboxProps?: any;\n\n  /** Accessibility props for input slot. */\n  accessibilityInputProps?: any;\n\n  /** A dropdown search input can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A dropdown search input can be formatted to appear inline in the context of a Dropdown. */\n  inline?: boolean;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLInputElement>;\n\n  /**\n   * Called on input element focus.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onFocus?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input element blur.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputBlur?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key down event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputKeyDown?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key up event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyUp?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /** A placeholder message. */\n  placeholder?: string;\n}\n\nexport const dropdownSearchInputClassName = 'ui-dropdown__searchinput';\nexport const dropdownSearchInputSlotClassNames: DropdownSearchInputSlotClassNames = {\n  input: `${dropdownSearchInputClassName}__input`,\n  wrapper: `${dropdownSearchInputClassName}__wrapper`,\n};\n\nexport type DropdownSearchInputStylesProps = Required<Pick<DropdownSearchInputProps, 'inline'>>;\n\n/**\n * A DropdownSearchInput represents item of 'search' Dropdown.\n * Used to display the search input field.\n */\nexport const DropdownSearchInput = (React.forwardRef<HTMLInputElement, DropdownSearchInputProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DropdownSearchInput.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibilityComboboxProps,\n    accessibilityInputProps,\n    inputRef,\n    inline,\n    placeholder,\n    disabled,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const unhandledProps = useUnhandledProps(DropdownSearchInput.handledProps, props);\n\n  const { styles: resolvedStyles } = useStyles<DropdownSearchInputStylesProps>(DropdownSearchInput.displayName, {\n    className: dropdownSearchInputClassName,\n    mapPropsToStyles: () => ({ inline }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleInputKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onInputKeyDown', e, props);\n  };\n\n  const handleInputBlur = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onInputBlur', e, props);\n  };\n\n  const handleKeyUp = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onKeyUp', e, props);\n  };\n\n  const element = (\n    <Input\n      ref={ref}\n      disabled={disabled}\n      inputRef={inputRef}\n      onFocus={handleFocus}\n      onKeyUp={handleKeyUp}\n      {...unhandledProps}\n      wrapper={{\n        className: cx(dropdownSearchInputSlotClassNames.wrapper, className),\n        styles: resolvedStyles.root,\n        ...accessibilityComboboxProps,\n        ...unhandledProps.wrapper,\n      }}\n      input={{\n        type: 'text',\n        className: dropdownSearchInputSlotClassNames.input,\n        styles: resolvedStyles.input,\n        placeholder,\n        onBlur: handleInputBlur,\n        onKeyDown: handleInputKeyDown,\n        ...accessibilityInputProps,\n        ...unhandledProps.input,\n      }}\n    />\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'input', HTMLInputElement, DropdownSearchInputProps> &\n  FluentComponentStaticProps<DropdownSearchInputProps>;\n\nDropdownSearchInput.displayName = 'DropdownSearchInput';\n\nDropdownSearchInput.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  accessibilityInputProps: PropTypes.object,\n  accessibilityComboboxProps: PropTypes.object,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  inputRef: customPropTypes.ref,\n  onFocus: PropTypes.func,\n  onInputBlur: PropTypes.func,\n  onInputKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  placeholder: PropTypes.string,\n};\n\nDropdownSearchInput.handledProps = Object.keys(DropdownSearchInput.propTypes) as any;\n\nDropdownSearchInput.create = createShorthandFactory({ Component: DropdownSearchInput });\n"],"mappings":"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"}