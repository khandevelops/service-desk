{"version":3,"file":"Skeleton.js","names":["PropTypes","compose","commonPropTypes","Box","SkeletonLine","SkeletonShape","SkeletonButton","SkeletonText","SkeletonInput","SkeletonAvatar","skeletonClassName","Skeleton","className","displayName","overrideStyles","shorthandConfig","handledProps","mapPropsToStylesProps","animation","Line","Shape","Button","Text","Input","Avatar","propTypes","createCommon","accessibility","oneOf"],"sources":["components/Skeleton/Skeleton.tsx"],"sourcesContent":["import * as PropTypes from 'prop-types';\nimport { compose, ComponentWithAs } from '@fluentui/react-bindings';\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps, BoxStylesProps } from '../Box/Box';\nimport { SkeletonLine } from './SkeletonLine';\nimport { SkeletonShape } from './SkeletonShape';\nimport { SkeletonButton } from './SkeletonButton';\nimport { SkeletonText } from './SkeletonText';\nimport { SkeletonInput } from './SkeletonInput';\nimport { SkeletonAvatar } from './SkeletonAvatar';\n\nexport interface SkeletonOwnProps {\n  /**\n   * Define if items inside should be animated and which kind of animation.\n   */\n  animation?: 'pulse' | 'wave';\n}\nexport interface SkeletonProps extends SkeletonOwnProps, BoxProps {}\n\nexport type SkeletonStylesProps = Required<Pick<SkeletonProps, 'animation'>>;\nexport const skeletonClassName = 'ui-skeleton';\n\n/**\n * A Skeleton is a component to be placed while the content is loading.\n */\nexport const Skeleton = compose<'div', SkeletonOwnProps, SkeletonStylesProps, BoxProps, BoxStylesProps>(Box, {\n  className: skeletonClassName,\n  displayName: 'Skeleton',\n  overrideStyles: true,\n  shorthandConfig: {},\n  handledProps: ['animation'],\n  mapPropsToStylesProps: ({ animation }) => ({\n    animation,\n  }),\n}) as ComponentWithAs<'div', SkeletonProps> & {\n  Line: typeof SkeletonLine;\n  Shape: typeof SkeletonShape;\n  Button: typeof SkeletonButton;\n  Text: typeof SkeletonText;\n  Input: typeof SkeletonInput;\n  Avatar: typeof SkeletonAvatar;\n};\n\nSkeleton.Line = SkeletonLine;\nSkeleton.Shape = SkeletonShape;\nSkeleton.Button = SkeletonButton;\nSkeleton.Text = SkeletonText;\nSkeleton.Input = SkeletonInput;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n  }),\n  animation: PropTypes.oneOf(['wave', 'pulse']),\n};\n"],"mappings":"AAAA,OAAO,KAAKA,SAAS,MAAM,YAAY;AACvC,SAASC,OAAO,QAAyB,0BAA0B;AACnE,SAASC,eAAe,QAAQ,aAAa;AAC7C,SAASC,GAAG,QAAkC,YAAY;AAC1D,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,cAAc,QAAQ,kBAAkB;AAWjD,OAAO,IAAMC,iBAAiB,GAAG,aAAa;;AAE9C;AACA;AACA;AACA,OAAO,IAAMC,QAAQ;EAAA,IAARA,QAAQ,GAAGV,OAAO,CAAyEE,GAAG,EAAE;IAC3GS,SAAS,EAAEF,iBAAiB;IAC5BG,WAAW,EAAE,UAAU;IACvBC,cAAc,EAAE,IAAI;IACpBC,eAAe,EAAE,CAAC,CAAC;IACnBC,YAAY,EAAE,CAAC,WAAW,CAAC;IAC3BC,qBAAqB,EAAE;MAAA,IAAGC,SAAS,QAATA,SAAS;MAAA,OAAQ;QACzCA,SAAS,EAATA;MACF,CAAC;IAAA;EACH,CAAC,CAOA;EAEDP,QAAQ,CAACQ,IAAI,GAAGf,YAAY;EAC5BO,QAAQ,CAACS,KAAK,GAAGf,aAAa;EAC9BM,QAAQ,CAACU,MAAM,GAAGf,cAAc;EAChCK,QAAQ,CAACW,IAAI,GAAGf,YAAY;EAC5BI,QAAQ,CAACY,KAAK,GAAGf,aAAa;EAC9BG,QAAQ,CAACa,MAAM,GAAGf,cAAc;EAChCE,QAAQ,CAACc,SAAS,qBACbvB,eAAe,CAACwB,YAAY,CAAC;IAC9BC,aAAa,EAAE;EACjB,CAAC,CAAC;IACFT,SAAS,EAAElB,SAAS,CAAC4B,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC;EAAC,EAC9C;EAAC,OA7BWjB,QAAQ;AAAA"}