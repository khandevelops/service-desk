{"version":3,"file":"ChatMessage.js","names":["chatMessageBehavior","IS_FOCUSABLE_ATTRIBUTE","keyboardKey","menuAsToolbarBehavior","getElementType","useAccessibility","useAutoControlled","useContextSelector","useFluentContext","useStyles","useTelemetry","useUnhandledProps","useMergedRefs","mergeVariablesOverrides","Ref","customPropTypes","cx","PropTypes","React","childrenExist","commonPropTypes","createShorthand","createShorthandFactory","getOrGenerateIdFromShorthand","rtlTextContainer","getScrollParent","partitionPopperPropsFromShorthand","usePopper","Box","Flex","Label","Menu","PortalInner","Reaction","Text","useChatContextSelectors","ChatItemContext","ChatMessageDetails","ChatMessageHeader","ChatMessageReadStatus","ChatMessageContent","chatMessageClassName","chatMessageSlotClassNames","actionMenu","author","badge","bar","body","bubble","bubbleInset","compactBody","reactionGroup","timestamp","partitionActionMenuPropsFromShorthand","value","Array","isArray","inline","showActionMenu","props","ChatMessage","forwardRef","inputProps","ref","context","displayName","telemetry","setStart","setEnd","parentAttached","v","attached","chatProps","density","accessibility","behaviors","message","undefined","badgePosition","children","className","content","design","details","header","mine","positionActionMenu","reactionGroupPosition","readStatus","styles","overflow","unstable_overflow","unstable_layout","layout","variables","failed","bubbleInsetContent","headerContent","isRefreshComfyLayout","actionMenuOptions","positioningProps","inlineActionMenu","controlledShowActionMenu","defaultValue","setShowActionMenu","hasActionMenu","hasHeaderReactionGroup","actionMenuId","useRef","current","modifiers","useCallback","target","container","name","options","fallbackPlacements","boundary","popperRef","align","position","positionFixed","enabled","actionsMenuTargetRef","targetRef","actionsMenuRef","containerRef","useState","focused","setFocused","getA11Props","actionHandlers","preventDefault","event","currentTarget","focus","stopPropagation","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","hasBadge","hasReactions","mapPropsToInlineStyles","classes","resolvedStyles","handleFocus","e","updatePosition","handleBlur","shouldPreserveFocusState","relatedTarget","handleMouseEnter","handleMouseLeave","renderActionMenu","actionMenuElement","create","defaultProps","overrideProps","id","handleKeyDown","toFocusItemInActionMenu","querySelector","querySelectorAll","keyCode","Enter","Tab","isShift","shiftKey","focusableElementsInsideMessage","firstFocusableInsideMessage","lastFocusableInsideMessage","length","boundaryElementInsideMessage","childrenPropExists","rootClasses","root","ElementType","unhandledProps","handledProps","badgeElement","reactionGroupElement","Group","authorElement","size","timestampElement","messageContent","predefinedProps","detailsElement","readStatusElement","elements","headerElement","bodyElement","bubbleElement","onMouseEnter","onMouseLeave","bubbleInsetElement","as","element","unstable_wrapWithFocusZone","onBlur","onFocus","onKeyDown","getAttributes","forElements","propTypes","createCommon","oneOfType","itemShorthand","collectionShorthand","bool","oneOf","func","node","Object","keys","Component","mappedProp"],"sources":["components/Chat/ChatMessage.tsx"],"sourcesContent":["import {\n  Accessibility,\n  chatMessageBehavior,\n  ChatMessageBehaviorProps,\n  IS_FOCUSABLE_ATTRIBUTE,\n  keyboardKey,\n  menuAsToolbarBehavior,\n} from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useAccessibility,\n  useAutoControlled,\n  useContextSelector,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useMergedRefs,\n  ForwardRefWithAs,\n  mergeVariablesOverrides,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  ComponentEventHandler,\n  ComponentKeyboardEventHandler,\n  FluentComponentStaticProps,\n  ObjectShorthandValue,\n  ShorthandCollection,\n  ShorthandValue,\n} from '../../types';\nimport {\n  ChildrenComponentProps,\n  childrenExist,\n  commonPropTypes,\n  ContentComponentProps,\n  createShorthand,\n  createShorthandFactory,\n  getOrGenerateIdFromShorthand,\n  rtlTextContainer,\n  UIComponentProps,\n} from '../../utils';\nimport {\n  getScrollParent,\n  partitionPopperPropsFromShorthand,\n  PopperModifiersFn,\n  PopperRefHandle,\n  PopperShorthandProps,\n  usePopper,\n} from '../../utils/positioner';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Flex } from '../Flex/Flex';\nimport { Label, LabelProps } from '../Label/Label';\nimport { Menu, MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PortalInner } from '../Portal/PortalInner';\nimport { Reaction, ReactionProps } from '../Reaction/Reaction';\nimport { ReactionGroupProps } from '../Reaction/ReactionGroup';\nimport { Text, TextProps } from '../Text/Text';\nimport { useChatContextSelectors } from './chatContext';\nimport { ChatDensity } from './chatDensity';\nimport { ChatItemContext } from './chatItemContext';\nimport { ChatMessageDetails, ChatMessageDetailsProps } from './ChatMessageDetails';\nimport { ChatMessageHeader, ChatMessageHeaderProps } from './ChatMessageHeader';\nimport { ChatMessageReadStatus, ChatMessageReadStatusProps } from './ChatMessageReadStatus';\nimport { ChatMessageContent } from './ChatMessageContent';\n\nexport interface ChatMessageSlotClassNames {\n  actionMenu: string;\n  author: string;\n  badge: string;\n  bar: string;\n  bubble: string;\n  bubbleInset: string;\n  body: string;\n  compactBody: string;\n  reactionGroup: string;\n  timestamp: string;\n}\n\nexport type ChatMessageLayout = 'default' | 'refresh';\n\nexport interface ChatMessageProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ChatMessageBehaviorProps>;\n\n  /**\n   * Menu with actions of the message.\n   * popper: alters the action menu positioning.\n   * inline: whether the action menu should be rendered inline with the chat message, or in the body. It's true by default.\n   * showActionMenu: controls if the action menu is visible or not.\n   */\n  actionMenu?:\n    | ShorthandValue<MenuProps & { popper?: PopperShorthandProps; inline?: boolean; showActionMenu?: boolean }>\n    | ShorthandCollection<MenuItemProps & { inline?: boolean; showActionMenu?: boolean }>;\n\n  /** Controls messages's relation to other chat messages. Is automatically set by the ChatItem. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Author of the message. */\n  author?: ShorthandValue<TextProps>;\n\n  /** Badge attached to the message. */\n  badge?: ShorthandValue<LabelProps>;\n\n  /** A message can format the badge to appear at the start or the end of the message. */\n  badgePosition?: 'start' | 'end';\n\n  /** A message can have a custom body. Only rendered in compact density. */\n  compactBody?: ShorthandValue<BoxProps>;\n\n  /** Chat density. Is automatically set by the Chat. */\n  density?: ChatDensity;\n\n  /** Message details info slot. Displayed in the header or body in comfy and compact density respectively. */\n  details?: ShorthandValue<ChatMessageDetailsProps>;\n\n  /** A message can have a custom header. */\n  header?: ShorthandValue<ChatMessageHeaderProps>;\n\n  /** Optional slot for inserting content into the default header. */\n  headerContent?: React.ReactNode;\n\n  /** Indicates whether message belongs to the current user. */\n  mine?: boolean;\n\n  /**\n   * Called after user's blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called on chat message item key down.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user enters by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user leaves by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseLeave?: ComponentEventHandler<ChatMessageProps>;\n\n  /** Allows suppression of action menu positioning for performance reasons. */\n  positionActionMenu?: boolean;\n\n  /** Reaction group applied to the message. */\n  reactionGroup?: ShorthandValue<ReactionGroupProps> | ShorthandCollection<ReactionProps>;\n\n  /** A message can format the reactions group to appear at the start or the end of the message. */\n  reactionGroupPosition?: 'start' | 'end';\n\n  /** Message read status indicator. */\n  readStatus?: ShorthandValue<ChatMessageReadStatusProps>;\n\n  /** Timestamp of the message. */\n  timestamp?: ShorthandValue<TextProps>;\n\n  /** Positions an actionMenu slot in \"fixed\" mode. */\n  unstable_overflow?: boolean;\n\n  /** A message can render with different layouts. */\n  unstable_layout?: ChatMessageLayout;\n\n  /** Indicates whether the message is in a failed state. */\n  failed?: boolean;\n\n  /** A message can have a custom body element (only applicable to \"refresh\" layout). */\n  body?: ShorthandValue<BoxProps>;\n\n  /** A message can have a custom bubble element (only applicable to \"refresh\" layout). */\n  bubble?: ShorthandValue<BoxProps>;\n\n  /** A message can have a custom bubble inset element which sits next to the bubble (only applicable to \"refresh\" layout). */\n  bubbleInset?: ShorthandValue<BoxProps>;\n\n  /** Optional override for the content in the default bubble inset (only applicable to \"refresh\" layout). */\n  bubbleInsetContent?: React.ReactNode;\n}\n\nexport type ChatMessageStylesProps = Pick<ChatMessageProps, 'attached' | 'badgePosition' | 'density' | 'mine'> & {\n  hasBadge: boolean;\n  hasHeaderReactionGroup: boolean;\n  hasReactions: boolean;\n  layout: ChatMessageLayout;\n  failed: boolean;\n\n  // focused, hasActionMenu and showActionMenu controls the visibility of action menu\n  focused: boolean;\n  hasActionMenu: boolean;\n  showActionMenu: boolean;\n};\n\nexport const chatMessageClassName = 'ui-chat__message';\nexport const chatMessageSlotClassNames: ChatMessageSlotClassNames = {\n  actionMenu: `${chatMessageClassName}__actions`,\n  author: `${chatMessageClassName}__author`,\n  badge: `${chatMessageClassName}__badge`,\n  bar: `${chatMessageClassName}__bar`,\n  body: `${chatMessageClassName}__body`,\n  bubble: `${chatMessageClassName}__bubble`,\n  bubbleInset: `${chatMessageClassName}__bubble-inset`,\n  compactBody: `${chatMessageClassName}__compact-body`,\n  reactionGroup: `${chatMessageClassName}__reactions`,\n  timestamp: `${chatMessageClassName}__timestamp`,\n};\n\nfunction partitionActionMenuPropsFromShorthand<P>(\n  value: ShorthandValue<P & { inline?: boolean; showActionMenu?: boolean }>,\n): [ShorthandValue<P> | ObjectShorthandValue<P>, boolean | undefined, boolean | undefined] {\n  if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n    const { inline, showActionMenu, ...props } = value as ObjectShorthandValue<P> & {\n      inline?: boolean;\n      showActionMenu?: boolean;\n    };\n\n    return [props as ObjectShorthandValue<P>, inline ?? true, showActionMenu];\n  }\n\n  return [value, true, false];\n}\n\n/**\n * A ChatMessage represents a single message in chat.\n */\nexport const ChatMessage = (React.forwardRef<HTMLDivElement, ChatMessageProps>((inputProps, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ChatMessage.displayName, context.telemetry);\n  setStart();\n\n  const parentAttached = useContextSelector(ChatItemContext, v => v.attached);\n  const chatProps = useChatContextSelectors({\n    density: v => v.density,\n    accessibility: v => v.behaviors.message,\n  });\n\n  const props = {\n    ...inputProps,\n    density: inputProps.density === undefined ? chatProps.density : inputProps.density,\n    accessibility:\n      inputProps.accessibility === undefined\n        ? chatProps.accessibility || chatMessageBehavior\n        : inputProps.accessibility,\n  };\n  const {\n    accessibility,\n    attached = parentAttached,\n    author,\n    badge,\n    badgePosition,\n    children,\n    className,\n    compactBody,\n    content,\n    density,\n    design,\n    details,\n    header,\n    mine,\n    positionActionMenu,\n    reactionGroup,\n    reactionGroupPosition,\n    readStatus,\n    styles,\n    timestamp,\n    unstable_overflow: overflow,\n    unstable_layout: layout = 'default',\n    variables,\n    failed,\n    bubble,\n    body,\n    bubbleInset,\n    bubbleInsetContent,\n    headerContent,\n  } = props;\n\n  const isRefreshComfyLayout = layout === 'refresh' && density === 'comfy';\n\n  const [actionMenuOptions, positioningProps] = partitionPopperPropsFromShorthand(props.actionMenu);\n  const [actionMenu, inlineActionMenu, controlledShowActionMenu] = partitionActionMenuPropsFromShorthand(\n    actionMenuOptions,\n  );\n  const [showActionMenu, setShowActionMenu] = useAutoControlled<boolean>({\n    defaultValue: false,\n    value: controlledShowActionMenu,\n  });\n  const hasActionMenu = !_.isNil(actionMenu);\n  const hasHeaderReactionGroup = !!reactionGroup && reactionGroupPosition === 'start';\n\n  const actionMenuId = React.useRef<string>();\n  actionMenuId.current = getOrGenerateIdFromShorthand(`${chatMessageClassName}-`, actionMenu, actionMenuId.current);\n\n  const modifiers = React.useCallback<PopperModifiersFn>(\n    (target, container) => {\n      return (\n        positionActionMenu && [\n          // https://popper.js.org/docs/v2/modifiers/flip/\n          // Forces to flip only in \"top-*\" positions\n          { name: 'flip', options: { fallbackPlacements: ['top'] } },\n          overflow && {\n            name: 'preventOverflow',\n            options: { boundary: getScrollParent(container) },\n          },\n        ]\n      );\n    },\n    [positionActionMenu, overflow],\n  );\n\n  const popperRef = React.useRef<PopperRefHandle>();\n  const { targetRef: actionsMenuTargetRef, containerRef: actionsMenuRef } = usePopper({\n    align: 'end',\n    position: 'above',\n    positionFixed: overflow,\n\n    enabled: hasActionMenu && positionActionMenu,\n    modifiers,\n\n    ...positioningProps,\n    popperRef: useMergedRefs(positioningProps?.popperRef, popperRef),\n  });\n\n  // `focused` state is used for show/hide actionMenu\n  const [focused, setFocused] = React.useState<boolean>(false);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      // prevents default FocusZone behavior, e.g., in ChatMessageBehavior, it prevents FocusZone from using arrow keys\n      // as navigation (only Tab key should work)\n      preventDefault: event => {\n        // preventDefault only if event coming from inside the message\n        if (event.currentTarget !== event.target) {\n          event.preventDefault();\n        }\n      },\n\n      focus: event => {\n        const target = actionsMenuTargetRef.current;\n        if (target) {\n          target.focus();\n          event.stopPropagation();\n        }\n      },\n    },\n    debugName: ChatMessage.displayName,\n    mapPropsToBehavior: () => ({\n      hasActionMenu,\n      inlineActionMenu,\n      actionMenuId: actionMenuId.current,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<ChatMessageStylesProps>(ChatMessage.displayName, {\n    className: chatMessageClassName,\n    mapPropsToStyles: () => ({\n      attached,\n      badgePosition,\n      density,\n      focused,\n      hasActionMenu,\n      hasBadge: !!badge,\n      hasHeaderReactionGroup,\n      mine,\n      showActionMenu,\n      hasReactions: !!reactionGroup,\n      failed,\n      layout,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    popperRef.current?.updatePosition();\n\n    // react onFocus is called even when nested component receives focus (i.e. it bubbles)\n    // so when focus moves within actionMenu, the `focus` state in chatMessage remains true, and keeps actionMenu visible\n    setFocused(true);\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    // `focused` controls is focused the whole `ChatMessage` or any of its children. When we're navigating\n    // with keyboard the focused element will be changed and there is no way to use `:focus` selector\n    const shouldPreserveFocusState = _.invoke(e, 'currentTarget.contains', (e as any).relatedTarget);\n\n    setFocused(shouldPreserveFocusState);\n    setShowActionMenu(false);\n\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleMouseEnter = (e: React.SyntheticEvent) => {\n    popperRef.current?.updatePosition();\n    if (hasActionMenu && !inlineActionMenu) {\n      setShowActionMenu(true);\n    }\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const handleMouseLeave = (e: React.SyntheticEvent) => {\n    if (!focused && hasActionMenu && !inlineActionMenu) {\n      setShowActionMenu(false);\n    }\n    _.invoke(props, 'onMouseLeave', e, props);\n  };\n\n  const renderActionMenu = () => {\n    const actionMenuElement = Menu.create(actionMenu, {\n      defaultProps: () => ({\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        accessibility: menuAsToolbarBehavior,\n        className: chatMessageSlotClassNames.actionMenu,\n        styles: resolvedStyles.actionMenu,\n      }),\n      overrideProps: {\n        id: actionMenuId.current,\n      },\n    });\n\n    const content = actionMenuElement ? <Ref innerRef={actionsMenuRef}>{actionMenuElement}</Ref> : actionMenuElement;\n\n    return inlineActionMenu || !content ? content : <PortalInner>{content}</PortalInner>;\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (hasActionMenu && !inlineActionMenu) {\n      // reference: https://github.com/microsoft/fluentui/pull/17329\n\n      const toFocusItemInActionMenu =\n        actionsMenuRef.current?.querySelector('[tabindex=\"0\"]') ??\n        actionsMenuRef.current?.querySelectorAll('[tabindex=\"-1\"]:not([data-is-focusable=\"false\"])')[0];\n\n      if (e.keyCode === keyboardKey.Enter) {\n        toFocusItemInActionMenu?.focus();\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      if (e.keyCode === keyboardKey.Tab) {\n        // TAB/SHIFT+TAB cycles focus among actionMenu and focusable elements within chat message\n        const isShift = !!e.shiftKey;\n\n        const focusableElementsInsideMessage: NodeListOf<HTMLElement> = e.currentTarget.querySelectorAll(\n          '[tabindex=\"-1\"]:not([data-is-focusable=\"false\"])',\n        );\n        const firstFocusableInsideMessage = focusableElementsInsideMessage[0];\n        const lastFocusableInsideMessage = focusableElementsInsideMessage[focusableElementsInsideMessage.length - 1];\n\n        if (e.target === toFocusItemInActionMenu) {\n          // focus is now inside action menu\n          // cycle focus into the first/last focusable element inside chat message\n          if (isShift) {\n            lastFocusableInsideMessage?.focus();\n          } else {\n            firstFocusableInsideMessage?.focus();\n          }\n          e.stopPropagation();\n          e.preventDefault();\n        } else {\n          const boundaryElementInsideMessage = isShift ? firstFocusableInsideMessage : lastFocusableInsideMessage;\n          if (e.target === boundaryElementInsideMessage) {\n            // focus is now on the first/last focusable element inside chat message\n            toFocusItemInActionMenu.focus(); // cycle focus back into action Menu\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        }\n      }\n    }\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const childrenPropExists = childrenExist(children);\n  const rootClasses = childrenPropExists ? cx(classes.root, classes.content) : classes.root;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatMessage.handledProps, props);\n\n  const badgeElement = Label.create(badge, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.badge,\n      styles: resolvedStyles.badge,\n    }),\n  });\n\n  const reactionGroupElement = Reaction.Group.create(reactionGroup, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.reactionGroup,\n      styles: resolvedStyles.reactionGroup,\n    }),\n  });\n\n  const actionMenuElement = renderActionMenu();\n\n  const authorElement = Text.create(author, {\n    defaultProps: () => ({\n      size: density === 'comfy' ? 'small' : undefined,\n      styles: resolvedStyles.author,\n      className: chatMessageSlotClassNames.author,\n    }),\n  });\n\n  const timestampElement = Text.create(timestamp, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.timestamp,\n      timestamp: true,\n      className: chatMessageSlotClassNames.timestamp,\n    }),\n  });\n\n  const messageContent = createShorthand(ChatMessageContent, content, {\n    defaultProps: () => ({ badgePosition, density, failed, hasBadge: !!badge, mine, unstable_layout: layout }),\n    overrideProps: predefinedProps => ({\n      variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n    }),\n  });\n\n  const detailsElement = createShorthand(ChatMessageDetails, details, {\n    defaultProps: () => ({ attached, density, hasHeaderReactionGroup, mine }),\n  });\n\n  const readStatusElement = createShorthand(ChatMessageReadStatus, readStatus, {\n    defaultProps: () => ({ density }),\n  });\n\n  let elements = <></>;\n  if (density === 'compact') {\n    const headerElement = createShorthand(ChatMessageHeader, header);\n\n    const bodyElement = Box.create(compactBody || {}, {\n      defaultProps: () =>\n        getA11Props('compactBody', {\n          className: chatMessageSlotClassNames.compactBody,\n          styles: resolvedStyles.compactBody,\n        }),\n      overrideProps: () => ({\n        content: (\n          <>\n            <Flex.Item grow={1}>\n              <div>\n                {authorElement}\n                {messageContent}\n              </div>\n            </Flex.Item>\n            {timestampElement}\n            {detailsElement}\n            {badgeElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {actionMenuElement}\n        <div className={chatMessageSlotClassNames.bar} />\n        {headerElement}\n        {bodyElement}\n        {reactionGroupElement}\n        {readStatusElement}\n      </>\n    );\n  } else if (isRefreshComfyLayout) {\n    const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n      defaultProps: () => ({\n        styles: resolvedStyles.header,\n        content: (\n          <>\n            {authorElement}\n            {headerContent}\n            {detailsElement}\n          </>\n        ),\n      }),\n    });\n\n    const bubbleElement = Box.create(bubble || {}, {\n      defaultProps: () =>\n        getA11Props('bubble', {\n          className: chatMessageSlotClassNames.bubble,\n          styles: resolvedStyles.bubble,\n        }),\n      overrideProps: () => ({\n        ref: actionsMenuTargetRef,\n        content: (\n          <>\n            {actionMenuElement}\n            {messageContent}\n            {reactionGroupElement}\n            {readStatusElement}\n          </>\n        ),\n        onMouseEnter(e: React.SyntheticEvent) {\n          popperRef.current?.updatePosition();\n          handleMouseEnter(e);\n        },\n        onMouseLeave(e: React.SyntheticEvent) {\n          handleMouseLeave(e);\n        },\n      }),\n    });\n\n    const bubbleInsetElement = Box.create(bubbleInset || {}, {\n      defaultProps: () => ({\n        as: 'span',\n        className: chatMessageSlotClassNames.bubbleInset,\n        styles: resolvedStyles.bubbleInset,\n      }),\n      overrideProps: () => ({\n        content: (\n          <>\n            {badgeElement}\n            {bubbleInsetContent}\n            {timestampElement}\n          </>\n        ),\n      }),\n    });\n\n    const bodyElement = Box.create(body || {}, {\n      defaultProps: () =>\n        getA11Props('body', {\n          className: chatMessageSlotClassNames.body,\n          styles: resolvedStyles.body,\n        }),\n      overrideProps: () => ({\n        content: (\n          <>\n            {bubbleElement}\n            {bubbleInsetElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {headerElement}\n        {bodyElement}\n      </>\n    );\n  } else {\n    const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n      overrideProps: () => ({\n        content: (\n          <>\n            {authorElement}\n            {timestampElement}\n            {detailsElement}\n            {reactionGroupPosition === 'start' && reactionGroupElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {actionMenuElement}\n        <div className={chatMessageSlotClassNames.bar} />\n        {badgePosition === 'start' && badgeElement}\n        {headerElement}\n        {messageContent}\n        {reactionGroupPosition === 'end' && reactionGroupElement}\n        {badgePosition === 'end' && badgeElement}\n        {readStatusElement}\n      </>\n    );\n  }\n\n  const element = (\n    <Ref innerRef={!isRefreshComfyLayout && actionsMenuTargetRef}>\n      {getA11Props.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11Props('root', {\n            className: rootClasses,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onMouseEnter: handleMouseEnter,\n            onMouseLeave: handleMouseLeave,\n            onKeyDown: handleKeyDown,\n            ref,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenPropExists ? children : elements}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, ChatMessageProps> &\n  FluentComponentStaticProps<ChatMessageProps>;\n\nChatMessage.displayName = 'ChatMessage';\n\nChatMessage.defaultProps = {\n  badgePosition: 'end',\n  positionActionMenu: true,\n  reactionGroupPosition: 'start',\n};\n\nChatMessage.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actionMenu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  author: customPropTypes.itemShorthand,\n  badge: customPropTypes.itemShorthand,\n  badgePosition: PropTypes.oneOf(['start', 'end']),\n  compactBody: customPropTypes.itemShorthand,\n  density: PropTypes.oneOf<ChatDensity>(['comfy', 'compact']),\n  details: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  mine: PropTypes.bool,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  positionActionMenu: PropTypes.bool,\n  reactionGroup: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  reactionGroupPosition: PropTypes.oneOf(['start', 'end']),\n  readStatus: customPropTypes.itemShorthand,\n  timestamp: customPropTypes.itemShorthand,\n  unstable_overflow: PropTypes.bool,\n  unstable_layout: PropTypes.oneOf(['default', 'refresh']),\n  failed: PropTypes.bool,\n  headerContent: PropTypes.node,\n  body: customPropTypes.itemShorthand,\n  bubble: customPropTypes.itemShorthand,\n  bubbleInset: customPropTypes.itemShorthand,\n  bubbleInsetContent: PropTypes.node,\n};\n\nChatMessage.handledProps = Object.keys(ChatMessage.propTypes) as any;\n\nChatMessage.create = createShorthandFactory({ Component: ChatMessage, mappedProp: 'content' });\n"],"mappings":"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"}