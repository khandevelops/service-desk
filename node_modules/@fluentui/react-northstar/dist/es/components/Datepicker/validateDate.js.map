{"version":3,"file":"validateDate.js","names":["isRestrictedDate","validateDate","futureSelectedDate","futureFormattedDate","calendarOptions","dateFormatting","required","isNaN","getTime","isOutOfBoundsErrorMessage","invalidInputErrorMessage","isRequiredErrorMessage"],"sources":["components/Datepicker/validateDate.tsx"],"sourcesContent":["import { isRestrictedDate, IRestrictedDatesOptions, ICalendarStrings } from '../../utils/date-time-utilities';\n\nexport const validateDate = (\n  futureSelectedDate: Date,\n  futureFormattedDate: string,\n  calendarOptions: IRestrictedDatesOptions,\n  dateFormatting: ICalendarStrings,\n  required: boolean,\n): string => {\n  if (futureSelectedDate && !isNaN(futureSelectedDate.getTime())) {\n    if (isRestrictedDate(futureSelectedDate, calendarOptions)) {\n      return dateFormatting.isOutOfBoundsErrorMessage;\n    }\n  } else if (futureFormattedDate) {\n    return dateFormatting.invalidInputErrorMessage;\n  } else if (required && !futureSelectedDate) {\n    return dateFormatting.isRequiredErrorMessage;\n  }\n  return '';\n};\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAmD,iCAAiC;AAE7G,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,CACvBC,kBAAwB,EACxBC,mBAA2B,EAC3BC,eAAwC,EACxCC,cAAgC,EAChCC,QAAiB,EACN;EACX,IAAIJ,kBAAkB,IAAI,CAACK,KAAK,CAACL,kBAAkB,CAACM,OAAO,EAAE,CAAC,EAAE;IAC9D,IAAIR,gBAAgB,CAACE,kBAAkB,EAAEE,eAAe,CAAC,EAAE;MACzD,OAAOC,cAAc,CAACI,yBAAyB;IACjD;EACF,CAAC,MAAM,IAAIN,mBAAmB,EAAE;IAC9B,OAAOE,cAAc,CAACK,wBAAwB;EAChD,CAAC,MAAM,IAAIJ,QAAQ,IAAI,CAACJ,kBAAkB,EAAE;IAC1C,OAAOG,cAAc,CAACM,sBAAsB;EAC9C;EACA,OAAO,EAAE;AACX,CAAC"}