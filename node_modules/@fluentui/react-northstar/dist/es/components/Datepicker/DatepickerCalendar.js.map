{"version":3,"file":"DatepickerCalendar.js","names":["datepickerCalendarBehavior","DateRangeType","DayOfWeek","DAYS_IN_WEEK","FirstWeekOfYear","getDayGrid","DEFAULT_CALENDAR_STRINGS","compareDates","compareDatePart","getMonthStart","getMonthEnd","getStartDateOfWeek","getEndDateOfWeek","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","customPropTypes","PropTypes","React","commonPropTypes","createShorthand","DatepickerCalendarGrid","DatepickerCalendarGridRow","DatepickerCalendarHeader","DatepickerCalendarCell","DatepickerCalendarCellButton","DatepickerCalendarHeaderCell","navigateToNewDate","contstraintNavigatedDate","datepickerCalendarClassName","normalizeDateInGrid","date","result","Date","getTime","setDate","DatepickerCalendar","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","calendarHeaderCell","calendarCell","calendarCellButton","calendarGrid","calendarGridRow","dateRangeType","header","selectedDate","navigatedDate","firstDayOfWeek","today","formatMonthDayYear","formatMonthYear","shortDays","days","minDate","maxDate","restrictedDates","restrictedDatesOptions","ElementType","unhandledProps","handledProps","updateNavigatedDate","shouldFocusInDayGrid","setShouldFocusInDayGrid","setGridNavigatedDate","getA11yProps","accessibility","debugName","actionHandlers","addWeek","e","preventDefault","newNavigatedDate","gridNavigatedDate","subtractWeek","addDay","subtractDay","moveToStartOfWeek","targetDate","moveToEndOfWeek","moveToStartOfColumn","targetDayOfWeek","getDay","visibleGrid","day","originalDate","moveToEndOfColumn","length","rtl","useState","normalizedGridDate","setNormalizedGridDate","mapPropsToInlineStyles","classes","useMemo","dayGridOptions","weeksToShow","firstWeekOfYear","daysToSelectInDayView","showWeekNumbers","workWeekDays","grid","slice","useEffect","newNormalizedDate","gridContainsNavigatedDate","find","week","dateFormatting","months","shortMonths","focusDateRef","useRef","changeMonth","nextMonth","prevMonthOutOfBounds","nextMonthOutOfBounds","current","focus","renderCell","content","defaultProps","key","selected","isSelected","disabled","isInBounds","quiet","isInMonth","renderCellButton","dateRange","overrideProps","predefinedProps","onFocus","onClick","value","selectedDateRange","Day","renderWeekRow","element","root","label","disabledNextButton","disabledPreviousButton","prevMonthAriaLabel","nextMonthAriaLabel","onPreviousClick","data","onNextClick","children","dayNumber","isRowSelectionActive","Week","propTypes","createCommon","itemShorthand","onDateChange","func","instanceOf","arrayOf","oneOf","Object","keys","map","name","number","bool","formatDay","formatYear","parseDate","string","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","openCalendarTitle","inputPlaceholder","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","closeButtonAriaLabel","weekNumberFormatString","selectedDateFormatString","todayDateFormatString","inputAriaLabel","inputBoundedFormatString","inputMinBoundedFormatString","inputMaxBoundedFormatString","Monday","FirstDay"],"sources":["components/Datepicker/DatepickerCalendar.tsx"],"sourcesContent":["import { Accessibility, datepickerCalendarBehavior, DatepickerCalendarBehaviorProps } from '@fluentui/accessibility';\nimport {\n  DateRangeType,\n  DayOfWeek,\n  DAYS_IN_WEEK,\n  FirstWeekOfYear,\n  getDayGrid,\n  IDay,\n  DEFAULT_CALENDAR_STRINGS,\n  ICalendarStrings,\n  IDayGridOptions,\n  IDateGridStrings,\n  IRestrictedDatesOptions,\n  compareDates,\n  compareDatePart,\n  getMonthStart,\n  getMonthEnd,\n  getStartDateOfWeek,\n  getEndDateOfWeek,\n} from '../../utils/date-time-utilities';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { commonPropTypes, createShorthand, UIComponentProps } from '../../utils';\nimport { DatepickerCalendarGrid, DatepickerCalendarGridProps } from './DatepickerCalendarGrid';\nimport { DatepickerCalendarGridRow, DatepickerCalendarGridRowProps } from './DatepickerCalendarGridRow';\nimport { DatepickerCalendarHeader, DatepickerCalendarHeaderProps } from './DatepickerCalendarHeader';\nimport { DatepickerCalendarCellProps, DatepickerCalendarCell } from './DatepickerCalendarCell';\nimport { DatepickerCalendarCellButtonProps, DatepickerCalendarCellButton } from './DatepickerCalendarCellButton';\nimport { DatepickerCalendarHeaderCellProps, DatepickerCalendarHeaderCell } from './DatepickerCalendarHeaderCell';\nimport { navigateToNewDate, contstraintNavigatedDate } from './navigateToNewDate';\n\nexport interface DatepickerCalendarProps extends UIComponentProps, Partial<ICalendarStrings>, Partial<IDayGridOptions> {\n  /** Calendar can have header. */\n  header?: ShorthandValue<DatepickerCalendarHeaderProps>;\n\n  /** A render function to customize how cells are rendered in the Calendar. */\n  calendarCell?: ShorthandValue<DatepickerCalendarCellProps>;\n\n  /** A render function to customize how cell's buttons are rendered in the Calendar. */\n  calendarCellButton?: ShorthandValue<DatepickerCalendarCellButtonProps>;\n\n  /** A render function to customize how header cells are rendered in the Calendar. */\n  calendarHeaderCell?: ShorthandValue<DatepickerCalendarHeaderCellProps>;\n\n  /** A render function to customize how the calendar grid is rendered. */\n  calendarGrid?: ShorthandValue<DatepickerCalendarGridProps>;\n\n  /** A render function to customize how the calendar grid row is rendered. */\n  calendarGridRow?: ShorthandValue<DatepickerCalendarGridRowProps>;\n\n  /**\n   * The currently selected date range, currently only supports week.\n   */\n  selectedDateRange?: Date[];\n\n  /**\n   * The currently selected date.\n   */\n  selectedDate?: Date;\n  /**\n   * The currently navigated date.\n   */\n  navigatedDate?: Date;\n\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerCalendarBehaviorProps>;\n\n  /**\n   * Called on change of the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChange?: ComponentEventHandler<DatepickerCalendarProps & { value: IDay }>;\n}\n\nexport type DatepickerCalendarStylesProps = never;\n\nexport const datepickerCalendarClassName = 'ui-datepicker__calendar';\n\nconst normalizeDateInGrid = (date: Date): Date => {\n  const result = new Date(date.getTime());\n  result.setDate(1);\n  return result;\n};\n\n/**\n * A DatepickerCalendar is used to display dates in sematically grouped way.\n */\nexport const DatepickerCalendar = (React.forwardRef<HTMLDivElement, DatepickerCalendarProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DatepickerCalendar.displayName, context.telemetry);\n  setStart();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    calendarHeaderCell,\n    calendarCell,\n    calendarCellButton,\n    calendarGrid,\n    calendarGridRow,\n    dateRangeType,\n    header,\n    selectedDate,\n    navigatedDate,\n    firstDayOfWeek,\n    today,\n    formatMonthDayYear,\n    formatMonthYear,\n    shortDays,\n    days,\n    minDate,\n    maxDate,\n    restrictedDates,\n  } = props;\n\n  const restrictedDatesOptions: IRestrictedDatesOptions = {\n    minDate,\n    maxDate,\n    restrictedDates,\n  };\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DatepickerCalendar.handledProps, props);\n\n  const updateNavigatedDate = (date: Date) => {\n    if (!!date) {\n      if (!shouldFocusInDayGrid) {\n        setShouldFocusInDayGrid(true);\n      }\n      setGridNavigatedDate(date);\n    }\n  };\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: DatepickerCalendar.displayName,\n    actionHandlers: {\n      addWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      addDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getStartDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getEndDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(visibleGrid[0], day => day.originalDate.getDay() === targetDayOfWeek)?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(\n          visibleGrid[visibleGrid.length - 1],\n          day => day.originalDate.getDay() === targetDayOfWeek,\n        )?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const [gridNavigatedDate, setGridNavigatedDate] = React.useState<Date>(\n    () => new Date((navigatedDate || today || new Date()).getTime()),\n  );\n  const [normalizedGridDate, setNormalizedGridDate] = React.useState<Date>(() =>\n    normalizeDateInGrid(gridNavigatedDate),\n  );\n\n  const [shouldFocusInDayGrid, setShouldFocusInDayGrid] = React.useState<boolean>(true);\n\n  const { classes } = useStyles<DatepickerCalendarStylesProps>(DatepickerCalendar.displayName, {\n    className: datepickerCalendarClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const visibleGrid = React.useMemo<IDay[][]>(() => {\n    const dayGridOptions: IDayGridOptions = {\n      selectedDate,\n      navigatedDate: normalizedGridDate,\n      weeksToShow: props.weeksToShow,\n      firstDayOfWeek: props.firstDayOfWeek,\n      firstWeekOfYear: props.firstWeekOfYear,\n      dateRangeType: props.dateRangeType,\n      daysToSelectInDayView: props.daysToSelectInDayView,\n      today: props.today,\n      showWeekNumbers: props.showWeekNumbers,\n      workWeekDays: props.workWeekDays,\n      minDate: props.minDate,\n      maxDate: props.maxDate,\n      restrictedDates: props.restrictedDates,\n    };\n    const grid = getDayGrid(dayGridOptions);\n    return grid.slice(1, grid.length - 1); // slicing off first and last weeks, cause we don't use them for transitions\n  }, [selectedDate, normalizedGridDate, props]);\n\n  React.useEffect(() => {\n    const newNormalizedDate = normalizeDateInGrid(gridNavigatedDate);\n\n    if (compareDatePart(newNormalizedDate, normalizedGridDate)) {\n      // Do not change the grid immediately the month changes but only once the date stops being visible.\n      const gridContainsNavigatedDate = visibleGrid.find(week =>\n        week.find(day => compareDatePart(day.originalDate, gridNavigatedDate) === 0),\n      );\n      if (!gridContainsNavigatedDate) {\n        setNormalizedGridDate(newNormalizedDate);\n      }\n    }\n  }, [gridNavigatedDate, visibleGrid, normalizedGridDate]);\n\n  const dateFormatting: IDateGridStrings = {\n    months: props.months,\n    shortMonths: props.shortMonths,\n    days: props.days,\n    shortDays: props.shortDays,\n  };\n\n  const focusDateRef = React.useRef(null);\n\n  const changeMonth = (nextMonth: boolean) => {\n    const newNavigatedDate = navigateToNewDate(\n      normalizedGridDate,\n      'Month',\n      nextMonth ? 1 : -1,\n      restrictedDatesOptions,\n      true,\n    );\n    if (!!newNavigatedDate) {\n      setGridNavigatedDate(newNavigatedDate);\n      setShouldFocusInDayGrid(false);\n      setNormalizedGridDate(normalizeDateInGrid(newNavigatedDate));\n    }\n  };\n\n  const prevMonthOutOfBounds = minDate ? compareDatePart(minDate, getMonthStart(normalizedGridDate)) >= 0 : false;\n  const nextMonthOutOfBounds = maxDate ? compareDatePart(getMonthEnd(normalizedGridDate), maxDate) >= 0 : false;\n  React.useEffect(() => {\n    if (shouldFocusInDayGrid) {\n      focusDateRef.current?.focus();\n    }\n  }, [gridNavigatedDate, normalizedGridDate, shouldFocusInDayGrid]);\n\n  const renderCell = (day: IDay, content) =>\n    createShorthand(DatepickerCalendarCell, calendarCell, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content,\n          key: day.key,\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n    });\n\n  const renderCellButton = (day: IDay, dateRange: IDay[]) =>\n    createShorthand(DatepickerCalendarCellButton, calendarCellButton, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content: day.date,\n          'aria-label': formatMonthDayYear(day.originalDate, dateFormatting),\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n      overrideProps: (\n        predefinedProps: DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> },\n      ): DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> } => ({\n        onFocus: e => {\n          setGridNavigatedDate(day.originalDate);\n          _.invoke(predefinedProps, 'onFocus', e, predefinedProps);\n        },\n        onClick: e => {\n          _.invoke(props, 'onDateChange', e, {\n            ...props,\n            value: day,\n            selectedDateRange: dateRangeType !== DateRangeType.Day ? dateRange : [day],\n          });\n          _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n        },\n        ref: compareDates(gridNavigatedDate, day.originalDate) ? focusDateRef : null,\n      }),\n    });\n  const renderWeekRow = (week: IDay[]) => _.map(week, (day: IDay) => renderCell(day, renderCellButton(day, week)));\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {createShorthand(DatepickerCalendarHeader, header, {\n        defaultProps: () => ({\n          label: formatMonthYear(normalizedGridDate, dateFormatting),\n          'aria-label': formatMonthYear(normalizedGridDate, dateFormatting),\n          disabledNextButton: nextMonthOutOfBounds,\n          disabledPreviousButton: prevMonthOutOfBounds,\n          prevMonthAriaLabel: props.prevMonthAriaLabel,\n          nextMonthAriaLabel: props.nextMonthAriaLabel,\n        }),\n        overrideProps: (predefinedProps: DatepickerCalendarHeaderProps): DatepickerCalendarHeaderProps => ({\n          onPreviousClick: (e, data) => {\n            changeMonth(false);\n            _.invoke(predefinedProps, 'onPreviousClick', e, data);\n          },\n          onNextClick: (e, data) => {\n            changeMonth(true);\n            _.invoke(predefinedProps, 'onNextClick', e, data);\n          },\n        }),\n      })}\n      {createShorthand(DatepickerCalendarGrid, calendarGrid, {\n        defaultProps: () =>\n          getA11yProps('calendarGrid', {\n            content: (\n              <>\n                <thead>\n                  {createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                    defaultProps: () =>\n                      getA11yProps('calendarGridRow', {\n                        children: _.times(DAYS_IN_WEEK, dayNumber =>\n                          createShorthand(DatepickerCalendarHeaderCell, calendarHeaderCell, {\n                            defaultProps: () =>\n                              getA11yProps('calendarHeaderCell', {\n                                'aria-label': days[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                content: shortDays[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                key: dayNumber,\n                              }),\n                          }),\n                        ),\n                      }),\n                  })}\n                </thead>\n                <tbody>\n                  {_.map(visibleGrid, week =>\n                    createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                      defaultProps: () =>\n                        getA11yProps('calendarGridRow', {\n                          children: renderWeekRow(week),\n                          isRowSelectionActive: dateRangeType === DateRangeType.Week,\n                          key: week[0].key,\n                        }),\n                    }),\n                  )}\n                </tbody>\n              </>\n            ),\n          }),\n      })}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, DatepickerCalendarProps> &\n  FluentComponentStaticProps<DatepickerCalendarProps>;\n\nDatepickerCalendar.displayName = 'DatepickerCalendar';\n\nDatepickerCalendar.propTypes = {\n  ...commonPropTypes.createCommon(),\n  calendarCell: customPropTypes.itemShorthand,\n  calendarCellButton: customPropTypes.itemShorthand,\n  calendarHeaderCell: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  calendarGrid: customPropTypes.itemShorthand,\n  calendarGridRow: customPropTypes.itemShorthand,\n  onDateChange: PropTypes.func,\n  selectedDate: PropTypes.instanceOf(Date),\n  navigatedDate: PropTypes.instanceOf(Date),\n\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  restrictedDates: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n\n  firstDayOfWeek: PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name])),\n  firstWeekOfYear: PropTypes.oneOf(Object.keys(FirstWeekOfYear).map(name => FirstWeekOfYear[name])),\n  dateRangeType: PropTypes.oneOf(Object.keys(DateRangeType).map(name => DateRangeType[name])),\n  daysToSelectInDayView: PropTypes.number,\n  today: PropTypes.instanceOf(Date),\n  showWeekNumbers: PropTypes.bool,\n  workWeekDays: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name]))),\n  weeksToShow: PropTypes.number,\n\n  formatDay: PropTypes.func,\n  formatYear: PropTypes.func,\n  formatMonthDayYear: PropTypes.func,\n  formatMonthYear: PropTypes.func,\n\n  parseDate: PropTypes.func,\n\n  months: PropTypes.arrayOf(PropTypes.string),\n  shortMonths: PropTypes.arrayOf(PropTypes.string),\n  days: PropTypes.arrayOf(PropTypes.string),\n  shortDays: PropTypes.arrayOf(PropTypes.string),\n\n  isRequiredErrorMessage: PropTypes.string,\n  invalidInputErrorMessage: PropTypes.string,\n  isOutOfBoundsErrorMessage: PropTypes.string,\n  openCalendarTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  prevMonthAriaLabel: PropTypes.string,\n  nextMonthAriaLabel: PropTypes.string,\n  prevYearAriaLabel: PropTypes.string,\n  nextYearAriaLabel: PropTypes.string,\n  prevYearRangeAriaLabel: PropTypes.string,\n  nextYearRangeAriaLabel: PropTypes.string,\n  monthPickerHeaderAriaLabel: PropTypes.string,\n  yearPickerHeaderAriaLabel: PropTypes.string,\n  closeButtonAriaLabel: PropTypes.string,\n  weekNumberFormatString: PropTypes.string,\n  selectedDateFormatString: PropTypes.string,\n  todayDateFormatString: PropTypes.string,\n\n  inputAriaLabel: PropTypes.string,\n  inputBoundedFormatString: PropTypes.string,\n  inputMinBoundedFormatString: PropTypes.string,\n  inputMaxBoundedFormatString: PropTypes.string,\n};\n\nDatepickerCalendar.defaultProps = {\n  accessibility: datepickerCalendarBehavior,\n  firstDayOfWeek: DayOfWeek.Monday,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateRangeType: DateRangeType.Day,\n  header: {},\n  calendarCell: {},\n  calendarCellButton: {},\n  calendarHeaderCell: {},\n  calendarGrid: {},\n  calendarGridRow: {},\n  ...DEFAULT_CALENDAR_STRINGS,\n};\n\nDatepickerCalendar.handledProps = Object.keys(DatepickerCalendar.propTypes) as any;\n"],"mappings":"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"}