{"version":3,"file":"Input.js","names":["inputBehavior","handleRef","Ref","customPropTypes","React","PropTypes","partitionHTMLProps","commonPropTypes","createShorthandFactory","createShorthand","getOrGenerateIdFromShorthand","Box","useAutoControlled","getElementType","useUnhandledProps","useTelemetry","useFluentContext","useStyles","useAccessibility","compose","ExclamationCircleIcon","CheckmarkCircleIcon","CloseIcon","InputLabel","FormFieldBaseContext","inputClassName","inputSlotClassNames","input","icon","Input","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","className","type","wrapper","disabled","fluid","inverted","inline","clearable","iconPosition","design","styles","variables","required","successIndicator","error","errorIndicator","showSuccessIndicator","label","labelPosition","inputRef","useRef","useContext","labelId","inputId","current","id","ElementType","unhandledProps","handledProps","htmlInputProps","restProps","defaultValue","value","initialValue","setValue","hasValue","length","isShowSuccessIndicatorUndefined","requiredAndSuccessful","hasIcon","mapPropsToStyles","mapPropsToInlineStyles","rtl","unstable_props","classes","resolvedStyles","getA11yProps","accessibility","debugName","actionHandlers","clear","e","stopPropagation","nativeEvent","handleOnClear","mapPropsToBehavior","handleIconOverrides","predefinedProps","onClick","focus","handleChange","newValue","computeIcon","labelElement","slots","defaultProps","htmlFor","inputElement","create","children","control","as","onChange","overrideProps","inputContainer","element","root","propTypes","createCommon","content","bool","oneOfType","string","arrayOf","itemShorthand","oneOf","shorthandAllowingChildren","func","number","wrapperShorthand","Label","Component"],"sources":["components/Input/Input.tsx"],"sourcesContent":["import { Accessibility, inputBehavior, InputBehaviorProps } from '@fluentui/accessibility';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport {\n  partitionHTMLProps,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  createShorthandFactory,\n  ShorthandFactory,\n  createShorthand,\n  getOrGenerateIdFromShorthand,\n} from '../../utils';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport { ShorthandValue, ComponentEventHandler } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  useAutoControlled,\n  getElementType,\n  useUnhandledProps,\n  useTelemetry,\n  useFluentContext,\n  useStyles,\n  useAccessibility,\n  compose,\n  ComponentWithAs,\n} from '@fluentui/react-bindings';\nimport { ExclamationCircleIcon, CheckmarkCircleIcon, CloseIcon } from '@fluentui/react-icons-northstar';\nimport { InputLabel, InputLabelProps, LabelPosition } from './InputLabel';\nimport { FormFieldBaseContext } from '../Form/utils/formFieldBaseContext';\n\nexport interface InputProps extends UIComponentProps, ChildrenComponentProps, SupportedIntrinsicInputProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<InputBehaviorProps>;\n\n  /** A property that will change the icon on the input and clear the input on click on Cancel. */\n  clearable?: boolean;\n\n  /** The default value of the input. */\n  defaultValue?: string | string[];\n\n  /** An Input can be disabled. */\n  disabled?: boolean;\n\n  /** An input can take the width of its container. */\n  fluid?: boolean;\n\n  /** Optional Icon to display inside the Input. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** An Input with icon can format the icon to appear at the start or at the end of the input field. */\n  iconPosition?: 'start' | 'end';\n\n  /** An input can be used inline with text. */\n  inline?: boolean;\n\n  /** Shorthand for the input component. */\n  input?: ShorthandValue<BoxProps>;\n\n  /** An input can have inverted colors. */\n  inverted?: boolean;\n\n  /**\n   * Called on change.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onChange?: ComponentEventHandler<InputProps & { value: string }>;\n\n  /** The HTML input type. */\n  type?: string;\n\n  /** (DEPRECATED) Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLElement>;\n\n  /** The value of the input. */\n  value?: string | number;\n\n  /** A label for the input. */\n  label?: ShorthandValue<InputLabelProps>;\n\n  /** Poisition for the label */\n  labelPosition?: LabelPosition;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n\n  /** Input can be required to be valid. */\n  required?: boolean;\n\n  /** Input can have error state */\n  error?: boolean;\n\n  /** Input can have error indicator when error is true */\n  errorIndicator?: ShorthandValue<BoxProps>;\n\n  /** Optional Icon to display inside the Input if required and fulfilled. */\n  successIndicator?: ShorthandValue<BoxProps>;\n\n  /** Indicates whether the successIndicator should be visible. */\n  showSuccessIndicator?: boolean;\n}\n\nexport interface InputSlotClassNames {\n  input: string;\n  icon: string;\n}\n\nexport const inputClassName = 'ui-input';\n\nexport type InputStylesProps = Required<\n  Pick<\n    InputProps,\n    'fluid' | 'inverted' | 'inline' | 'disabled' | 'clearable' | 'iconPosition' | 'error' | 'labelPosition'\n  > & {\n    hasIcon: boolean;\n    hasValue: boolean;\n    requiredAndSuccessful: boolean;\n  }\n>;\n\nexport const inputSlotClassNames: InputSlotClassNames = {\n  input: `${inputClassName}__input`,\n  icon: `${inputClassName}__icon`,\n};\n\n/**\n * An Input is a field used to elicit an input from a user.\n *\n * @accessibility\n * For good screen reader experience set `aria-label` or `aria-labelledby` attribute for input.\n */\nexport const Input = compose<'input', InputProps, InputStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n    const {\n      className,\n      input,\n      type,\n      wrapper,\n      disabled,\n      fluid,\n      inverted,\n      inline,\n      clearable,\n      icon,\n      iconPosition,\n      design,\n      styles,\n      variables,\n      required,\n      successIndicator,\n      error,\n      errorIndicator,\n      showSuccessIndicator,\n      label,\n      labelPosition,\n    } = props;\n\n    const inputRef = React.useRef<HTMLInputElement>();\n\n    const { labelId } = React.useContext(FormFieldBaseContext);\n    const inputId = React.useRef<string>();\n    inputId.current = props.id || getOrGenerateIdFromShorthand('ui-input-', '', inputId.current);\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const [htmlInputProps, restProps] = partitionHTMLProps(unhandledProps);\n    const [value, setValue] = useAutoControlled({\n      defaultValue: props.defaultValue,\n      value: props.value as string,\n      initialValue: '',\n    });\n    const hasValue: boolean = !!value && (value as string)?.length !== 0;\n\n    const isShowSuccessIndicatorUndefined = typeof showSuccessIndicator === 'undefined';\n\n    const requiredAndSuccessful = isShowSuccessIndicatorUndefined\n      ? ((required && hasValue) || showSuccessIndicator) && !error\n      : showSuccessIndicator;\n\n    const hasIcon = !!icon || showSuccessIndicator || (required && isShowSuccessIndicatorUndefined) || !_.isNil(error);\n\n    const { classes, styles: resolvedStyles } = useStyles<InputStylesProps>(composeOptions.displayName, {\n      className: inputClassName,\n      mapPropsToStyles: () => ({\n        fluid,\n        inverted,\n        inline,\n        disabled,\n        clearable,\n        hasIcon,\n        requiredAndSuccessful,\n        iconPosition,\n        hasValue,\n        labelPosition,\n        error,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      composeOptions,\n      unstable_props: props,\n    });\n\n    const getA11yProps = useAccessibility<InputBehaviorProps>(props.accessibility, {\n      debugName: composeOptions.displayName,\n      actionHandlers: {\n        clear: e => {\n          if (clearable && value !== '') {\n            e.stopPropagation();\n            e.nativeEvent && e.nativeEvent.stopPropagation();\n            handleOnClear(e);\n          }\n        },\n      },\n      mapPropsToBehavior: () => ({\n        disabled,\n        required,\n        error,\n      }),\n      rtl: context.rtl,\n    });\n\n    const handleIconOverrides = predefinedProps => ({\n      onClick: (e: React.MouseEvent) => {\n        if (!disabled) {\n          handleOnClear(e);\n          inputRef.current.focus();\n        }\n\n        _.invoke(predefinedProps, 'onClick', e, props);\n      },\n    });\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (disabled) {\n        return;\n      }\n\n      const newValue = _.get(e, 'target.value');\n\n      _.invoke(props, 'onChange', e, { ...props, value: newValue });\n\n      setValue(newValue);\n    };\n\n    const handleOnClear = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (clearable) {\n        _.invoke(props, 'onChange', e, { ...props, value: '' });\n        setValue('');\n      }\n    };\n\n    const computeIcon = (): ShorthandValue<BoxProps> => {\n      if (clearable && (value as string)?.length !== 0) {\n        return <CloseIcon outline />;\n      }\n      if (requiredAndSuccessful) {\n        return successIndicator;\n      }\n      if (error) {\n        return errorIndicator;\n      }\n      return icon || null;\n    };\n\n    const labelElement = createShorthand(composeOptions.slots.label, label, {\n      defaultProps: () => ({\n        labelPosition,\n        label,\n        required,\n        htmlFor: inputId.current,\n        hasValue,\n        id: labelId,\n      }),\n    });\n\n    const inputElement = Box.create(\n      {},\n      {\n        defaultProps: () => ({\n          children: (\n            <>\n              <Ref\n                innerRef={(inputElement: HTMLElement) => {\n                  handleRef(inputRef, inputElement);\n                  handleRef(props.inputRef, inputElement);\n                  handleRef(ref, inputElement);\n                }}\n              >\n                {createShorthand(composeOptions.slots.control, input || type, {\n                  defaultProps: () =>\n                    getA11yProps('input', {\n                      ...htmlInputProps,\n                      as: 'input',\n                      disabled,\n                      type,\n                      required,\n                      value: value || '',\n                      id: inputId.current,\n                      className: inputSlotClassNames.input,\n                      styles: resolvedStyles.input,\n                      onChange: handleChange,\n                    }),\n                })}\n              </Ref>\n              {createShorthand(composeOptions.slots.icon, computeIcon(), {\n                defaultProps: () =>\n                  getA11yProps('icon', {\n                    className: inputSlotClassNames.icon,\n                    styles: resolvedStyles.icon,\n                  }),\n                overrideProps: handleIconOverrides,\n              })}\n            </>\n          ),\n          styles: resolvedStyles.inputContainer,\n        }),\n      },\n    );\n\n    const element = Box.create(wrapper, {\n      defaultProps: () =>\n        getA11yProps('root', {\n          className: classes.root,\n          children: (\n            <>\n              {labelElement}\n              {inputElement}\n            </>\n          ),\n          styles: resolvedStyles.root,\n          ...restProps,\n        }),\n      overrideProps: {\n        as: (wrapper && (wrapper as any).as) || ElementType,\n      },\n    });\n    setEnd();\n    return element;\n  },\n  {\n    className: inputClassName,\n    displayName: 'Input',\n    slots: {\n      control: Box,\n      icon: Box,\n      label: InputLabel,\n    },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'design',\n      'styles',\n      'variables',\n      'clearable',\n      'defaultValue',\n      'disabled',\n      'fluid',\n      'icon',\n      'iconPosition',\n      'input',\n      'inputRef',\n      'inline',\n      'inverted',\n      'onChange',\n      'type',\n      'value',\n      'wrapper',\n      'required',\n      'successIndicator',\n      'error',\n      'errorIndicator',\n      'showSuccessIndicator',\n      'label',\n      'labelPosition',\n    ],\n  },\n) as ComponentWithAs<'input', InputProps> & {\n  create: ShorthandFactory<InputProps>;\n  Label: typeof InputLabel;\n};\n\nInput.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  clearable: PropTypes.bool,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  disabled: PropTypes.bool,\n  fluid: PropTypes.bool,\n  label: customPropTypes.itemShorthand,\n  labelPosition: PropTypes.oneOf<LabelPosition>(['inline', 'above', 'inside']),\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconPosition: PropTypes.oneOf(['start', 'end']),\n  input: customPropTypes.itemShorthand,\n  inputRef: customPropTypes.ref,\n  inline: PropTypes.bool,\n  inverted: PropTypes.bool,\n  onChange: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  wrapper: customPropTypes.wrapperShorthand,\n  required: PropTypes.bool,\n  successIndicator: customPropTypes.shorthandAllowingChildren,\n  error: PropTypes.bool,\n  errorIndicator: customPropTypes.shorthandAllowingChildren,\n  showSuccessIndicator: PropTypes.bool,\n};\n\nInput.defaultProps = {\n  accessibility: inputBehavior,\n  type: 'text',\n  wrapper: {},\n  iconPosition: 'end',\n  errorIndicator: <ExclamationCircleIcon />,\n  successIndicator: <CheckmarkCircleIcon outline />,\n};\n\nInput.Label = InputLabel;\n\nInput.create = createShorthandFactory({ Component: Input });\n"],"mappings":"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"}