import * as React from 'react';
import { imageBehavior } from '@fluentui/accessibility';
import { getElementType, useAccessibility, useFluentContext, useStyles, useTelemetry, useUnhandledProps } from '@fluentui/react-bindings';
import * as customPropTypes from '@fluentui/react-proptypes';
import { commonPropTypes, createShorthandFactory } from '../../utils';
export var avatarStatusImageClassName = 'ui-avatar__statusimage';

/**
 * A AvatarStatusImage provides a status image for the Avatar.
 */
export var AvatarStatusImage = /*#__PURE__*/function () {
  var AvatarStatusImage = /*#__PURE__*/React.forwardRef(function (props, ref) {
    var context = useFluentContext();
    var _useTelemetry = useTelemetry(AvatarStatusImage.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;
    setStart();
    var children = props.children,
      className = props.className,
      design = props.design,
      size = props.size,
      styles = props.styles,
      variables = props.variables;
    var _useStyles = useStyles(AvatarStatusImage.displayName, {
        className: avatarStatusImageClassName,
        mapPropsToStyles: function mapPropsToStyles() {
          return {
            size: size
          };
        },
        mapPropsToInlineStyles: function mapPropsToInlineStyles() {
          return {
            className: className,
            design: design,
            styles: styles,
            variables: variables
          };
        },
        rtl: context.rtl
      }),
      classes = _useStyles.classes;
    var getA11Props = useAccessibility(props.accessibility, {
      debugName: AvatarStatusImage.displayName,
      rtl: context.rtl
    });
    var ElementType = getElementType(props);
    var unhandledProps = useUnhandledProps(AvatarStatusImage.handledProps, props);
    var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({
      className: classes.root,
      ref: ref
    }, unhandledProps)), children);
    setEnd();
    return element;
  });
  AvatarStatusImage.displayName = 'AvatarStatusImage';
  AvatarStatusImage.propTypes = Object.assign({}, commonPropTypes.createCommon(), {
    size: customPropTypes.size
  });
  AvatarStatusImage.handledProps = Object.keys(AvatarStatusImage.propTypes);
  AvatarStatusImage.defaultProps = {
    accessibility: imageBehavior,
    as: 'img'
  };
  AvatarStatusImage.shorthandConfig = {
    allowsJSX: false,
    mappedProp: 'src'
  };
  AvatarStatusImage.create = createShorthandFactory({
    allowsJSX: false,
    Component: AvatarStatusImage,
    mappedProp: 'src'
  });
  return AvatarStatusImage;
}();
//# sourceMappingURL=AvatarStatusImage.js.map
