{"version":3,"file":"AvatarStatusImage.js","names":["React","imageBehavior","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","customPropTypes","commonPropTypes","createShorthandFactory","avatarStatusImageClassName","AvatarStatusImage","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","children","className","design","size","styles","variables","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","getA11Props","accessibility","debugName","ElementType","unhandledProps","handledProps","element","root","propTypes","createCommon","Object","keys","defaultProps","as","shorthandConfig","allowsJSX","mappedProp","create","Component"],"sources":["components/Avatar/AvatarStatusImage.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Accessibility, imageBehavior, ImageBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\nimport { AvatarSizeValue } from './Avatar';\n\nexport interface AvatarStatusImageProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ImageBehaviorProps>;\n\n  /** Size multiplier */\n  size?: AvatarSizeValue;\n\n  /** AvatarImage source URL. */\n  src?: string;\n}\n\nexport type AvatarStatusImageStylesProps = Required<Pick<AvatarStatusImageProps, 'size'>>;\nexport const avatarStatusImageClassName = 'ui-avatar__statusimage';\n\n/**\n * A AvatarStatusImage provides a status image for the Avatar.\n */\nexport const AvatarStatusImage = (React.forwardRef<HTMLImageElement, AvatarStatusImageProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(AvatarStatusImage.displayName, context.telemetry);\n  setStart();\n\n  const { children, className, design, size, styles, variables } = props;\n\n  const { classes } = useStyles<AvatarStatusImageStylesProps>(AvatarStatusImage.displayName, {\n    className: avatarStatusImageClassName,\n    mapPropsToStyles: () => ({\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: AvatarStatusImage.displayName,\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(AvatarStatusImage.handledProps, props);\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...unhandledProps })}>{children}</ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'img', HTMLImageElement, AvatarStatusImageProps> &\n  FluentComponentStaticProps<AvatarStatusImageProps>;\n\nAvatarStatusImage.displayName = 'AvatarStatusImage';\n\nAvatarStatusImage.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: customPropTypes.size,\n};\nAvatarStatusImage.handledProps = Object.keys(AvatarStatusImage.propTypes) as any;\nAvatarStatusImage.defaultProps = {\n  accessibility: imageBehavior,\n  as: 'img',\n};\n\nAvatarStatusImage.shorthandConfig = {\n  allowsJSX: false,\n  mappedProp: 'src',\n};\nAvatarStatusImage.create = createShorthandFactory({\n  allowsJSX: false,\n  Component: AvatarStatusImage,\n  mappedProp: 'src',\n});\n"],"mappings":"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"}