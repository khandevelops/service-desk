{"version":3,"file":"AvatarStatus.js","names":["React","useFluentContext","useTelemetry","useStyles","useAccessibility","getElementType","useUnhandledProps","commonPropTypes","createShorthandFactory","createShorthand","customPropTypes","PropTypes","statusBehavior","avatarStatusBehavior","AvatarStatusIcon","AvatarStatusImage","statusClassName","avatarStatusClassName","AvatarStatus","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","color","design","icon","image","size","state","styles","variables","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","getA11Props","accessibility","debugName","ElementType","unhandledProps","handledProps","iconElement","defaultProps","imageElement","element","root","propTypes","createCommon","children","content","string","shorthandAllowingChildren","itemShorthandWithoutJSX","oneOf","Object","keys","as","create","Component","mappedProp"],"sources":["components/Avatar/AvatarStatus.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useAccessibility,\n  getElementType,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { commonPropTypes, UIComponentProps, createShorthandFactory, createShorthand } from '../../utils';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Accessibility, statusBehavior as avatarStatusBehavior, StatusBehaviorProps } from '@fluentui/accessibility';\nimport { AvatarStatusIcon, AvatarStatusIconProps } from './AvatarStatusIcon';\nimport { AvatarStatusImage, AvatarStatusImageProps } from './AvatarStatusImage';\nimport { statusClassName } from '../Status/Status';\nimport { AvatarSizeValue } from './Avatar';\n\nexport interface AvatarStatusProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<StatusBehaviorProps>;\n\n  /** A custom color. */\n  color?: string;\n\n  /** Shorthand for the icon, to provide customizing status */\n  icon?: ShorthandValue<AvatarStatusIconProps>;\n\n  /** Shorthand for the image. */\n  image?: ShorthandValue<AvatarStatusImageProps>;\n\n  /** Size multiplier */\n  size?: AvatarSizeValue;\n\n  /** The pre-defined state values which can be consumed directly. */\n  state?: 'success' | 'info' | 'warning' | 'error' | 'unknown';\n}\n\nexport type AvatarStatusStylesProps = Required<Pick<AvatarStatusProps, 'color' | 'size' | 'state'>>;\n// update in upcoming breaking change and enable a unit test\nexport const avatarStatusClassName = statusClassName;\n\n/**\n * A AvatarStatus provides a status for the Avatar.\n */\nexport const AvatarStatus = (React.forwardRef<HTMLSpanElement, AvatarStatusProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(AvatarStatus.displayName, context.telemetry);\n  setStart();\n\n  const { className, color, design, icon, image, size, state, styles, variables } = props;\n  const { classes } = useStyles<AvatarStatusStylesProps>(AvatarStatus.displayName, {\n    className: avatarStatusClassName,\n    mapPropsToStyles: () => ({\n      color,\n      size,\n      state,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: AvatarStatus.displayName,\n    rtl: context.rtl,\n  });\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(AvatarStatus.handledProps, props);\n\n  const iconElement = createShorthand(\n    AvatarStatusIcon,\n    icon as ShorthandValue<AvatarStatusIconProps & { as: 'span' }>,\n    {\n      defaultProps: () => ({\n        size,\n        state,\n      }),\n    },\n  );\n\n  const imageElement = createShorthand(AvatarStatusImage, image, {\n    defaultProps: () =>\n      getA11Props('image', {\n        size,\n      }),\n  });\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...unhandledProps })}>\n      {imageElement || iconElement}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, AvatarStatusProps> & FluentComponentStaticProps;\n\nAvatarStatus.displayName = 'AvatarStatus';\nAvatarStatus.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  color: PropTypes.string,\n  icon: customPropTypes.shorthandAllowingChildren,\n  image: customPropTypes.itemShorthandWithoutJSX,\n  size: customPropTypes.size,\n  state: PropTypes.oneOf(['success', 'info', 'warning', 'error', 'unknown']),\n};\nAvatarStatus.handledProps = Object.keys(AvatarStatus.propTypes) as any;\nAvatarStatus.defaultProps = {\n  accessibility: avatarStatusBehavior,\n  as: 'span',\n  size: 'medium',\n  state: 'unknown',\n};\n\nAvatarStatus.create = createShorthandFactory({ Component: AvatarStatus, mappedProp: 'state' });\n"],"mappings":"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"}