{"version":3,"file":"AvatarStatusIcon.js","names":["React","useFluentContext","useTelemetry","useStyles","useAccessibility","getElementType","useUnhandledProps","PropTypes","commonPropTypes","createShorthandFactory","customPropTypes","avatarStatusIconClassName","AvatarStatusIcon","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","children","className","design","size","state","styles","variables","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","getA11Props","accessibility","debugName","ElementType","unhandledProps","handledProps","element","root","propTypes","createCommon","oneOf","Object","keys","defaultProps","as","create","Component"],"sources":["components/Avatar/AvatarStatusIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useAccessibility,\n  getElementType,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport { commonPropTypes, UIComponentProps, createShorthandFactory } from '../../utils';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { AvatarSizeValue } from './Avatar';\n\nexport interface AvatarStatusIconProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /** The pre-defined state values which can be consumed directly. */\n  state?: 'success' | 'info' | 'warning' | 'error' | 'unknown';\n\n  /** Size multiplier */\n  size?: AvatarSizeValue;\n}\n\nexport type AvatarStatusIconStylesProps = Required<Pick<AvatarStatusIconProps, 'size' | 'state'>>;\nexport const avatarStatusIconClassName = 'ui-avatar__statusicon';\n\n/**\n * A AvatarStatusIcon provides a status icon for the Avatar.\n */\nexport const AvatarStatusIcon = (React.forwardRef<HTMLSpanElement, AvatarStatusIconProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(AvatarStatusIcon.displayName, context.telemetry);\n  setStart();\n\n  const { children, className, design, size, state, styles, variables } = props;\n\n  const { classes } = useStyles<AvatarStatusIconStylesProps>(AvatarStatusIcon.displayName, {\n    className: avatarStatusIconClassName,\n    mapPropsToStyles: () => ({\n      size,\n      state,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: AvatarStatusIcon.displayName,\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(AvatarStatusIcon.handledProps, props);\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...unhandledProps })}>{children}</ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, AvatarStatusIconProps> & FluentComponentStaticProps;\n\nAvatarStatusIcon.displayName = 'AvatarStatusIcon';\nAvatarStatusIcon.propTypes = {\n  ...commonPropTypes.createCommon(),\n  size: customPropTypes.size,\n  state: PropTypes.oneOf(['success', 'info', 'warning', 'error', 'unknown']),\n};\nAvatarStatusIcon.handledProps = Object.keys(AvatarStatusIcon.propTypes) as any;\nAvatarStatusIcon.defaultProps = {\n  as: 'span',\n};\n\nAvatarStatusIcon.create = createShorthandFactory({ Component: AvatarStatusIcon });\n"],"mappings":"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"}