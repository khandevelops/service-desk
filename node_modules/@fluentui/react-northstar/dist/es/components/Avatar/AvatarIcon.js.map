{"version":3,"file":"AvatarIcon.js","names":["React","useFluentContext","useTelemetry","useStyles","useAccessibility","getElementType","useUnhandledProps","customPropTypes","PropTypes","commonPropTypes","childrenExist","avatarIconClassName","AvatarIcon","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","children","design","styles","variables","size","square","content","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","getA11Props","accessibility","debugName","ElementType","unhandledProps","handledProps","element","root","propTypes","createCommon","bool","Object","keys","defaultProps","as","shorthandConfig","mappedProp"],"sources":["components/Avatar/AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useAccessibility,\n  getElementType,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport {\n  commonPropTypes,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  childrenExist,\n} from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { AvatarSizeValue } from './Avatar';\n\nexport interface AvatarIconProps extends UIComponentProps, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /** The avatar icon can have a square shape. */\n  square?: boolean;\n\n  /** Size multiplier. */\n  size?: AvatarSizeValue;\n}\n\nexport type AvatarIconStylesProps = Required<Pick<AvatarIconProps, 'size' | 'square'>>;\nexport const avatarIconClassName = 'ui-avatar__icon';\n\n/**\n * A AvatarIcon provides a status icon for the Avatar.\n */\nexport const AvatarIcon = (React.forwardRef<HTMLSpanElement, AvatarIconProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(AvatarIcon.displayName, context.telemetry);\n  setStart();\n\n  const { className, children, design, styles, variables, size, square, content } = props;\n\n  const { classes } = useStyles<AvatarIconStylesProps>(AvatarIcon.displayName, {\n    className: avatarIconClassName,\n    mapPropsToStyles: () => ({\n      size,\n      square,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: AvatarIcon.displayName,\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(AvatarIcon.handledProps, props);\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...unhandledProps })}>\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, AvatarIconProps> &\n  FluentComponentStaticProps<AvatarIconProps>;\n\nAvatarIcon.displayName = 'AvatarIcon';\nAvatarIcon.propTypes = {\n  ...commonPropTypes.createCommon(),\n  square: PropTypes.bool,\n  size: customPropTypes.size,\n};\nAvatarIcon.handledProps = Object.keys(AvatarIcon.propTypes) as any;\nAvatarIcon.defaultProps = {\n  as: 'span',\n};\n\nAvatarIcon.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"mappings":"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"}