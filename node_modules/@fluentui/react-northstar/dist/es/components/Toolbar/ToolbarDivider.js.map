{"version":3,"file":"ToolbarDivider.js","names":["getElementType","mergeVariablesOverrides","useUnhandledProps","useAccessibility","useStyles","useFluentContext","useTelemetry","compose","React","commonPropTypes","ToolbarVariablesContext","toolbarDividerClassName","ToolbarDivider","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","className","design","styles","variables","parentVariables","useContext","getA11yProps","debugName","rtl","mapPropsToInlineStyles","unstable_props","classes","ElementType","unhandledProps","handledProps","element","root","shorthandConfig","mappedProp","propTypes","createCommon"],"sources":["components/Toolbar/ToolbarDivider.tsx"],"sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  mergeVariablesOverrides,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  compose,\n} from '@fluentui/react-bindings';\nimport * as React from 'react';\n\nimport { ChildrenComponentProps, ContentComponentProps, UIComponentProps, commonPropTypes } from '../../utils';\nimport { ToolbarVariablesContext } from './toolbarVariablesContext';\n\nexport interface ToolbarDividerProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport type ToolbarDividerStylesProps = never;\nexport const toolbarDividerClassName = 'ui-toolbar__divider';\n\n/**\n * A ToolbarDivider is a non-actionable element that visually segments Toolbar items.\n */\nexport const ToolbarDivider = compose<'div', ToolbarDividerProps, ToolbarDividerStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const { accessibility, className, design, styles, variables } = props;\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarDividerStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergeVariablesOverrides(parentVariables, variables),\n      }),\n      rtl: context.rtl,\n      composeOptions,\n      unstable_props: props,\n    });\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const element = <ElementType {...getA11yProps('root', { ref, ...unhandledProps, className: classes.root })} />;\n    setEnd();\n\n    return element;\n  },\n  {\n    displayName: 'ToolbarDivider',\n    className: toolbarDividerClassName,\n\n    shorthandConfig: {\n      mappedProp: 'content',\n    },\n    handledProps: ['accessibility', 'as', 'children', 'className', 'content', 'styles', 'variables', 'design'],\n  },\n);\n\nToolbarDivider.propTypes = commonPropTypes.createCommon();\n"],"mappings":"AACA,SACEA,cAAc,EACdC,uBAAuB,EACvBC,iBAAiB,EACjBC,gBAAgB,EAChBC,SAAS,EACTC,gBAAgB,EAChBC,YAAY,EACZC,OAAO,QACF,0BAA0B;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAA0EC,eAAe,QAAQ,aAAa;AAC9G,SAASC,uBAAuB,QAAQ,2BAA2B;AAUnE,OAAO,IAAMC,uBAAuB,GAAG,qBAAqB;;AAE5D;AACA;AACA;AACA,OAAO,IAAMC,cAAc;EAAA,IAAdA,cAAc,GAAGL,OAAO,CACnC,UAACM,KAAK,EAAEC,GAAG,EAAEC,cAAc,EAAK;IAC9B,IAAMC,OAAO,GAAGX,gBAAgB,EAAE;IAClC,oBAA6BC,YAAY,CAACS,cAAc,CAACE,WAAW,EAAED,OAAO,CAACE,SAAS,CAAC;MAAhFC,QAAQ,iBAARA,QAAQ;MAAEC,MAAM,iBAANA,MAAM;IACxBD,QAAQ,EAAE;IAEV,IAAQE,aAAa,GAA2CR,KAAK,CAA7DQ,aAAa;MAAEC,SAAS,GAAgCT,KAAK,CAA9CS,SAAS;MAAEC,MAAM,GAAwBV,KAAK,CAAnCU,MAAM;MAAEC,MAAM,GAAgBX,KAAK,CAA3BW,MAAM;MAAEC,SAAS,GAAKZ,KAAK,CAAnBY,SAAS;IAC3D,IAAMC,eAAe,GAAGlB,KAAK,CAACmB,UAAU,CAACjB,uBAAuB,CAAC;IAEjE,IAAMkB,YAAY,GAAGzB,gBAAgB,CAACkB,aAAa,EAAE;MACnDQ,SAAS,EAAEd,cAAc,CAACE,WAAW;MACrCa,GAAG,EAAEd,OAAO,CAACc;IACf,CAAC,CAAC;IACF,iBAAoB1B,SAAS,CAA4BW,cAAc,CAACE,WAAW,EAAE;QACnFK,SAAS,EAAEP,cAAc,CAACO,SAAS;QACnCS,sBAAsB,EAAE;UAAA,OAAO;YAC7BT,SAAS,EAATA,SAAS;YACTC,MAAM,EAANA,MAAM;YACNC,MAAM,EAANA,MAAM;YACNC,SAAS,EAAExB,uBAAuB,CAACyB,eAAe,EAAED,SAAS;UAC/D,CAAC;QAAA,CAAC;QACFK,GAAG,EAAEd,OAAO,CAACc,GAAG;QAChBf,cAAc,EAAdA,cAAc;QACdiB,cAAc,EAAEnB;MAClB,CAAC,CAAC;MAXMoB,OAAO,cAAPA,OAAO;IAaf,IAAMC,WAAW,GAAGlC,cAAc,CAACa,KAAK,CAAC;IACzC,IAAMsB,cAAc,GAAGjC,iBAAiB,CAACa,cAAc,CAACqB,YAAY,EAAEvB,KAAK,CAAC;IAE5E,IAAMwB,OAAO,gBAAG,oBAAC,WAAW,EAAKT,YAAY,CAAC,MAAM;MAAId,GAAG,EAAHA;IAAG,GAAKqB,cAAc;MAAEb,SAAS,EAAEW,OAAO,CAACK;IAAI,GAAG,CAAI;IAC9GlB,MAAM,EAAE;IAER,OAAOiB,OAAO;EAChB,CAAC,EACD;IACEpB,WAAW,EAAE,gBAAgB;IAC7BK,SAAS,EAAEX,uBAAuB;IAElC4B,eAAe,EAAE;MACfC,UAAU,EAAE;IACd,CAAC;IACDJ,YAAY,EAAE,CAAC,eAAe,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ;EAC3G,CAAC,CACF;EAEDxB,cAAc,CAAC6B,SAAS,GAAGhC,eAAe,CAACiC,YAAY,EAAE;EAAC,OA7C7C9B,cAAc;AAAA"}