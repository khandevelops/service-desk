{"version":3,"file":"ToolbarMenuItem.js","names":["toolbarMenuItemBehavior","indicatorBehavior","React","cx","PropTypes","EventListener","Ref","customPropTypes","compose","focusAsync","mergeVariablesOverrides","useTelemetry","useStyles","useAutoControlled","useFluentContext","getElementType","useUnhandledProps","useAccessibility","useContextSelectors","Unstable_NestingAuto","createShorthand","commonPropTypes","childrenExist","doesNodeContainClick","partitionPopperPropsFromShorthand","Popper","Box","Popup","ToolbarMenu","ToolbarMenuItemIcon","ToolbarVariablesContext","ToolbarVariablesProvider","ToolbarMenuItemSubmenuIndicator","ToolbarMenuItemActiveIndicator","ToolbarMenuContext","ToolbarMenuItemContent","ChevronEndIcon","toolbarMenuItemClassName","toolbarMenuItemSlotClassNames","wrapper","submenu","ToolbarMenuItem","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","active","activeIndicator","children","content","disabled","disabledFocusable","submenuIndicator","icon","popup","inSubmenu","className","design","styles","variables","menu","menuPositioningProps","defaultValue","defaultMenuOpen","value","menuOpen","initialValue","setMenuOpen","itemRef","useRef","menuRef","menuSlot","v","slots","parentVariables","useContext","mergedVariables","ElementType","slotProps","resolveSlotProps","unhandledProps","handledProps","getA11yProps","accessibility","debugName","mapPropsToBehavior","hasMenu","actionHandlers","performClick","event","preventDefault","handleClick","openMenu","closeAllMenusAndFocusNextParentItem","closeAllMenus","closeMenu","closeMenuAndFocusTrigger","doNotNavigateNextParentItem","stopPropagation","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","unstable_props","classes","resolvedStyles","e","trySetMenuOpen","isSubmenuOpen","current","newValue","onStateChanged","outsideClickHandler","getRefs","isItemClick","target","isNestedClick","childRef","isInside","handleMenuOverrides","predefinedProps","onItemClick","itemProps","element","root","onClick","defaultProps","hasChildren","popupElement","onOpenChange","overrideProps","trigger","undefined","menuItemInner","maybeSubmenu","nestingRef","node","wrapperElement","create","trapFocus","shorthandConfig","mappedProp","propTypes","createCommon","bool","shorthandAllowingChildren","index","number","oneOfType","itemShorthand","collectionShorthand","func","onMenuOpenChange","shape","never","string","as"],"sources":["components/Toolbar/ToolbarMenuItem.tsx"],"sourcesContent":["import {\n  Accessibility,\n  toolbarMenuItemBehavior,\n  ToolbarMenuItemBehaviorProps,\n  indicatorBehavior,\n} from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport * as PropTypes from 'prop-types';\n\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport {\n  compose,\n  focusAsync,\n  mergeVariablesOverrides,\n  useTelemetry,\n  useStyles,\n  useAutoControlled,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useContextSelectors,\n} from '@fluentui/react-bindings';\n\nimport { GetRefs, NodeRef, Unstable_NestingAuto } from '@fluentui/react-component-nesting-registry';\n\nimport {\n  createShorthand,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  UIComponentProps,\n  childrenExist,\n  doesNodeContainClick,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection } from '../../types';\nimport { partitionPopperPropsFromShorthand, Popper, PopperShorthandProps } from '../../utils/positioner';\n\nimport { Box, BoxProps } from '../Box/Box';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { ToolbarMenu, ToolbarMenuProps, ToolbarMenuItemShorthandKinds } from './ToolbarMenu';\nimport { ToolbarMenuItemIcon, ToolbarMenuItemIconProps } from './ToolbarMenuItemIcon';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\nimport { ToolbarMenuItemSubmenuIndicator } from './ToolbarMenuItemSubmenuIndicator';\nimport { ToolbarMenuItemActiveIndicator } from './ToolbarMenuItemActiveIndicator';\nimport { ToolbarItemSubscribedValue, ToolbarMenuContext } from './toolbarMenuContext';\nimport { ToolbarMenuItemContent } from './ToolbarMenuItemContent';\nimport { ChevronEndIcon } from '@fluentui/react-icons-northstar';\n\nexport interface ToolbarMenuItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuItemBehaviorProps>;\n\n  /** A toolbar item can be active. */\n  active?: boolean;\n\n  /** A slot for a selected indicator in the dropdown list. */\n  activeIndicator?: ShorthandValue<BoxProps>;\n\n  /** A toolbar item can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** A toolbar item can be disabled and focusable at the same time. */\n  disabledFocusable?: boolean;\n\n  /** Name or shorthand for Toolbar Item Icon */\n  icon?: ShorthandValue<ToolbarMenuItemIconProps>;\n\n  /** ToolbarMenuItem index inside ToolbarMenu. */\n  index?: number;\n\n  /** Shorthand for the submenu indicator. */\n  submenuIndicator?: ShorthandValue<BoxProps>;\n\n  /** Indicates whether the menu item is part of submenu. */\n  inSubmenu?: boolean;\n\n  /** Shorthand for the submenu. */\n  menu?:\n    | ShorthandValue<ToolbarMenuProps & { popper?: PopperShorthandProps }>\n    | ShorthandCollection<ToolbarMenuItemProps, ToolbarMenuItemShorthandKinds>;\n\n  /** Indicates if the menu inside the item is open. */\n  menuOpen?: boolean;\n\n  /** Default menu open */\n  defaultMenuOpen?: boolean;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /**\n   * Called when the menu inside the item opens or closes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `menuOpen` reflecting the new state.\n   */\n  onMenuOpenChange?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /**\n   * Attaches a `Popup` component to the ToolbarMenuItem.\n   * Accepts all props as a `Popup`, except `trigger` and `children`.\n   * Traps focus by default.\n   * @see PopupProps\n   */\n  popup?: Omit<PopupProps, 'trigger' | 'children'> | string;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n}\n\nexport type ToolbarMenuItemStylesProps = Pick<ToolbarMenuItemProps, 'disabled' | 'disabledFocusable'> & {\n  hasContent: boolean;\n};\n\nexport interface ToolbarMenuItemSlotClassNames {\n  wrapper: string;\n  submenu: string;\n}\n\nexport const toolbarMenuItemClassName = 'ui-toolbar__menuitem';\nexport const toolbarMenuItemSlotClassNames: ToolbarMenuItemSlotClassNames = {\n  wrapper: `${toolbarMenuItemClassName}__wrapper`,\n  submenu: `${toolbarMenuItemClassName}__submenu`,\n};\n\n/**\n * A ToolbarMenuItem renders ToolbarMenu item as button.\n */\nexport const ToolbarMenuItem = compose<'button', ToolbarMenuItemProps, ToolbarMenuItemStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      active,\n      activeIndicator,\n      children,\n      content,\n      disabled,\n      disabledFocusable,\n      submenuIndicator,\n      icon,\n      popup,\n      wrapper,\n      inSubmenu,\n      className,\n      design,\n      styles,\n      variables,\n    } = props;\n    const [menu, menuPositioningProps] = partitionPopperPropsFromShorthand(props.menu);\n\n    const [menuOpen, setMenuOpen] = useAutoControlled({\n      defaultValue: props.defaultMenuOpen,\n      value: props.menuOpen,\n      initialValue: false,\n    });\n\n    const itemRef = React.useRef<HTMLElement>();\n    const menuRef = React.useRef<HTMLElement>();\n\n    const { menuSlot } = (useContextSelectors(ToolbarMenuContext, {\n      menuSlot: v => v.slots.menu,\n    }) as unknown) as ToolbarItemSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const ElementType = getElementType(props);\n    const slotProps = composeOptions.resolveSlotProps<ToolbarMenuItemProps>(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const getA11yProps = useAccessibility(props.accessibility, {\n      debugName: composeOptions.displayName,\n      mapPropsToBehavior: () => ({\n        hasMenu: !!menu,\n        active,\n        menuOpen,\n        disabled,\n        disabledFocusable,\n        'aria-label': props['aria-label'],\n        'aria-labelledby': props['aria-labelledby'],\n        'aria-describedby': props['aria-describedby'],\n      }),\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n        openMenu: event => openMenu(event),\n        closeAllMenusAndFocusNextParentItem: event => closeAllMenus(event),\n        closeMenu: event => closeMenu(event),\n        closeMenuAndFocusTrigger: event => closeMenu(event),\n        doNotNavigateNextParentItem: event => {\n          event.stopPropagation();\n        },\n        closeAllMenus: event => closeAllMenus(event),\n      },\n      rtl: context.rtl,\n    });\n\n    const { classes, styles: resolvedStyles } = useStyles<ToolbarMenuItemStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        disabled,\n        disabledFocusable,\n        hasContent: !!content,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const openMenu = (e: React.KeyboardEvent) => {\n      if (menu && !menuOpen) {\n        trySetMenuOpen(true, e);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n\n    const closeMenu = (e: React.KeyboardEvent) => {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n\n      trySetMenuOpen(false, e, () => {\n        focusAsync(itemRef.current);\n      });\n\n      e.stopPropagation();\n    };\n\n    const closeAllMenus = (e: React.KeyboardEvent) => {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n      trySetMenuOpen(false, e, () => {\n        if (!inSubmenu) {\n          focusAsync(itemRef.current);\n        }\n      });\n\n      // avoid spacebar scrolling the page\n      if (!inSubmenu) {\n        e.preventDefault();\n      }\n    };\n\n    const isSubmenuOpen = (): boolean => {\n      return !!(menu && menuOpen);\n    };\n\n    const trySetMenuOpen = (newValue: boolean, e: Event | React.SyntheticEvent, onStateChanged?: any) => {\n      setMenuOpen(newValue);\n      // The reason why post-effect is not passed as callback to trySetState method\n      // is that in 'controlled' mode the post-effect is applied before final re-rendering\n      // which cause a broken behavior: for e.g. when it is needed to focus submenu trigger on ESC.\n      // TODO: all DOM post-effects should be applied at componentDidMount & componentDidUpdated stages.\n      onStateChanged && onStateChanged();\n      _.invoke(props, 'onMenuOpenChange', e, {\n        ...props,\n        menuOpen: newValue,\n      });\n    };\n\n    const outsideClickHandler = (getRefs: GetRefs) => (e: MouseEvent) => {\n      const isItemClick = doesNodeContainClick(itemRef.current, e, context.target);\n      const isNestedClick = _.some(getRefs(), (childRef: NodeRef) => {\n        return doesNodeContainClick(childRef.current as HTMLElement, e, context.target);\n      });\n      const isInside = isItemClick || isNestedClick;\n\n      if (!isInside) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    const handleMenuOverrides = (predefinedProps: ToolbarMenuProps) => ({\n      onItemClick: (e, itemProps: ToolbarMenuItemProps) => {\n        const { popup, menuOpen } = itemProps;\n        _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n        if (popup) {\n          return;\n        }\n\n        trySetMenuOpen(menuOpen, e);\n        if (!menuOpen) {\n          _.invoke(itemRef.current, 'focus');\n        }\n      },\n    });\n\n    const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (menu) {\n        // the menuItem element was clicked => toggle the open/close and stop propagation\n        trySetMenuOpen(!menuOpen, e);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      if (popup) {\n        e.stopPropagation();\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          onClick: handleClick,\n          disabled,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? (\n          children\n        ) : (\n          <>\n            {createShorthand(composeOptions.slots.icon, icon, { defaultProps: () => slotProps.icon })}\n            {createShorthand(composeOptions.slots.content, content, {\n              defaultProps: () => getA11yProps('content', slotProps.content),\n            })}\n            {active &&\n              createShorthand(composeOptions.slots.activeIndicator, activeIndicator, {\n                defaultProps: () => slotProps.activeIndicator,\n              })}\n            {menu &&\n              createShorthand(composeOptions.slots.submenuIndicator, submenuIndicator, {\n                defaultProps: () => slotProps.submenuIndicator,\n              })}\n          </>\n        )}\n      </ElementType>\n    );\n\n    const hasChildren = childrenExist(children);\n\n    if (popup && !hasChildren) {\n      const popupElement = createShorthand(composeOptions.slots.popup, popup, {\n        defaultProps: () => ({\n          ...slotProps.popup,\n          onOpenChange: e => {\n            e.stopPropagation();\n          },\n        }),\n        overrideProps: {\n          trigger: element,\n          children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger`\n        },\n      });\n      setEnd();\n\n      return popupElement;\n    }\n\n    const menuItemInner = hasChildren ? (children as React.ReactElement) : <Ref innerRef={itemRef}>{element}</Ref>;\n\n    const maybeSubmenu =\n      menu && menuOpen ? (\n        <Unstable_NestingAuto>\n          {(getRefs, nestingRef) => {\n            return (\n              <>\n                <Ref\n                  innerRef={(node: HTMLElement) => {\n                    nestingRef.current = node;\n                    menuRef.current = node;\n                  }}\n                >\n                  <Popper\n                    align=\"top\"\n                    position={context.rtl ? 'before' : 'after'}\n                    targetRef={itemRef}\n                    {...menuPositioningProps}\n                  >\n                    <ToolbarVariablesProvider value={mergedVariables}>\n                      {createShorthand(composeOptions.slots.menu || menuSlot || ToolbarMenu, menu, {\n                        defaultProps: () => ({\n                          className: toolbarMenuItemSlotClassNames.submenu,\n                          styles: resolvedStyles.menu,\n                          submenu: true,\n                          submenuIndicator,\n                          ...slotProps.menu,\n                        }),\n                        overrideProps: handleMenuOverrides,\n                      })}\n                    </ToolbarVariablesProvider>\n                  </Popper>\n                </Ref>\n                <EventListener\n                  capture={true}\n                  listener={outsideClickHandler(getRefs)}\n                  target={context.target}\n                  type=\"click\"\n                />\n              </>\n            );\n          }}\n        </Unstable_NestingAuto>\n      ) : null;\n\n    if (!wrapper) {\n      setEnd();\n      return menuItemInner;\n    }\n\n    const wrapperElement = Box.create(wrapper, {\n      defaultProps: () =>\n        getA11yProps('wrapper', {\n          className: cx(toolbarMenuItemSlotClassNames.wrapper, classes.wrapper),\n        }),\n      overrideProps: () => ({\n        children: (\n          <>\n            {menuItemInner}\n            {maybeSubmenu}\n          </>\n        ),\n      }),\n    });\n    setEnd();\n\n    return wrapperElement;\n  },\n  {\n    className: toolbarMenuItemClassName,\n    displayName: 'ToolbarMenuItem',\n\n    slots: {\n      icon: ToolbarMenuItemIcon,\n      submenuIndicator: ToolbarMenuItemSubmenuIndicator,\n      activeIndicator: ToolbarMenuItemActiveIndicator,\n      popup: Popup,\n      content: ToolbarMenuItemContent,\n    },\n    slotProps: props => ({\n      icon: {\n        hasContent: !!props.content,\n      },\n      submenuIndicator: {\n        accessibility: indicatorBehavior,\n      },\n      activeIndicator: {\n        accessibility: indicatorBehavior,\n      },\n      popup: {\n        trapFocus: true,\n      },\n      content: {},\n    }),\n\n    shorthandConfig: {\n      mappedProp: 'content',\n    },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n      'disabledFocusable',\n      'active',\n      'activeIndicator',\n      'defaultMenuOpen',\n      'disabled',\n      'icon',\n      'index',\n      'submenuIndicator',\n      'inSubmenu',\n      'menu',\n      'menuOpen',\n      'onClick',\n      'onMenuOpenChange',\n      'popup',\n      'wrapper',\n    ],\n  },\n);\n\nToolbarMenuItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  activeIndicator: customPropTypes.shorthandAllowingChildren,\n  defaultMenuOpen: PropTypes.bool,\n  disabled: PropTypes.bool,\n  disabledFocusable: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  index: PropTypes.number,\n  submenuIndicator: customPropTypes.shorthandAllowingChildren,\n  inSubmenu: PropTypes.bool,\n  menu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  menuOpen: PropTypes.bool,\n  onClick: PropTypes.func,\n  onMenuOpenChange: PropTypes.func,\n  popup: PropTypes.oneOfType([\n    PropTypes.shape({\n      ...Popup.propTypes,\n      trigger: customPropTypes.never,\n      children: customPropTypes.never,\n    }),\n    PropTypes.string,\n  ]),\n  wrapper: customPropTypes.itemShorthand,\n};\nToolbarMenuItem.defaultProps = {\n  as: 'button',\n  accessibility: toolbarMenuItemBehavior,\n  activeIndicator: {},\n  submenuIndicator: <ChevronEndIcon outline />,\n  wrapper: { as: 'li' },\n};\n"],"mappings":"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"}