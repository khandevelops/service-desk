{"version":3,"file":"Toolbar.js","names":["toolbarBehavior","toggleButtonBehavior","IS_FOCUSABLE_ATTRIBUTE","compose","getElementType","getFirstFocusable","useFluentContext","useAccessibility","useStyles","useTelemetry","useUnhandledProps","EventListener","handleRef","Ref","MoreIcon","customPropTypes","PropTypes","React","childrenExist","createShorthand","commonPropTypes","ToolbarCustomItem","ToolbarDivider","ToolbarItem","ToolbarItemWrapper","ToolbarItemIcon","ToolbarMenu","ToolbarMenuDivider","ToolbarMenuItem","ToolbarMenuRadioGroup","ToolbarMenuRadioGroupWrapper","ToolbarRadioGroup","ToolbarVariablesProvider","ToolbarMenuItemSubmenuIndicator","ToolbarMenuItemIcon","ToolbarMenuItemActiveIndicator","ToolbarMenuContextProvider","Box","WAS_FOCUSABLE_ATTRIBUTE","toolbarClassName","Toolbar","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","className","children","design","getOverflowItems","items","overflow","overflowItem","overflowOpen","overflowSentinel","styles","variables","overflowContainerRef","useRef","overflowItemWrapperRef","overflowSentinelRef","offsetMeasureRef","containerRef","lastVisibleItemIndex","animationFrameId","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","ElementType","slotProps","resolveSlotProps","unhandledProps","handledProps","hide","el","style","visibility","target","activeElement","contains","current","firstFocusableItem","firstElementChild","focus","wasFocusable","getAttribute","setAttribute","show","removeAttribute","isItemOverflowing","itemBoundingRect","containerBoundingRect","right","left","wouldItemCollide","$item","overflowItemBoundingRect","actualWindow","defaultView","wouldCollide","itemLeftMargin","parseFloat","getComputedStyle","marginLeft","width","itemRightMargin","marginRight","setOverflowPosition","$overflowItem","$lastVisibleItem","lastVisibleItemRect","absolutePositioningOffset","lastVisibleItemMarginLeft","horizontal","lastVisibleItemRightMargin","hideOverflowItems","$overflowContainer","$overflowSentinel","$offsetMeasure","scrollTo","Number","MAX_SAFE_INTEGER","scrollTop","scrollLeft","$items","overflowContainerBoundingRect","getBoundingClientRect","offsetMeasureBoundingRect","vertical","top","isOverflowing","i","position","length","collectOverflowItems","slice","getVisibleItems","end","handleWindowResize","e","renderItems","item","kind","slots","divider","defaultProps","group","toggle","customItem","renderOverflowItem","overrideProps","predefinedProps","menu","popper","positionFixed","menuOpen","onMenuOpenChange","wrapper","renderOverflowSentinel","element","create","id","useEffect","cancelAnimationFrame","requestAnimationFrame","undefined","node","unstable_wrapWithFocusZone","root","overflowContainer","offsetMeasure","icon","shorthandConfig","mappedProp","propTypes","createCommon","collectionShorthandWithKindProp","bool","shorthandAllowingChildren","onOverflow","func","onOverflowOpenChange","CustomItem","Divider","Item","ItemWrapper","ItemIcon","Menu","MenuDivider","MenuItem","MenuItemIcon","MenuItemSubmenuIndicator","MenuItemActiveIndicator","MenuRadioGroup","MenuRadioGroupWrapper","RadioGroup"],"sources":["components/Toolbar/Toolbar.tsx"],"sourcesContent":["import {\n  Accessibility,\n  toolbarBehavior,\n  ToolbarBehaviorProps,\n  toggleButtonBehavior,\n  IS_FOCUSABLE_ATTRIBUTE,\n} from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  compose,\n  getElementType,\n  getFirstFocusable,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport { MoreIcon } from '@fluentui/react-icons-northstar';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ComponentEventHandler, ShorthandCollection, ShorthandValue, ObjectShorthandValue } from '../../types';\nimport {\n  childrenExist,\n  createShorthand,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n} from '../../utils';\nimport { ToolbarCustomItem, ToolbarCustomItemProps } from './ToolbarCustomItem';\nimport { ToolbarDivider, ToolbarDividerProps } from './ToolbarDivider';\nimport { ToolbarItem, ToolbarItemProps } from './ToolbarItem';\nimport { ToolbarItemWrapper } from './ToolbarItemWrapper';\nimport { ToolbarItemIcon } from './ToolbarItemIcon';\nimport { ToolbarMenu, ToolbarMenuProps } from './ToolbarMenu';\nimport { ToolbarMenuDivider } from './ToolbarMenuDivider';\nimport { ToolbarMenuItem } from './ToolbarMenuItem';\nimport { ToolbarMenuRadioGroup, ToolbarMenuRadioGroupProps } from './ToolbarMenuRadioGroup';\nimport { ToolbarMenuRadioGroupWrapper } from './ToolbarMenuRadioGroupWrapper';\nimport { ToolbarRadioGroup } from './ToolbarRadioGroup';\nimport { ToolbarVariablesProvider } from './toolbarVariablesContext';\nimport { ToolbarMenuItemSubmenuIndicator } from './ToolbarMenuItemSubmenuIndicator';\nimport { ToolbarMenuItemIcon } from './ToolbarMenuItemIcon';\nimport { ToolbarMenuItemActiveIndicator } from './ToolbarMenuItemActiveIndicator';\nimport { ToolbarMenuContextProvider } from './toolbarMenuContext';\nimport { PopperShorthandProps } from '../../utils/positioner';\nimport { BoxProps, Box } from '../Box/Box';\n\nexport type ToolbarItemShorthandKinds = {\n  item: ToolbarItemProps;\n  divider: ToolbarDividerProps;\n  group: ToolbarMenuRadioGroupProps;\n  toggle: ToolbarItemProps;\n  custom: ToolbarCustomItemProps;\n};\n\ntype PositionOffset = {\n  vertical: number;\n  horizontal: number;\n};\n\nconst WAS_FOCUSABLE_ATTRIBUTE = 'data-was-focusable';\n\ntype ToolbarOverflowItemProps = Omit<ToolbarItemProps, 'menu'> & {\n  menu?: ObjectShorthandValue<ToolbarMenuProps & { popper?: PopperShorthandProps }>;\n};\n\nexport interface ToolbarProps\n  extends UIComponentProps,\n    ContentComponentProps,\n    ChildrenComponentProps,\n    ColorComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ToolbarBehaviorProps>;\n\n  /** Shorthand array of props for Toolbar. */\n  items?: ShorthandCollection<ToolbarItemProps, ToolbarItemShorthandKinds>;\n\n  /**\n   *  Automatically move overflow items to overflow menu.\n   *  For automatic overflow to work correctly, toolbar items including overflowMenuItem\n   *  must NOT change their size! If you need to change item's size, rerender the Toolbar.\n   */\n  overflow?: boolean;\n\n  /** Indicates if the overflow menu is open. Only valid if `overflow` is enabled and regular items do not fit. */\n  overflowOpen?: boolean;\n\n  /**\n   * Shorthand for the overflow item which is displayed when `overflow` is enabled and regular toolbar items do not fit.\n   * Do not set any menu on this item, Toolbar overrides it.\n   */\n  overflowItem?: ShorthandValue<ToolbarOverflowItemProps>;\n\n  /**\n   * Renders a sentinel node when the overflow menu is open to stop the width of the toolbar changing\n   * Only needed if the container hosting the toolbar does not have a fixed/min width\n   *\n   * @default null\n   */\n  overflowSentinel?: ShorthandValue<BoxProps>;\n\n  /**\n   * Called when overflow is recomputed (after render, update or window resize). Even if all items fit.\n   * @param itemsVisible - number of items visible\n   */\n  onOverflow?: (itemsVisible: number) => void;\n\n  /**\n   * Event for request to change 'overflowOpen' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOverflowOpenChange?: ComponentEventHandler<ToolbarProps>;\n\n  /**\n   * Callback to get items to be rendered in overflow menu.\n   * Called when overflow menu is rendered opened.\n   * @param startIndex - Index of the first item to be displayed in the overflow menu (the first item which does not fit the toolbar).\n   */\n  getOverflowItems?: (startIndex: number) => ToolbarItemProps['menu'];\n}\n\nexport type ToolbarStylesProps = Pick<ToolbarProps, 'overflowOpen'>;\n\nexport const toolbarClassName = 'ui-toolbar';\n\n/**\n * A Toolbar is a container for grouping a set of controls, often action controls (e.g. buttons) or input controls (e.g. checkboxes).\n *\n * @accessibility\n *  * Implements [ARIA Toolbar](https://www.w3.org/TR/wai-aria-practices-1.1/#toolbar) design pattern.\n * @accessibilityIssues\n * [Issue 988424: VoiceOver narrates selected for button in toolbar](https://bugs.chromium.org/p/chromium/issues/detail?id=988424)\n * [In toolbars that can toggle items in a menu, VoiceOver narrates \"1\" for menuitemcheckbox/radio when checked.](https://github.com/microsoft/fluentui/issues/14064)\n * [NVDA could narrate \"checked\" stated for radiogroup in toolbar #12678](https://github.com/nvaccess/nvda/issues/12678)\n * [JAWS narrates wrong instruction message for radiogroup in toolbar #556](https://github.com/FreedomScientific/VFO-standards-support/issues/556)\n * [JAWS could narrate \"checked\" stated for radiogroup in toolbar #557](https://github.com/FreedomScientific/VFO-standards-support/issues/557)\n */\nexport const Toolbar = compose<'div', ToolbarProps, ToolbarStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      className,\n      children,\n      design,\n      getOverflowItems,\n      items,\n      overflow,\n      overflowItem,\n      overflowOpen,\n      overflowSentinel,\n      styles,\n      variables,\n    } = props;\n\n    const overflowContainerRef = React.useRef<HTMLDivElement>();\n    const overflowItemWrapperRef = React.useRef<HTMLElement>();\n    const overflowSentinelRef = React.useRef<HTMLDivElement>();\n    const offsetMeasureRef = React.useRef<HTMLDivElement>();\n    const containerRef = React.useRef<HTMLElement>();\n\n    // index of the last visible item in Toolbar, the rest goes to overflow menu\n    const lastVisibleItemIndex = React.useRef<number>();\n    const animationFrameId = React.useRef<number>();\n\n    const getA11Props = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n    const { classes } = useStyles<ToolbarStylesProps>(composeOptions.displayName, {\n      className: toolbarClassName,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        overflowOpen,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const ElementType = getElementType(props);\n    const slotProps = composeOptions.resolveSlotProps<ToolbarProps>(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const hide = (el: HTMLElement) => {\n      if (el.style.visibility === 'hidden') {\n        return;\n      }\n\n      if (context.target.activeElement === el || el.contains(context.target.activeElement)) {\n        if (containerRef.current) {\n          const firstFocusableItem = getFirstFocusable(\n            containerRef.current,\n            containerRef.current.firstElementChild as HTMLElement,\n          );\n\n          if (firstFocusableItem) {\n            firstFocusableItem.focus();\n          }\n        }\n      }\n\n      el.style.visibility = 'hidden';\n      const wasFocusable = el.getAttribute(IS_FOCUSABLE_ATTRIBUTE);\n      if (wasFocusable) {\n        el.setAttribute(WAS_FOCUSABLE_ATTRIBUTE, wasFocusable);\n      }\n      el.setAttribute(IS_FOCUSABLE_ATTRIBUTE, 'false');\n    };\n\n    const show = (el: HTMLElement) => {\n      if (el.style.visibility !== 'hidden') {\n        return false;\n      }\n\n      el.style.visibility = '';\n      const wasFocusable = el.getAttribute(WAS_FOCUSABLE_ATTRIBUTE);\n      if (wasFocusable) {\n        el.setAttribute(IS_FOCUSABLE_ATTRIBUTE, wasFocusable);\n        el.removeAttribute(WAS_FOCUSABLE_ATTRIBUTE);\n      } else {\n        el.removeAttribute(IS_FOCUSABLE_ATTRIBUTE);\n      }\n\n      return true;\n    };\n\n    /**\n     * Checks if `item` overflows a `container`.\n     * TODO: check and fix all margin combination\n     */\n    const isItemOverflowing = (itemBoundingRect: ClientRect, containerBoundingRect: ClientRect) => {\n      return itemBoundingRect.right > containerBoundingRect.right || itemBoundingRect.left < containerBoundingRect.left;\n    };\n\n    /**\n     * Checks if `item` would collide with eventual position of `overflowItem`.\n     */\n    const wouldItemCollide = (\n      $item: Element,\n      itemBoundingRect: ClientRect,\n      overflowItemBoundingRect: ClientRect,\n      containerBoundingRect: ClientRect,\n    ) => {\n      const actualWindow: Window = context.target.defaultView;\n      let wouldCollide;\n\n      if (context.rtl) {\n        const itemLeftMargin = parseFloat(actualWindow.getComputedStyle($item).marginLeft) || 0;\n        wouldCollide =\n          itemBoundingRect.left - overflowItemBoundingRect.width - itemLeftMargin < containerBoundingRect.left;\n\n        // console.log('Collision [RTL]', {\n        //   wouldCollide,\n        //   'itemBoundingRect.left': itemBoundingRect.left,\n        //   'overflowItemBoundingRect.width': overflowItemBoundingRect.width,\n        //   itemRightMargin: itemLeftMargin,\n        //   sum: itemBoundingRect.left - overflowItemBoundingRect.width - itemLeftMargin,\n        //   'overflowContainerBoundingRect.left': containerBoundingRect.left,\n        // })\n      } else {\n        const itemRightMargin = parseFloat(actualWindow.getComputedStyle($item).marginRight) || 0;\n        wouldCollide =\n          itemBoundingRect.right + overflowItemBoundingRect.width + itemRightMargin > containerBoundingRect.right;\n\n        // console.log('Collision', {\n        //   wouldCollide,\n        //   'itemBoundingRect.right': itemBoundingRect.right,\n        //   'overflowItemBoundingRect.width': overflowItemBoundingRect.width,\n        //   itemRightMargin,\n        //   sum: itemBoundingRect.right + overflowItemBoundingRect.width + itemRightMargin,\n        //   'overflowContainerBoundingRect.right': containerBoundingRect.right,\n        // })\n      }\n\n      return wouldCollide;\n    };\n\n    /**\n     * Positions overflowItem next to lastVisible item\n     * TODO: consider overflowItem margin\n     */\n    const setOverflowPosition = (\n      $overflowItem: HTMLElement,\n      $lastVisibleItem: HTMLElement | undefined,\n      lastVisibleItemRect: ClientRect | undefined,\n      containerBoundingRect: ClientRect,\n      absolutePositioningOffset: PositionOffset,\n    ) => {\n      const actualWindow: Window = context.target.defaultView;\n\n      if ($lastVisibleItem) {\n        if (context.rtl) {\n          const lastVisibleItemMarginLeft = parseFloat(actualWindow.getComputedStyle($lastVisibleItem).marginLeft) || 0;\n\n          $overflowItem.style.right = `${\n            containerBoundingRect.right -\n            lastVisibleItemRect.left +\n            lastVisibleItemMarginLeft +\n            absolutePositioningOffset.horizontal\n          }px`;\n        } else {\n          const lastVisibleItemRightMargin =\n            parseFloat(actualWindow.getComputedStyle($lastVisibleItem).marginRight) || 0;\n\n          $overflowItem.style.left = `${\n            lastVisibleItemRect.right -\n            containerBoundingRect.left +\n            lastVisibleItemRightMargin +\n            absolutePositioningOffset.horizontal\n          }px`;\n        }\n      } else {\n        // there is no last visible item -> position the overflow as the first item\n        lastVisibleItemIndex.current = -1;\n        if (context.rtl) {\n          $overflowItem.style.right = `${absolutePositioningOffset.horizontal}px`;\n        } else {\n          $overflowItem.style.left = `${absolutePositioningOffset.horizontal}px`;\n        }\n      }\n    };\n\n    const hideOverflowItems = () => {\n      const $overflowContainer = overflowContainerRef.current;\n      const $overflowItem = overflowItemWrapperRef.current;\n      const $overflowSentinel = overflowSentinelRef.current;\n      const $offsetMeasure = offsetMeasureRef.current;\n      if (!$overflowContainer || !$overflowItem || !$offsetMeasure) {\n        return;\n      }\n\n      // workaround: when resizing window with popup opened the container contents scroll for some reason\n      if (context.rtl) {\n        $overflowContainer.scrollTo(Number.MAX_SAFE_INTEGER, 0);\n      } else {\n        $overflowContainer.scrollTop = 0;\n        $overflowContainer.scrollLeft = 0;\n      }\n\n      const $items = $overflowContainer.children;\n\n      const overflowContainerBoundingRect = $overflowContainer.getBoundingClientRect();\n      const overflowItemBoundingRect = $overflowItem.getBoundingClientRect();\n      const offsetMeasureBoundingRect = $offsetMeasure.getBoundingClientRect();\n\n      // Absolute positioning offset\n      // Overflow menu is absolutely positioned relative to root slot\n      // If there is padding set on the root slot boundingClientRect computations use inner content box,\n      // but absolute position is relative to root slot's PADDING box.\n      // We compute absolute positioning offset\n      // By measuring position of an offsetMeasure element absolutely positioned to 0,0.\n      // TODO: replace by getComputedStyle('padding')\n      const absolutePositioningOffset: PositionOffset = {\n        horizontal: context.rtl\n          ? offsetMeasureBoundingRect.right - overflowContainerBoundingRect.right\n          : overflowContainerBoundingRect.left - offsetMeasureBoundingRect.left,\n        vertical: overflowContainerBoundingRect.top - offsetMeasureBoundingRect.top,\n      };\n\n      let isOverflowing = false;\n      let $lastVisibleItem;\n      let lastVisibleItemRect;\n\n      // check all items from the last one back\n      _.forEachRight($items, ($item: HTMLElement, i: number) => {\n        if ($item === $overflowItem || $item === $overflowSentinel) {\n          return true;\n        }\n\n        const itemBoundingRect = $item.getBoundingClientRect();\n\n        // if the item is out of the crop rectangle, hide it\n        if (isItemOverflowing(itemBoundingRect, overflowContainerBoundingRect)) {\n          isOverflowing = true;\n          // console.log('Overflow', i, {\n          //   item: [itemBoundingRect.left, itemBoundingRect.right],\n          //   crop: [\n          //     overflowContainerBoundingRect.left,\n          //     overflowContainerBoundingRect.right,\n          //     overflowContainerBoundingRect.width,\n          //   ],\n          //   container: $overflowContainer,\n          // })\n          hide($item);\n          return true;\n        }\n\n        // if there is an overflow, check collision of remaining items with eventual overflow position\n        if (\n          isOverflowing &&\n          !$lastVisibleItem &&\n          wouldItemCollide($item, itemBoundingRect, overflowItemBoundingRect, overflowContainerBoundingRect)\n        ) {\n          hide($item);\n          return true;\n        }\n\n        // Remember the last visible item\n        if (!$lastVisibleItem) {\n          $lastVisibleItem = $item;\n          lastVisibleItemRect = itemBoundingRect;\n          lastVisibleItemIndex.current = i;\n        }\n\n        return show($item); // exit the loop when first visible item is found\n      });\n\n      // if there is an overflow,  position and show overflow item, otherwise hide it\n      if (isOverflowing || overflowOpen) {\n        $overflowItem.style.position = 'absolute';\n        setOverflowPosition(\n          $overflowItem,\n          $lastVisibleItem,\n          lastVisibleItemRect,\n          overflowContainerBoundingRect,\n          absolutePositioningOffset,\n        );\n        show($overflowItem);\n      } else {\n        lastVisibleItemIndex.current = items.length - 1;\n        hide($overflowItem);\n      }\n\n      _.invoke(props, 'onOverflow', lastVisibleItemIndex.current + 1);\n    };\n\n    const collectOverflowItems = (): ToolbarItemProps['menu'] => {\n      // console.log('getOverflowItems()', items.slice(lastVisibleItemIndex.current + 1))\n      return getOverflowItems\n        ? getOverflowItems(lastVisibleItemIndex.current + 1)\n        : items.slice(lastVisibleItemIndex.current + 1);\n    };\n\n    const getVisibleItems = () => {\n      // console.log('allItems()', items)\n      const end = overflowOpen ? lastVisibleItemIndex.current + 1 : items.length;\n      // console.log('getVisibleItems()', items.slice(0, end))\n      return items.slice(0, end);\n    };\n\n    const handleWindowResize = _.debounce((e: UIEvent) => {\n      hideOverflowItems();\n\n      if (overflowOpen) {\n        _.invoke(props, 'onOverflowOpenChange', e, { ...props, overflowOpen: false });\n      }\n    }, 16);\n\n    const renderItems = (items: ToolbarProps['items']) =>\n      _.map(items, item => {\n        const kind = _.get(item, 'kind', 'item');\n\n        switch (kind) {\n          case 'divider':\n            return createShorthand(composeOptions.slots.divider, item, {\n              defaultProps: () => slotProps.divider,\n            });\n          case 'group':\n            return createShorthand(composeOptions.slots.group, item, {\n              defaultProps: () => slotProps.group,\n            });\n          case 'toggle':\n            return createShorthand(composeOptions.slots.toggle, item, {\n              defaultProps: () => slotProps.toggle,\n            });\n          case 'custom':\n            return createShorthand(composeOptions.slots.customItem, item, {\n              defaultProps: () => slotProps.customItem,\n            });\n          default:\n            return createShorthand(composeOptions.slots.item, item, {\n              defaultProps: () => slotProps.item,\n            });\n        }\n      });\n\n    const renderOverflowItem = overflowItem =>\n      createShorthand(composeOptions.slots.overflowItem, overflowItem, {\n        defaultProps: () => slotProps.overflowItem,\n        overrideProps: (predefinedProps: ToolbarOverflowItemProps) => ({\n          menu: {\n            items: overflowOpen ? (collectOverflowItems() as ToolbarMenuProps['items']) : [],\n            popper: { positionFixed: true, ...predefinedProps.menu?.popper },\n          },\n          menuOpen: overflowOpen,\n          onMenuOpenChange: (e, { menuOpen }) => {\n            _.invoke(props, 'onOverflowOpenChange', e, { ...props, overflowOpen: menuOpen });\n          },\n          wrapper: {\n            ref: overflowItemWrapperRef,\n          },\n        }),\n      });\n\n    // renders a sentinel div that maintains the toolbar dimensions when the the overflow menu is open\n    // hidden elements are removed from the DOM\n    const renderOverflowSentinel = () => (\n      <Ref\n        innerRef={(element: HTMLDivElement) => {\n          overflowSentinelRef.current = element;\n        }}\n      >\n        {Box.create(overflowSentinel, {\n          defaultProps: () => ({\n            id: 'sentinel',\n            className: classes.overflowSentinel,\n          }),\n        })}\n      </Ref>\n    );\n\n    React.useEffect(() => {\n      const actualWindow: Window = context.target.defaultView;\n\n      actualWindow.cancelAnimationFrame(animationFrameId.current);\n      // Heads up! There are cases (like opening a portal and rendering the Toolbar there immediately) when rAF is necessary\n      animationFrameId.current = actualWindow.requestAnimationFrame(() => {\n        hideOverflowItems();\n      });\n\n      return () => {\n        if (animationFrameId.current !== undefined) {\n          context.target.defaultView?.cancelAnimationFrame(animationFrameId.current);\n          animationFrameId.current = undefined;\n        }\n      };\n    });\n\n    const element = overflow ? (\n      <>\n        <Ref\n          innerRef={(node: HTMLDivElement) => {\n            containerRef.current = node;\n            handleRef(ref, node);\n          }}\n        >\n          {getA11Props.unstable_wrapWithFocusZone(\n            <ElementType {...getA11Props('root', { className: classes.root, ...unhandledProps })}>\n              <div className={classes.overflowContainer} ref={overflowContainerRef}>\n                <ToolbarMenuContextProvider value={{ slots: { menu: composeOptions.slots.menu } }}>\n                  <ToolbarVariablesProvider value={variables}>\n                    {childrenExist(children) ? children : renderItems(getVisibleItems())}\n                    {overflowSentinel && renderOverflowSentinel()}\n                    {renderOverflowItem(overflowItem)}\n                  </ToolbarVariablesProvider>\n                </ToolbarMenuContextProvider>\n              </div>\n              <div className={classes.offsetMeasure} ref={offsetMeasureRef} />\n            </ElementType>,\n          )}\n        </Ref>\n        <EventListener listener={handleWindowResize} target={context.target.defaultView} type=\"resize\" />\n      </>\n    ) : (\n      <Ref\n        innerRef={(node: HTMLDivElement) => {\n          containerRef.current = node;\n          handleRef(ref, node);\n        }}\n      >\n        {getA11Props.unstable_wrapWithFocusZone(\n          <ElementType {...getA11Props('root', { className: classes.root, ...unhandledProps })}>\n            <ToolbarMenuContextProvider value={{ slots: { menu: composeOptions.slots.menu } }}>\n              <ToolbarVariablesProvider value={variables}>\n                {childrenExist(children) ? children : renderItems(items)}\n              </ToolbarVariablesProvider>\n            </ToolbarMenuContextProvider>\n          </ElementType>,\n        )}\n      </Ref>\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: toolbarClassName,\n    displayName: 'Toolbar',\n\n    slots: {\n      customItem: ToolbarCustomItem,\n      divider: ToolbarDivider,\n      item: ToolbarItem,\n      group: ToolbarRadioGroup,\n      toggle: ToolbarItem,\n      overflowItem: ToolbarItem,\n      menu: ToolbarMenu,\n    },\n    slotProps: () => ({\n      toggle: {\n        accessibility: toggleButtonBehavior,\n      },\n      overflowItem: {\n        icon: <MoreIcon outline />,\n      },\n    }),\n\n    shorthandConfig: { mappedProp: 'content' },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'getOverflowItems',\n      'items',\n      'onOverflow',\n      'onOverflowOpenChange',\n      'overflow',\n      'overflowItem',\n      'overflowOpen',\n      'overflowSentinel',\n      'styles',\n      'variables',\n    ],\n  },\n) as ComponentWithAs<'div', ToolbarProps> & {\n  CustomItem: typeof ToolbarCustomItem;\n  Divider: typeof ToolbarDivider;\n  Item: typeof ToolbarItem;\n  ItemWrapper: typeof ToolbarItemWrapper;\n  ItemIcon: typeof ToolbarItemIcon;\n  Menu: typeof ToolbarMenu;\n  MenuDivider: typeof ToolbarMenuDivider;\n  MenuItem: typeof ToolbarMenuItem;\n  MenuItemIcon: typeof ToolbarMenuItemIcon;\n  MenuItemSubmenuIndicator: typeof ToolbarMenuItemSubmenuIndicator;\n  MenuItemActiveIndicator: typeof ToolbarMenuItemActiveIndicator;\n  MenuRadioGroup: typeof ToolbarMenuRadioGroup;\n  MenuRadioGroupWrapper: typeof ToolbarMenuRadioGroupWrapper;\n  RadioGroup: typeof ToolbarRadioGroup;\n};\n\nToolbar.propTypes = {\n  ...commonPropTypes.createCommon(),\n  items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item', 'group', 'toggle', 'custom']),\n  overflow: PropTypes.bool,\n  overflowOpen: PropTypes.bool,\n  overflowSentinel: customPropTypes.shorthandAllowingChildren,\n  overflowItem: customPropTypes.shorthandAllowingChildren,\n  onOverflow: PropTypes.func,\n  onOverflowOpenChange: PropTypes.func,\n  getOverflowItems: PropTypes.func,\n};\nToolbar.defaultProps = {\n  accessibility: toolbarBehavior,\n  items: [],\n  overflowItem: {},\n  overflowSentinel: {},\n};\n\nToolbar.CustomItem = ToolbarCustomItem;\nToolbar.Divider = ToolbarDivider;\nToolbar.Item = ToolbarItem;\nToolbar.ItemWrapper = ToolbarItemWrapper;\nToolbar.ItemIcon = ToolbarItemIcon;\nToolbar.Menu = ToolbarMenu;\nToolbar.MenuDivider = ToolbarMenuDivider;\nToolbar.MenuItem = ToolbarMenuItem;\nToolbar.MenuItemIcon = ToolbarMenuItemIcon;\nToolbar.MenuItemSubmenuIndicator = ToolbarMenuItemSubmenuIndicator;\nToolbar.MenuItemActiveIndicator = ToolbarMenuItemActiveIndicator;\nToolbar.MenuRadioGroup = ToolbarMenuRadioGroup;\nToolbar.MenuRadioGroupWrapper = ToolbarMenuRadioGroupWrapper;\nToolbar.RadioGroup = ToolbarRadioGroup;\n"],"mappings":"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"}