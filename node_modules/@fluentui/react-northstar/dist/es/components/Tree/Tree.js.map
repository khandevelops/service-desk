{"version":3,"file":"Tree.js","names":["treeBehavior","useTelemetry","useUnhandledProps","getElementType","useAccessibility","useStyles","useFluentContext","customPropTypes","PropTypes","React","TreeItem","TreeTitle","childrenExist","commonPropTypes","createShorthandFactory","rtlTextContainer","useTree","TreeContext","treeClassName","Tree","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","selectable","children","renderedItems","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToBehavior","mapPropsToInlineStyles","unstyled","classes","visibleItemIds","getItemById","registerItemRef","toggleItemActive","focusItemById","expandSiblings","toggleItemSelect","getToFocusIDByFirstCharacter","contextValue","useMemo","renderContent","map","id","item","expanded","parent","level","index","treeSize","create","defaultProps","renderItemTitle","overrideProps","key","element","unstable_wrapWithFocusZone","root","getAttributes","forElements","propTypes","createCommon","content","activeItemIds","collectionShorthand","selectedItemIds","defaultActiveItemIds","defaultSelectedItemIds","exclusive","bool","items","collectionObjectShorthand","onActiveItemIdsChange","func","onSelectedItemIdsChange","Item","Title","Object","keys","Component","mappedArrayProp"],"sources":["components/Tree/Tree.tsx"],"sourcesContent":["import { Accessibility, treeBehavior, TreeBehaviorProps } from '@fluentui/accessibility';\nimport {\n  useTelemetry,\n  useUnhandledProps,\n  getElementType,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { TreeItem, TreeItemProps } from './TreeItem';\nimport { TreeTitle, TreeTitleProps } from './TreeTitle';\nimport {\n  childrenExist,\n  commonPropTypes,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ObjectShorthandCollection,\n  FluentComponentStaticProps,\n  ShorthandRenderFunction,\n} from '../../types';\nimport { useTree } from './hooks/useTree';\nimport { TreeContext, TreeRenderContextValue } from './context';\n\nexport interface TreeProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeBehaviorProps>;\n\n  /** Ids of expanded items. */\n  activeItemIds?: string[];\n\n  /** Ids of selected leaf items. */\n  selectedItemIds?: string[];\n\n  /** Initial activeItemIds value. */\n  defaultActiveItemIds?: string[];\n\n  /** Initial selectedItemIds value. */\n  defaultSelectedItemIds?: string[];\n\n  /** Only allow one subtree to be expanded at a time. */\n  exclusive?: boolean;\n\n  /** Shorthand array of props for Tree. */\n  items?: ObjectShorthandCollection<TreeItemProps>;\n\n  /**\n   * A custom render function for the title slot.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /**\n   * Called when active item ids change.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `activeItemIds` reflecting the new state.\n   */\n  onActiveItemIdsChange?: ComponentEventHandler<TreeProps>;\n\n  /**\n   * Called when tree item selection state is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `selectedItemIds` reflecting the new state.\n   */\n  onSelectedItemIdsChange?: ComponentEventHandler<TreeProps>;\n\n  /**\n   * Callback that provides rendered tree items to be used by react-virtualized for instance.\n   * Acts as a render prop, with the rendered tree items being the re-used logic.\n   *\n   * @param renderedItem - The array of rendered items.\n   * @returns The render prop result.\n   */\n  renderedItems?: (renderedItems: React.ReactElement[]) => React.ReactNode;\n\n  /** Whether or not tree items are selectable. */\n  selectable?: boolean;\n\n  unstyled?: boolean;\n}\n\nexport const treeClassName = 'ui-tree';\n\nexport type TreeStylesProps = never;\n\n/**\n * A Tree displays data organised in tree hierarchy.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n * @accessibilityIssues\n * [Treeview - JAWS doesn't narrate position for each tree item](https://github.com/FreedomScientific/VFO-standards-support/issues/338)\n * [Aria-selected and aria-checked are not output correctly for trees #432](https://github.com/FreedomScientific/VFO-standards-support/issues/432)\n * [Aria compliant trees are read as empty tables](https://bugs.chromium.org/p/chromium/issues/detail?id=1048770)\n * [VoiceOver narrates \"selected false\" for DOM with role=option and no aria-selected attribute](http://www.openradar.me/FB8050959)\n * [VoiceOver does not support Aria 1.2 listbox role owning unselectable group role](http://www.openradar.me/FB8050958)\n * [Tree as table in Mac > VoiceOver narrates \" no selection \" when user navigates to tree/table](https://bugs.chromium.org/p/chromium/issues/detail?id=1273538)\n * [Tree as table in Mac > VoiceOver narrates \" 0 items enclosed \" when user navigates to expaded treeitem](https://bugs.chromium.org/p/chromium/issues/detail?id=1273540)\n * [Tree as table in Mac > VoiceOver doesn't narrate aria-labelledby element on treeitem](https://bugs.chromium.org/p/chromium/issues/detail?id=1273544)\n */\nexport const Tree = (React.forwardRef<HTMLDivElement, TreeProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Tree.displayName, context.telemetry);\n  setStart();\n\n  const { selectable, children, renderedItems, className, design, styles, variables } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Tree.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Tree.displayName,\n    rtl: context.rtl,\n    mapPropsToBehavior: () => ({\n      selectable,\n    }),\n  });\n\n  const { classes } = useStyles<TreeStylesProps>(Tree.displayName, {\n    className: treeClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n    unstyled: props.unstyled,\n  });\n\n  const {\n    visibleItemIds,\n    getItemById,\n    registerItemRef,\n    toggleItemActive,\n    focusItemById,\n    expandSiblings,\n    toggleItemSelect,\n    getToFocusIDByFirstCharacter,\n  } = useTree(props);\n\n  const contextValue: TreeRenderContextValue = React.useMemo(\n    () => ({\n      getItemById,\n      registerItemRef,\n      toggleItemActive,\n      expandSiblings,\n      focusItemById,\n      toggleItemSelect,\n      getToFocusIDByFirstCharacter,\n    }),\n    [\n      getItemById,\n      registerItemRef,\n      toggleItemActive,\n      focusItemById,\n      expandSiblings,\n      toggleItemSelect,\n      getToFocusIDByFirstCharacter,\n    ],\n  );\n\n  const renderContent = (): React.ReactElement[] => {\n    return visibleItemIds.map(id => {\n      const item = getItemById(id);\n      const { expanded, parent, level, index, treeSize } = item;\n      return TreeItem.create(item.item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            renderItemTitle: props.renderItemTitle,\n          }),\n        overrideProps: {\n          expanded,\n          parent,\n          key: id,\n          level,\n          index,\n          treeSize,\n          selectable: selectable ? item.item.selectable : false,\n        },\n      });\n    });\n  };\n\n  const element = (\n    <TreeContext.Provider value={contextValue}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            ref,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenExist(children) ? children : renderedItems ? renderedItems(renderContent()) : renderContent()}\n        </ElementType>,\n      )}\n    </TreeContext.Provider>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, TreeProps> &\n  FluentComponentStaticProps<TreeProps> & {\n    Item: typeof TreeItem;\n    Title: typeof TreeTitle;\n  };\n\nTree.displayName = 'Tree';\n\nTree.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeItemIds: customPropTypes.collectionShorthand,\n  selectedItemIds: customPropTypes.collectionShorthand,\n  defaultActiveItemIds: customPropTypes.collectionShorthand,\n  defaultSelectedItemIds: customPropTypes.collectionShorthand,\n  exclusive: PropTypes.bool,\n  selectable: PropTypes.bool,\n  unstyled: PropTypes.bool,\n  items: customPropTypes.collectionObjectShorthand,\n  onActiveItemIdsChange: PropTypes.func,\n  onSelectedItemIdsChange: PropTypes.func,\n  renderItemTitle: PropTypes.func,\n  renderedItems: PropTypes.func,\n};\n\nTree.Item = TreeItem;\nTree.Title = TreeTitle;\n\nTree.defaultProps = {\n  accessibility: treeBehavior,\n};\n\nTree.handledProps = Object.keys(Tree.propTypes) as any;\n\nTree.create = createShorthandFactory({\n  Component: Tree,\n  mappedArrayProp: 'items',\n});\n"],"mappings":"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"}