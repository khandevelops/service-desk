{"version":3,"file":"TreeItem.js","names":["treeItemBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","useFluentContext","customPropTypes","PropTypes","React","handleRef","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","shouldPreventDefaultOnKeyDown","TreeTitle","TreeContext","treeItemClassName","TreeItem","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","contentRef","design","title","renderItemTitle","expanded","level","index","styles","variables","treeSize","selectionIndicator","selectable","id","parent","useContext","getItemById","registerItemRef","toggleItemActive","focusItemById","expandSiblings","toggleItemSelect","getToFocusIDByFirstCharacter","selected","hasSubtree","childrenIds","getA11Props","actionHandlers","performClick","e","preventDefault","stopPropagation","focusParent","handleFocusParent","collapse","expand","focusFirstChild","handleFocusFirstChild","handleSiblingsExpand","performSelection","handleSelection","debugName","mapPropsToBehavior","indeterminate","rtl","mapPropsToStyles","mapPropsToInlineStyles","unstyled","classes","handleTitleOverrides","predefinedProps","onClick","titleProps","handleClick","target","currentTarget","handleKeyDown","key","length","match","altKey","ctrlKey","metaKey","toFocusID","elementRef","useCallback","node","ElementType","unhandledProps","handledProps","element","root","onKeyDown","getAttributes","forElements","create","defaultProps","as","render","overrideProps","propTypes","createCommon","content","string","isRequired","number","items","collectionShorthand","onFocusFirstChild","func","onFocusParent","onTitleClick","onSiblingsExpand","bool","itemShorthand","shorthandAllowingChildren","Object","keys","Component","mappedProp"],"sources":["components/Tree/TreeItem.tsx"],"sourcesContent":["import { Accessibility, treeItemBehavior, TreeItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { handleRef } from '@fluentui/react-component-ref';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandRenderFunction,\n  ShorthandValue,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ComponentKeyboardEventHandler,\n} from '../../types';\nimport { TreeTitle, TreeTitleProps } from './TreeTitle';\nimport { BoxProps } from '../Box/Box';\nimport { TreeContext } from './context';\n\nexport interface TreeItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeItemBehaviorProps>;\n\n  /** Ref for the item DOM element. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /** Id needed to identify this item inside the Tree. */\n  id: string;\n\n  /** The index of the item among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Array of props for sub tree. */\n  items?: ShorthandCollection<TreeItemProps>;\n\n  /** Level of the tree/subtree that contains this item. */\n  level?: number;\n\n  /** Called when the item's first child is about to be focused. */\n  onFocusFirstChild?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's parent is about to be focused. */\n  onFocusParent?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when a tree title is clicked. */\n  onTitleClick?: ComponentEventHandler<TreeItemProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's siblings are about to be expanded. */\n  onSiblingsExpand?: ComponentEventHandler<TreeItemProps>;\n\n  /** Whether or not the item is in the expanded state. Only makes sense if item has children items. If set to true, item is initialy expanded. */\n  expanded?: boolean;\n\n  /** The id of the parent tree item, if any. */\n  parent?: string;\n\n  /**\n   * A custom render iterator for rendering each tree title.\n   * The default component, props, and children are available for each tree title.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /** Size of the tree/subtree that contains this item. */\n  treeSize?: number;\n\n  /** Properties for TreeTitle. */\n  title?: ShorthandValue<TreeTitleProps>;\n\n  /** Whether or not the item can be selectable. */\n  selectable?: boolean;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /**\n   * Called on item key down.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<TreeItemProps>;\n\n  unstyled?: boolean;\n}\n\nexport type TreeItemStylesProps = Required<Pick<TreeItemProps, 'level'>> & {\n  selectable?: boolean;\n};\nexport const treeItemClassName = 'ui-tree__item';\n\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport const TreeItem = (React.forwardRef<HTMLDivElement, TreeItemProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TreeItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    contentRef,\n    design,\n    title,\n    renderItemTitle,\n    expanded,\n    level,\n    index,\n    styles,\n    variables,\n    treeSize,\n    selectionIndicator,\n    selectable,\n    id,\n    parent,\n  } = props;\n\n  const {\n    getItemById,\n    registerItemRef,\n    toggleItemActive,\n    focusItemById,\n    expandSiblings,\n    toggleItemSelect,\n    getToFocusIDByFirstCharacter,\n  } = React.useContext(TreeContext);\n\n  const { selected, hasSubtree, childrenIds } = getItemById(id);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        toggleItemActive(e, id);\n        _.invoke(props, 'onTitleClick', e, props);\n      },\n      focusParent: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusParent(e);\n      },\n      collapse: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleItemActive(e, id);\n      },\n      expand: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleItemActive(e, id);\n      },\n      focusFirstChild: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusFirstChild(e);\n      },\n      expandSiblings: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleSiblingsExpand(e);\n      },\n      performSelection: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        handleSelection(e);\n      },\n    },\n    debugName: TreeItem.displayName,\n    mapPropsToBehavior: () => ({\n      expanded,\n      level,\n      index,\n      hasSubtree,\n      treeSize,\n      selected: selected === true,\n      selectable,\n      indeterminate: selected === 'indeterminate',\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<TreeItemStylesProps>(TreeItem.displayName, {\n    className: treeItemClassName,\n    mapPropsToStyles: () => ({\n      level,\n      selectable,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n    unstyled: props.unstyled,\n  });\n\n  const handleSelection = e => {\n    if (selectable) {\n      toggleItemSelect(e, id);\n    }\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n\n  const handleFocusFirstChild = e => {\n    _.invoke(props, 'onFocusFirstChild', e, props);\n    focusItemById(childrenIds?.[0]);\n  };\n\n  const handleFocusParent = e => {\n    _.invoke(props, 'onFocusParent', e, props);\n    focusItemById(parent);\n  };\n\n  const handleSiblingsExpand = e => {\n    _.invoke(props, 'onSiblingsExpand', e, props);\n    expandSiblings(e, props.id);\n  };\n\n  const handleTitleOverrides = (predefinedProps: TreeTitleProps) => ({\n    id,\n    onClick: (e, titleProps) => {\n      _.invoke(props, 'onTitleClick', e, props);\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n    },\n  });\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (e.target === e.currentTarget) {\n      // onClick listener for mouse click on treeItem DOM only,\n      // which could be triggered by VO+space on selectable tree parent node\n      handleSelection(e);\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key && e.key.length === 1 && e.key.match(/\\S/) && e.key !== '*' && !e.altKey && !e.ctrlKey && !e.metaKey) {\n      e.preventDefault();\n      e.stopPropagation();\n      const toFocusID = getToFocusIDByFirstCharacter(e, props.id);\n      if (toFocusID !== props.id) {\n        focusItemById(toFocusID);\n      }\n    }\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const elementRef = React.useCallback(\n    node => {\n      registerItemRef(id, node);\n      handleRef(contentRef, node);\n      handleRef(ref, node);\n    },\n    [id, contentRef, registerItemRef, ref],\n  );\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeItem.handledProps, props);\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        id,\n        ref: elementRef,\n        selected: selected === true,\n        onClick: handleClick,\n        onKeyDown: handleKeyDown,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children)\n        ? children\n        : TreeTitle.create(title, {\n            defaultProps: () =>\n              getA11Props('title', {\n                hasSubtree,\n                as: hasSubtree ? 'span' : 'a',\n                level,\n                treeSize,\n                expanded,\n                index,\n                selected: selected === true,\n                selectable,\n                parent,\n                ...(hasSubtree && {\n                  indeterminate: selected === 'indeterminate',\n                }),\n                selectionIndicator,\n              }),\n            render: renderItemTitle,\n            overrideProps: handleTitleOverrides,\n          })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, TreeItemProps> & FluentComponentStaticProps<TreeItemProps>;\n\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentRef: customPropTypes.ref,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  level: PropTypes.number,\n  onFocusFirstChild: PropTypes.func,\n  onFocusParent: PropTypes.func,\n  onTitleClick: PropTypes.func,\n  onSiblingsExpand: PropTypes.func,\n  expanded: PropTypes.bool,\n  parent: PropTypes.string,\n  renderItemTitle: PropTypes.func,\n  treeSize: PropTypes.number,\n  title: customPropTypes.itemShorthand,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  selectable: PropTypes.bool,\n  unstyled: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n};\n\nTreeItem.defaultProps = {\n  accessibility: treeItemBehavior,\n  selectable: true,\n};\n\nTreeItem.handledProps = Object.keys(TreeItem.propTypes) as any;\n\nTreeItem.create = createShorthandFactory({\n  Component: TreeItem,\n  mappedProp: 'title',\n});\n"],"mappings":"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"}