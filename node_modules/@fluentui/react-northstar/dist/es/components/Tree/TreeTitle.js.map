{"version":3,"file":"TreeTitle.js","names":["treeTitleBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useFluentContext","useTelemetry","Box","customPropTypes","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","shouldPreventDefaultOnKeyDown","TreeContext","treeTitleClassName","treeTitleSlotClassNames","indicator","TreeTitle","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","useContext","focusItemById","toggleItemActive","toggleItemSelect","accessibility","id","children","className","content","design","hasSubtree","level","index","styles","treeSize","variables","selectionIndicator","disabled","selected","selectable","expanded","indeterminate","getA11Props","debugName","actionHandlers","performClick","e","preventDefault","stopPropagation","handleClick","focusParent","parent","mapPropsToBehavior","rtl","mapPropsToStyles","showIndicator","mapPropsToInlineStyles","unstyled","classes","resolvedStyles","ElementType","unhandledProps","handledProps","selectionIndicatorOverrideProps","predefinedProps","onClick","selectionIndicatorElement","create","defaultProps","as","overrideProps","element","root","getAttributes","forElements","propTypes","createCommon","string","bool","number","func","shorthandAllowingChildren","Object","keys","Component","mappedProp"],"sources":["components/Tree/TreeTitle.tsx"],"sourcesContent":["import { Accessibility, treeTitleBehavior, TreeTitleBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Box, BoxProps } from '../Box/Box';\nimport { SupportedIntrinsicInputProps } from '../../utils/htmlPropsUtils';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { TreeContext } from './context';\n\nexport interface TreeTitleSlotClassNames {\n  indicator: string;\n}\n\nexport interface TreeTitleProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeTitleBehaviorProps>;\n\n  /** Internal usage only -  Id needed to identify this item inside the Tree, passed down from TreeItem */\n  id?: string;\n\n  /** Whether or not the title has a subtree. */\n  hasSubtree?: boolean;\n\n  /** The index of the title among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Level of the tree/subtree that contains this title. */\n  level?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<TreeTitleProps>;\n\n  /** Whether or not the subtree of the title is in the open state. */\n  expanded?: boolean;\n\n  /** Size of the tree containing this title without any children. */\n  treeSize?: number;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /** A selection indicator can appear disabled and be unable to change states. */\n  disabled?: SupportedIntrinsicInputProps['disabled'];\n\n  /** A state of selection indicator. */\n  selected?: boolean;\n\n  /** Whether or not tree title is selectable. */\n  selectable?: boolean;\n\n  /** For selectable parents define if all nested children are checked */\n  indeterminate?: boolean;\n\n  /** The id of the parent tree title, if any. */\n  parent?: string;\n\n  unstyled?: boolean;\n}\n\nexport type TreeTitleStylesProps = Pick<\n  TreeTitleProps,\n  'selected' | 'selectable' | 'disabled' | 'indeterminate' | 'level'\n> & {\n  showIndicator: boolean;\n};\n\nexport const treeTitleClassName = 'ui-tree__title';\n\nexport const treeTitleSlotClassNames = {\n  indicator: `${treeTitleClassName}__selection-indicator`,\n};\n\n/**\n * A TreeTitle renders a title of TreeItem.\n */\nexport const TreeTitle = (React.forwardRef<HTMLAnchorElement, TreeTitleProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TreeTitle.displayName, context.telemetry);\n  setStart();\n  const { focusItemById, toggleItemActive, toggleItemSelect } = React.useContext(TreeContext);\n  const {\n    accessibility,\n    id,\n    children,\n    className,\n    content,\n    design,\n    hasSubtree,\n    level,\n    index,\n    styles,\n    treeSize,\n    variables,\n    selectionIndicator,\n    disabled,\n    selected,\n    selectable,\n    expanded,\n    indeterminate,\n  } = props;\n\n  const getA11Props = useAccessibility<TreeTitleBehaviorProps>(accessibility, {\n    debugName: TreeTitle.displayName,\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        handleClick(e);\n      },\n      focusParent: e => {\n        // allow bubbling up to parent treeItem\n        focusItemById(props.parent);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      hasSubtree,\n      level,\n      index,\n      treeSize,\n      selected,\n      selectable,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<TreeTitleStylesProps>(TreeTitle.displayName, {\n    className: treeTitleClassName,\n    mapPropsToStyles: () => ({\n      selected,\n      disabled,\n      selectable,\n      indeterminate,\n      level,\n      showIndicator: selectable && ((hasSubtree && expanded) || selected || indeterminate),\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n    unstyled: props.unstyled,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeTitle.handledProps, props);\n\n  const handleClick = e => {\n    if (hasSubtree) {\n      toggleItemActive(e, id);\n    } else {\n      toggleItemSelect(e, id);\n    }\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const selectionIndicatorOverrideProps = (predefinedProps: BoxProps) => ({\n    onClick: (e: React.SyntheticEvent) => {\n      e.stopPropagation(); // otherwise onClick on title will also be executed\n      if (selectable) {\n        toggleItemSelect(e, id);\n      }\n\n      _.invoke(predefinedProps, 'onClick', e);\n    },\n  });\n\n  const selectionIndicatorElement =\n    selectable &&\n    Box.create(selectionIndicator, {\n      defaultProps: () => ({\n        as: 'span',\n        selected,\n        ...getA11Props('indicator', {\n          className: treeTitleSlotClassNames.indicator,\n          styles: resolvedStyles.selectionIndicator,\n        }),\n      }),\n      overrideProps: selectionIndicatorOverrideProps,\n    });\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        onClick: handleClick,\n        selected,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n      {selectionIndicatorElement}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'a', HTMLAnchorElement, TreeTitleProps> & FluentComponentStaticProps<TreeTitleProps>;\n\nTreeTitle.displayName = 'TreeTitle';\n\nTreeTitle.propTypes = {\n  ...commonPropTypes.createCommon(),\n  id: PropTypes.string,\n  hasSubtree: PropTypes.bool,\n  index: PropTypes.number,\n  level: PropTypes.number,\n  onClick: PropTypes.func,\n  expanded: PropTypes.bool,\n  selected: PropTypes.bool,\n  selectable: PropTypes.bool,\n  treeSize: PropTypes.number,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  unstyled: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  parent: PropTypes.string,\n};\nTreeTitle.defaultProps = {\n  as: 'a' as const,\n  selectionIndicator: {},\n  accessibility: treeTitleBehavior,\n};\nTreeTitle.handledProps = Object.keys(TreeTitle.propTypes) as any;\n\nTreeTitle.create = createShorthandFactory({\n  Component: TreeTitle,\n  mappedProp: 'content',\n});\n"],"mappings":"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"}