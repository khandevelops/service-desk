{"version":3,"file":"getWindow.js","names":["_window","undefined","window","e","getWindow","rootElement","el","ownerDocument","defaultView"],"sources":["utils/getWindow.ts"],"sourcesContent":["let _window: Window | undefined = undefined;\n\n// Note: Accessing \"window\" in IE11 is somewhat expensive, and calling \"typeof window\"\n// hits a memory leak, whereas aliasing it and calling \"typeof _window\" does not.\n// Caching the window value at the file scope lets us minimize the impact.\ntry {\n  _window = window;\n} catch (e) {\n  /* no-op */\n}\n\n/**\n * Helper to get the window object. The helper will make sure to use a cached variable\n * of \"window\", to avoid overhead and memory leaks in IE11. Note that in popup scenarios the\n * window object won't match the \"global\" window object, and for these scenarios, you should\n * pass in an element hosted within the popup.\n *\n * @public\n */\nexport function getWindow(rootElement?: Element | null): Window | undefined {\n  if (typeof _window === 'undefined') {\n    return undefined;\n  }\n\n  const el = rootElement as Element;\n\n  return el && el.ownerDocument && el.ownerDocument.defaultView ? el.ownerDocument.defaultView : _window;\n}\n"],"mappings":";;;;AAAA,IAAIA,OAA2B,GAAGC,SAAS;;AAE3C;AACA;AACA;AACA,IAAI;EACFD,OAAO,GAAGE,MAAM;AAClB,CAAC,CAAC,OAAOC,CAAC,EAAE;EACV;AAAA;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,SAASA,CAACC,WAA4B,EAAsB;EAC1E,IAAI,OAAOL,OAAO,KAAK,WAAW,EAAE;IAClC,OAAOC,SAAS;EAClB;EAEA,IAAMK,EAAE,GAAGD,WAAsB;EAEjC,OAAOC,EAAE,IAAIA,EAAE,CAACC,aAAa,IAAID,EAAE,CAACC,aAAa,CAACC,WAAW,GAAGF,EAAE,CAACC,aAAa,CAACC,WAAW,GAAGR,OAAO;AACxG"}