{"version":3,"file":"FocusZone.js","names":["_accessibility","require","React","_interopRequireWildcard","_classnames","_interopRequireDefault","PropTypes","_getDocument2","_getWindow","_findScrollableParent","_shouldWrapFocus2","_domUtilities","_getElementType","_getUnhandledProps","_focusUtilities","_reactComponentRef","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","TABINDEX","NO_VERTICAL_WRAP","NO_HORIZONTAL_WRAP","LARGE_DISTANCE_FROM_CENTER","LARGE_NEGATIVE_DISTANCE_FROM_CENTER","_allInstances","outerZones","_windowToOuterZoneMap","Map","register","window","FZ","_this$_windowToOuterZ2","_this$_windowToOuterZ","add","Set","size","unregister","_this$_windowToOuterZ3","_this$_windowToOuterZ4","delete","getOutZone","ALLOWED_INPUT_TYPES","ALLOW_VIRTUAL_ELEMENTS","_raiseClickFromKeyboardEvent","target","ev","event","MouseEvent","ctrlKey","metaKey","shiftKey","altKey","bubbles","cancelable","dispatchEvent","_onKeyDownCapture","getCode","keyboardKey","Tab","_outerZones$getOutZon","getWindow","forEach","zone","props","shouldResetActiveElementWhenTabFromZone","document","activeElement","_activeElement","updateTabIndexes","FocusZone","_React$Component","_inheritsLoose2","_this","_root","current","_id","_lastIndexPath","_isParked","_parkedTabIndex","_defaultFocusElement","_focusAlignment","_isInnerZone","_processingTabKey","windowElement","setRef","elem","handleRef","innerRef","process","env","NODE_ENV","nodeType","Error","_onBlur","setParkedFocus","_onFocus","_ev$target","_this$props","onActiveElementChanged","stopFocusPropagation","shouldFocusInnerElementWhenReceivedFocus","defaultTabbableElement","shouldIgnoreNotFocusable","dataset","isFocusable","newActiveElement","isImmediateDescendant","isImmediateDescendantOfZone","parentElement","isElementTabbable","getParent","maybeElementToFocus","focus","setFocusAlignment","stopPropagation","_invoke2","_onMouseDown","disabled","path","push","length","pop","setActiveElement","isElementFocusZone","_onKeyDown","_this$props2","direction","shouldEnterInnerZone","pagingSupportDisabled","undefined","doc","getDocument","onKeyDown","isDefaultPrevented","innerZone","getFirstInnerZone","isElementFocusSubZone","focusElement","getNextElement","firstChild","SpacebarKey","tryInvokeClickForFocusable","ArrowLeft","FocusZoneDirection","vertical","preventDefaultWhenHandled","moveFocusLeft","ArrowRight","moveFocusRight","ArrowUp","horizontal","moveFocusUp","ArrowDown","moveFocusDown","PageDown","moveFocusPaging","PageUp","handleTabKey","FocusZoneTabbableElements","all","inputOnly","isElementInput","focusChanged","shouldWrapFocus","tabWithDirection","isRtl","Home","isContentEditableElement","shouldInputLoseFocus","End","lastChild","getPreviousElement","Enter","preventDefault","getHorizontalDistanceFromCenter","isForward","activeRect","targetRect","leftAlignment","left","targetRectTop","Math","floor","top","activeRectBottom","bottom","targetRectBottom","activeRectTop","isValidCandidateOnpagingDown","isValidCandidateOnpagingUp","width","abs","_uniqueId2","_proto","componentDidMount","body","_outerZones$getOutZon2","addEventListener","querySelector","shouldFocusOnMount","componentDidUpdate","preventFocusRestoration","elementToFocus","getFocusableByIndexPath","componentWillUnmount","removeEventListener","render","className","ElementType","getElementType","unhandledProps","getUnhandledProps","_keys2","propTypes","evaluateFocusBeforeRender","createElement","_extends2","ref","cx","onFocus","onMouseDownCapture","children","forceIntoFirstElement","getAttribute","IS_FOCUSABLE_ATTRIBUTE","ownerZoneElement","getOwnerZone","ownerZone","FOCUSZONE_ID_ATTRIBUTE","elementContains","focusLast","element","forceAlignment","shouldReceiveFocus","focusedElement","shouldRestoreFocus","getElementIndexPath","isParked","allowFocusRoot","setAttribute","removeAttribute","previousActiveElement","tabIndex","targetElement","shouldRaiseClicks","tagName","IS_ENTER_DISABLED_ATTRIBUTE","forRootElement","rootElement","child","firstElementChild","match","nextElementSibling","moveFocus","getDistanceFromCenter","useDefaultWrap","candidateDistance","candidateElement","changedFocus","isBidirectional","bidirectional","getBoundingClientRect","elementDistance","isCircularNavigation","lastElementChild","_this2","targetTop","distance","_this3","_this4","shouldWrap","topBottomComparison","parseFloat","toFixed","right","_this5","scrollableParent","findScrollableParent","targetBottom","pagesize","clientHeight","isElementPassedPageSizeOnPagingDown","isElementPassedPageSizeOnPagingUp","isHorizontal","isVertical","rect","height","onElement","childNodes","childIndex","toLowerCase","type","indexOf","selectionStart","selectionEnd","isRangeSelected","inputValue","value","isReadonly","readOnly","shouldInputLoseFocusOnArrowKey","noWrapDataAttribute","checkForNoWrap","Component","exports","string","number","func","bool","as","elementType","any","defaultProps","displayName"],"sources":["FocusZone/FocusZone.tsx"],"sourcesContent":["import {\n  FocusZoneDirection,\n  FocusZoneTabbableElements,\n  IS_ENTER_DISABLED_ATTRIBUTE,\n  IS_FOCUSABLE_ATTRIBUTE,\n  getCode,\n  keyboardKey,\n  SpacebarKey,\n} from '@fluentui/accessibility';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\n\nimport { getDocument } from '../utils/getDocument';\nimport { getWindow } from '../utils/getWindow';\nimport { findScrollableParent } from '../utils/findScrollableParent';\nimport { shouldWrapFocus } from '../utils/shouldWrapFocus';\n\nimport { elementContains, getParent } from '@fluentui/dom-utilities';\n\nimport { getElementType } from '../utils/getElementType';\nimport { getUnhandledProps } from '../utils/getUnhandledProps';\nimport { FocusZoneProps, IFocusZone } from './FocusZone.types';\nimport {\n  getNextElement,\n  getPreviousElement,\n  isElementFocusZone,\n  isElementFocusSubZone,\n  isElementTabbable,\n  getElementIndexPath,\n  getFocusableByIndexPath,\n  FOCUSZONE_ID_ATTRIBUTE,\n} from './focusUtilities';\nimport { handleRef } from '@fluentui/react-component-ref';\n\nconst TABINDEX = 'tabindex';\nconst NO_VERTICAL_WRAP = 'data-no-vertical-wrap';\nconst NO_HORIZONTAL_WRAP = 'data-no-horizontal-wrap';\nconst LARGE_DISTANCE_FROM_CENTER = 999999999;\nconst LARGE_NEGATIVE_DISTANCE_FROM_CENTER = -999999999;\n\nconst _allInstances: {\n  [key: string]: FocusZone;\n} = {};\n\nconst outerZones = {\n  _windowToOuterZoneMap: new Map<Window, Set<FocusZone>>(),\n  register(window: Window, FZ: FocusZone) {\n    if (this._windowToOuterZoneMap.get(window)) {\n      this._windowToOuterZoneMap.get(window)?.add(FZ);\n    } else {\n      this._windowToOuterZoneMap.set(window, new Set([FZ]));\n    }\n\n    return this._windowToOuterZoneMap.get(window)?.size;\n  },\n  unregister(window: Window, FZ: FocusZone) {\n    this._windowToOuterZoneMap.get(window)?.delete(FZ);\n    if (this._windowToOuterZoneMap.get(window)?.size === 0) {\n      this._windowToOuterZoneMap.delete(window);\n    }\n  },\n  getOutZone(window: Window) {\n    return this._windowToOuterZoneMap.get(window);\n  },\n};\n\ninterface Point {\n  left: number;\n  top: number;\n}\nconst ALLOWED_INPUT_TYPES = ['text', 'number', 'password', 'email', 'tel', 'url', 'search'];\n\nconst ALLOW_VIRTUAL_ELEMENTS = false;\n\n/**\n * Raises a click on a target element based on a keyboard event.\n */\nfunction _raiseClickFromKeyboardEvent(target: Element, ev?: React.KeyboardEvent<HTMLElement>): void {\n  const event = new MouseEvent('click', {\n    ctrlKey: ev?.ctrlKey,\n    metaKey: ev?.metaKey,\n    shiftKey: ev?.shiftKey,\n    altKey: ev?.altKey,\n    bubbles: ev?.bubbles,\n    cancelable: ev?.cancelable,\n  });\n\n  target.dispatchEvent(event);\n}\n\n/**\n * Handle global tab presses so that we can patch tabindexes on the fly.\n */\nfunction _onKeyDownCapture(ev: KeyboardEvent) {\n  if (getCode(ev) === keyboardKey.Tab) {\n    outerZones.getOutZone(getWindow(ev.target as Element)!)?.forEach(zone => {\n      if (zone.props.shouldResetActiveElementWhenTabFromZone && document.activeElement !== zone._activeElement) {\n        // when focus is outside of component and shouldResetActiveElementWhenTabFromZone, reset tabIndex\n        zone._activeElement = null;\n      }\n      zone.updateTabIndexes();\n    });\n  }\n}\n\nexport class FocusZone extends React.Component<FocusZoneProps> implements IFocusZone {\n  static propTypes = {\n    className: PropTypes.string,\n    direction: PropTypes.number,\n    defaultTabbableElement: PropTypes.func,\n    shouldFocusOnMount: PropTypes.bool,\n    shouldResetActiveElementWhenTabFromZone: PropTypes.bool,\n    shouldRaiseClicks: PropTypes.bool,\n    shouldFocusInnerElementWhenReceivedFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    as: PropTypes.elementType as PropTypes.Requireable<React.ElementType>,\n    isCircularNavigation: PropTypes.bool,\n    shouldEnterInnerZone: PropTypes.func,\n    onActiveElementChanged: PropTypes.func,\n    shouldReceiveFocus: PropTypes.func,\n    handleTabKey: PropTypes.number,\n    shouldInputLoseFocusOnArrowKey: PropTypes.func,\n    stopFocusPropagation: PropTypes.bool,\n    onFocus: PropTypes.func,\n    preventDefaultWhenHandled: PropTypes.bool,\n    isRtl: PropTypes.bool,\n    preventFocusRestoration: PropTypes.bool,\n    pagingSupportDisabled: PropTypes.bool,\n    shouldIgnoreNotFocusable: PropTypes.bool,\n    innerRef: PropTypes.any,\n  };\n\n  static defaultProps: FocusZoneProps = {\n    isCircularNavigation: false,\n    direction: FocusZoneDirection.bidirectional,\n    as: 'div',\n    preventDefaultWhenHandled: true,\n    shouldRaiseClicks: false,\n  };\n\n  static displayName = 'FocusZone';\n  static className = 'ms-FocusZone';\n\n  static outerZones = outerZones;\n\n  _root: { current: HTMLElement | null } = { current: null };\n  _id: string;\n  /** The most recently focused child element. */\n  _activeElement: HTMLElement | null;\n\n  /**\n   * The index path to the last focused child element.\n   */\n  _lastIndexPath: number[] | undefined;\n\n  /**\n   * Flag to define when we've intentionally parked focus on the root element to temporarily\n   * hold focus until items appear within the zone.\n   */\n  _isParked: boolean = false;\n  _parkedTabIndex: string | null | undefined;\n\n  /** The child element with tabindex=0. */\n  _defaultFocusElement: HTMLElement | null;\n  _focusAlignment: Point;\n  _isInnerZone: boolean;\n\n  /** Used to allow us to move to next focusable element even when we're focusing on a input element when pressing tab */\n  _processingTabKey: boolean;\n\n  windowElement: Window | null;\n\n  constructor(props: FocusZoneProps) {\n    super(props);\n\n    this._id = _.uniqueId('FocusZone');\n\n    this._focusAlignment = {\n      left: 0,\n      top: 0,\n    };\n\n    this._processingTabKey = false;\n  }\n\n  componentDidMount(): void {\n    _allInstances[this._id] = this;\n\n    if (!this._root.current) {\n      return;\n    }\n\n    // @ts-ignore\n    this.windowElement = getWindow(this._root.current);\n    let parentElement = getParent(this._root.current, ALLOW_VIRTUAL_ELEMENTS);\n    const doc = getDocument(this._root.current);\n\n    // @ts-ignore\n    while (parentElement && parentElement !== doc.body && parentElement.nodeType === 1) {\n      if (isElementFocusZone(parentElement)) {\n        this._isInnerZone = true;\n        break;\n      }\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    if (!this._isInnerZone && this.windowElement) {\n      outerZones.register(this.windowElement, this);\n\n      if (outerZones.getOutZone(this.windowElement)?.size === 1) {\n        this.windowElement.addEventListener('keydown', _onKeyDownCapture, true);\n      }\n    }\n\n    this._root.current.addEventListener('blur', this._onBlur, true);\n\n    // Assign initial tab indexes so that we can set initial focus as appropriate.\n    this.updateTabIndexes();\n\n    if (this.props.defaultTabbableElement && typeof this.props.defaultTabbableElement === 'string') {\n      this._activeElement = this.getDocument().querySelector(this.props.defaultTabbableElement) as HTMLElement;\n    }\n\n    if (this.props.shouldFocusOnMount) {\n      this.focus();\n    }\n  }\n\n  componentDidUpdate(): void {\n    if (!this._root.current) {\n      return;\n    }\n    const doc = getDocument(this._root.current);\n\n    if (\n      !this.props.preventFocusRestoration &&\n      doc &&\n      this._lastIndexPath &&\n      (doc.activeElement === doc.body || doc.activeElement === null || doc.activeElement === this._root.current)\n    ) {\n      // The element has been removed after the render, attempt to restore focus.\n      const elementToFocus = getFocusableByIndexPath(this._root.current as HTMLElement, this._lastIndexPath);\n\n      if (elementToFocus) {\n        this.setActiveElement(elementToFocus, true);\n        elementToFocus.focus();\n        this.setParkedFocus(false);\n      } else {\n        // We had a focus path to restore, but now that path is unresolvable. Park focus\n        // on the container until we can try again.\n        this.setParkedFocus(true);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    delete _allInstances[this._id];\n    outerZones.unregister(this.windowElement!, this);\n\n    if (!this._isInnerZone) {\n      if (this.windowElement && !outerZones.getOutZone(this.windowElement)) {\n        this.windowElement.removeEventListener('keydown', _onKeyDownCapture, true);\n      }\n    }\n\n    if (this._root.current) {\n      this._root.current.removeEventListener('blur', this._onBlur, true);\n    }\n\n    this._activeElement = null;\n    this._defaultFocusElement = null;\n  }\n\n  render() {\n    const { className } = this.props;\n\n    const ElementType = getElementType(this.props);\n    const unhandledProps = getUnhandledProps(_.keys(FocusZone.propTypes) as any, this.props);\n\n    // Note, right before rendering/reconciling proceeds, we need to record if focus\n    // was in the zone before the update. This helper will track this and, if focus\n    // was actually in the zone, what the index path to the element is at this time.\n    // Then, later in componentDidUpdate, we can evaluate if we need to restore it in\n    // the case the element was removed.\n    this.evaluateFocusBeforeRender();\n    return (\n      <ElementType\n        {...unhandledProps}\n        ref={this.setRef}\n        className={cx(FocusZone.className, className)}\n        data-focuszone-id={this._id}\n        onKeyDown={this._onKeyDown}\n        onFocus={this._onFocus}\n        onMouseDownCapture={this._onMouseDown}\n      >\n        {this.props.children}\n      </ElementType>\n    );\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._root.current) {\n      if (\n        !forceIntoFirstElement &&\n        this._root.current.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        this._isInnerZone\n      ) {\n        const ownerZoneElement = this.getOwnerZone(this._root.current) as HTMLElement;\n\n        if (ownerZoneElement !== this._root.current) {\n          const ownerZone = _allInstances[ownerZoneElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n\n          return !!ownerZone && ownerZone.focusElement(this._root.current);\n        }\n\n        return false;\n      }\n      if (\n        !forceIntoFirstElement &&\n        this._activeElement &&\n        elementContains(this._root.current, this._activeElement, ALLOW_VIRTUAL_ELEMENTS) &&\n        isElementTabbable(this._activeElement)\n      ) {\n        this._activeElement.focus();\n        return true;\n      }\n\n      const firstChild = this._root.current.firstChild as HTMLElement;\n\n      return this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement);\n    }\n    return false;\n  }\n\n  /**\n   * Sets focus to the last tabbable item in the zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusLast(): boolean {\n    if (this._root.current) {\n      const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n\n      return this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement);\n    }\n\n    return false;\n  }\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * shouldReceiveFocus to create delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param element - The child element within the zone to focus.\n   * @param forceAlignment - If true, focus alignment will be set according to the element provided.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusElement(element: HTMLElement, forceAlignment?: boolean): boolean {\n    const { shouldReceiveFocus } = this.props;\n\n    if (shouldReceiveFocus && !shouldReceiveFocus(element)) {\n      return false;\n    }\n\n    if (element) {\n      this.setActiveElement(element, forceAlignment);\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  setRef = (elem: HTMLElement): void => {\n    this._root.current = elem;\n    handleRef(this.props.innerRef, elem);\n    if (process.env.NODE_ENV !== 'production') {\n      if (elem !== null && !(elem?.nodeType === 1)) {\n        throw new Error(\n          'FocusZone: we expect that ElementType (\"as\" prop) will be a plain element (div, span, etc.) or an element that supports ref forwarding (React.forwardRef())',\n        );\n      }\n    }\n  };\n\n  // Record if focus was in the zone, what the index path to the element is at this time.\n  evaluateFocusBeforeRender(): void {\n    if (!this._root.current) {\n      return;\n    }\n    const doc = getDocument(this._root.current);\n\n    if (!doc) {\n      return;\n    }\n\n    const focusedElement = doc.activeElement as HTMLElement;\n\n    // Only update the index path if we are not parked on the root.\n    if (focusedElement !== this._root.current) {\n      const shouldRestoreFocus = elementContains(this._root.current, focusedElement, ALLOW_VIRTUAL_ELEMENTS);\n\n      this._lastIndexPath = shouldRestoreFocus\n        ? getElementIndexPath(this._root.current as HTMLElement, doc.activeElement as HTMLElement)\n        : undefined;\n    }\n  }\n\n  /**\n   * When focus is in the zone at render time but then all focusable elements are removed,\n   * we \"park\" focus temporarily on the root. Once we update with focusable children, we restore\n   * focus to the closest path from previous. If the user tabs away from the parked container,\n   * we restore focusability to the pre-parked state.\n   */\n  setParkedFocus(isParked: boolean): void {\n    if (this._root.current && this._isParked !== isParked) {\n      this._isParked = isParked;\n\n      if (isParked) {\n        if (!this.props.allowFocusRoot) {\n          this._parkedTabIndex = this._root.current.getAttribute('tabindex');\n          this._root.current.setAttribute('tabindex', '-1');\n        }\n        this._root.current.focus();\n      } else if (!this.props.allowFocusRoot) {\n        if (this._parkedTabIndex) {\n          this._root.current.setAttribute('tabindex', this._parkedTabIndex);\n          this._parkedTabIndex = undefined;\n        } else {\n          this._root.current.removeAttribute('tabindex');\n        }\n      }\n    }\n  }\n\n  _onBlur = () => {\n    this.setParkedFocus(false);\n  };\n\n  _onFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    const {\n      onActiveElementChanged,\n      stopFocusPropagation,\n      shouldFocusInnerElementWhenReceivedFocus,\n      defaultTabbableElement,\n      shouldIgnoreNotFocusable,\n    } = this.props;\n\n    if (shouldIgnoreNotFocusable && ev.target?.dataset.isFocusable === 'false') {\n      return;\n    }\n\n    let newActiveElement: HTMLElement | null | undefined;\n    const isImmediateDescendant = this.isImmediateDescendantOfZone(ev.target as HTMLElement);\n\n    if (isImmediateDescendant) {\n      newActiveElement = ev.target as HTMLElement;\n    } else {\n      let parentElement = ev.target as HTMLElement;\n\n      while (parentElement && parentElement !== this._root.current) {\n        if (isElementTabbable(parentElement) && this.isImmediateDescendantOfZone(parentElement)) {\n          newActiveElement = parentElement;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n      }\n    }\n\n    // If an inner focusable element should be focused when FocusZone container receives focus\n    if (shouldFocusInnerElementWhenReceivedFocus && ev.target === this._root.current) {\n      const maybeElementToFocus =\n        defaultTabbableElement &&\n        typeof defaultTabbableElement === 'function' &&\n        this._root.current &&\n        defaultTabbableElement(this._root.current);\n\n      // try to focus defaultTabbable element\n      if (maybeElementToFocus && isElementTabbable(maybeElementToFocus)) {\n        newActiveElement = maybeElementToFocus;\n        maybeElementToFocus.focus();\n      } else {\n        // force focus on first focusable element\n        this.focus(true);\n        if (this._activeElement) {\n          // set to null as new active element was handled in method above\n\n          newActiveElement = null;\n        }\n      }\n    }\n\n    if (newActiveElement && newActiveElement !== this._activeElement) {\n      this._activeElement = newActiveElement;\n\n      if (isImmediateDescendant) {\n        this.setFocusAlignment(this._activeElement);\n        this.updateTabIndexes();\n      }\n    }\n\n    if (onActiveElementChanged) {\n      onActiveElementChanged(this._activeElement as HTMLElement, ev);\n    }\n\n    if (stopFocusPropagation) {\n      ev.stopPropagation();\n    }\n\n    _.invoke(this.props, 'onFocus', ev);\n  };\n\n  _onMouseDown = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { disabled } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    let target = ev.target as HTMLElement;\n    const path: HTMLElement[] = [];\n\n    while (target && target !== this._root.current) {\n      path.push(target);\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    }\n\n    while (path.length) {\n      target = path.pop() as HTMLElement;\n\n      if (target && isElementTabbable(target)) {\n        this.setActiveElement(target, true);\n      }\n\n      if (isElementFocusZone(target)) {\n        // Stop here since the focus zone will take care of its own children.\n        break;\n      }\n    }\n  };\n\n  setActiveElement(element: HTMLElement, forceAlignment?: boolean): void {\n    const previousActiveElement = this._activeElement;\n\n    this._activeElement = element;\n\n    if (previousActiveElement) {\n      if (isElementFocusZone(previousActiveElement)) {\n        this.updateTabIndexes(previousActiveElement);\n      }\n\n      previousActiveElement.tabIndex = -1;\n    }\n\n    if (this._activeElement) {\n      if (!this._focusAlignment || forceAlignment) {\n        this.setFocusAlignment(element, true, true);\n      }\n\n      this._activeElement.tabIndex = 0;\n    }\n  }\n\n  preventDefaultWhenHandled(ev: React.KeyboardEvent<HTMLElement>): void {\n    this.props.preventDefaultWhenHandled && ev.preventDefault();\n  }\n\n  /**\n   * Handle the keystrokes.\n   */\n  _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean | undefined => {\n    const { direction, disabled, shouldEnterInnerZone, pagingSupportDisabled } = this.props;\n\n    if (disabled) {\n      return undefined;\n    }\n\n    const doc = getDocument(this._root.current);\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // @ts-ignore\n    if (doc.activeElement === this._root.current && this._isInnerZone) {\n      // If this element has focus, it is being controlled by a parent.\n      // Ignore the keystroke.\n      return undefined;\n    }\n\n    // If the default has been prevented, do not process keyboard events.\n    if (ev.isDefaultPrevented()) {\n      return undefined;\n    }\n\n    if (\n      shouldEnterInnerZone &&\n      shouldEnterInnerZone(ev) &&\n      this.isImmediateDescendantOfZone(ev.target as HTMLElement)\n    ) {\n      // Try to focus\n      const innerZone = this.getFirstInnerZone();\n\n      if (innerZone) {\n        if (!innerZone.focus(true)) {\n          return undefined;\n        }\n      } else if (isElementFocusSubZone(ev.target as HTMLElement)) {\n        if (\n          !this.focusElement(\n            getNextElement(\n              ev.target as HTMLElement,\n              (ev.target as HTMLElement).firstChild as HTMLElement,\n              true,\n            ) as HTMLElement,\n          )\n        ) {\n          return undefined;\n        }\n      } else {\n        return undefined;\n      }\n    } else if (ev.altKey) {\n      return undefined;\n    } else {\n      switch (getCode(ev)) {\n        case SpacebarKey:\n          // @ts-ignore\n          if (this.tryInvokeClickForFocusable(ev.target as HTMLElement, ev)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.ArrowLeft:\n          if (direction !== FocusZoneDirection.vertical) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusLeft()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowRight:\n          if (direction !== FocusZoneDirection.vertical) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusRight()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowUp:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusUp()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowDown:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusDown()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.PageDown:\n          if (!pagingSupportDisabled && this.moveFocusPaging(true)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.PageUp:\n          if (!pagingSupportDisabled && this.moveFocusPaging(false)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.Tab:\n          if (\n            this.props.handleTabKey === FocusZoneTabbableElements.all ||\n            (this.props.handleTabKey === FocusZoneTabbableElements.inputOnly &&\n              this.isElementInput(ev.target as HTMLElement))\n          ) {\n            let focusChanged = false;\n            this._processingTabKey = true;\n            if (\n              direction === FocusZoneDirection.vertical ||\n              !this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP)\n            ) {\n              focusChanged = ev.shiftKey ? this.moveFocusUp() : this.moveFocusDown();\n            } else {\n              const tabWithDirection = this.props.isRtl ? !ev.shiftKey : ev.shiftKey;\n              focusChanged = tabWithDirection ? this.moveFocusLeft() : this.moveFocusRight();\n            }\n            this._processingTabKey = false;\n            if (focusChanged) {\n              break;\n            }\n          } else if (this.props.shouldResetActiveElementWhenTabFromZone) {\n            this._activeElement = null;\n          }\n          return undefined;\n\n        case keyboardKey.Home:\n          if (\n            this.isContentEditableElement(ev.target as HTMLElement) ||\n            (this.isElementInput(ev.target as HTMLElement) &&\n              !this.shouldInputLoseFocus(ev.target as HTMLInputElement, false))\n          ) {\n            return false;\n          }\n          const firstChild = this._root.current && (this._root.current.firstChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            firstChild &&\n            this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.End:\n          if (\n            this.isContentEditableElement(ev.target as HTMLElement) ||\n            (this.isElementInput(ev.target as HTMLElement) &&\n              !this.shouldInputLoseFocus(ev.target as HTMLInputElement, false))\n          ) {\n            return false;\n          }\n\n          const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.Enter:\n          // @ts-ignore\n          if (this.tryInvokeClickForFocusable(ev.target as HTMLElement, ev)) {\n            break;\n          }\n          return undefined;\n\n        default:\n          return undefined;\n      }\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    return undefined;\n  };\n\n  /**\n   * Walk up the dom try to find a focusable element.\n   */\n  tryInvokeClickForFocusable(targetElement: HTMLElement, ev?: React.KeyboardEvent<HTMLElement>): boolean {\n    let target = targetElement;\n\n    if (target === this._root.current || !this.props.shouldRaiseClicks) {\n      return false;\n    }\n\n    do {\n      if (\n        target.tagName === 'BUTTON' ||\n        target.tagName === 'A' ||\n        target.tagName === 'INPUT' ||\n        target.tagName === 'TEXTAREA'\n      ) {\n        return false;\n      }\n\n      if (\n        this.isImmediateDescendantOfZone(target) &&\n        target.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        target.getAttribute(IS_ENTER_DISABLED_ATTRIBUTE) !== 'true'\n      ) {\n        _raiseClickFromKeyboardEvent(target, ev);\n        return true;\n      }\n\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    } while (target !== this._root.current);\n\n    return false;\n  }\n\n  /**\n   * Traverse to find first child zone.\n   */\n  getFirstInnerZone(forRootElement?: HTMLElement | null): FocusZone | null {\n    const rootElement = forRootElement || this._activeElement || this._root.current;\n\n    if (!rootElement) {\n      return null;\n    }\n\n    if (isElementFocusZone(rootElement)) {\n      return _allInstances[rootElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n    }\n\n    let child = rootElement.firstElementChild as HTMLElement | null;\n\n    while (child) {\n      if (isElementFocusZone(child)) {\n        return _allInstances[child.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n      }\n      const match = this.getFirstInnerZone(child);\n\n      if (match) {\n        return match;\n      }\n\n      child = child.nextElementSibling as HTMLElement | null;\n    }\n\n    return null;\n  }\n\n  moveFocus(\n    isForward: boolean,\n    getDistanceFromCenter: (activeRect: ClientRect, targetRect: ClientRect) => number,\n    // @ts-ignore\n    ev?: Event,\n    useDefaultWrap: boolean = true,\n  ): boolean {\n    let element = this._activeElement;\n    let candidateDistance = -1;\n    let candidateElement: HTMLElement | undefined = undefined;\n    let changedFocus = false;\n    const isBidirectional = this.props.direction === FocusZoneDirection.bidirectional;\n\n    if (!element || !this._root.current) {\n      return false;\n    }\n\n    if (this.isElementInput(element)) {\n      if (!this.shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n\n    const activeRect = isBidirectional ? element.getBoundingClientRect() : null;\n\n    do {\n      element = (\n        isForward ? getNextElement(this._root.current, element) : getPreviousElement(this._root.current, element)\n      ) as HTMLElement;\n\n      if (isBidirectional) {\n        if (element) {\n          const targetRect = element.getBoundingClientRect();\n          const elementDistance = getDistanceFromCenter(activeRect as ClientRect, targetRect);\n\n          if (elementDistance === -1 && candidateDistance === -1) {\n            candidateElement = element;\n            break;\n          }\n\n          if (elementDistance > -1 && (candidateDistance === -1 || elementDistance < candidateDistance)) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n\n          if (candidateDistance >= 0 && elementDistance < 0) {\n            break;\n          }\n        }\n      } else {\n        candidateElement = element;\n        break;\n      }\n    } while (element);\n\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n\n    return changedFocus;\n  }\n\n  moveFocusDown(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.left;\n\n    if (\n      this.moveFocus(true, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n\n        if (targetRectTop < activeRectBottom) {\n          if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectTop >= activeRectBottom) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusUp(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.left;\n\n    if (\n      this.moveFocus(false, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectTop = Math.floor(activeRect.top);\n\n        if (targetRectBottom > activeRectTop) {\n          if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectBottom <= activeRectTop) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusLeft(): boolean {\n    const shouldWrap = this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this.moveFocus(\n        // @ts-ignore\n        this.props.isRtl,\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (this.props.isRtl) {\n            // When in RTL, this comparison should be the same as the one in moveFocusRight for LTR.\n            // Going left at a leftmost rectangle will go down a line instead of up a line like in LTR.\n            // This is important, because we want to be comparing the top of the target rect\n            // with the bottom of the active rect.\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.right <= activeRect.right &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = activeRect.right - targetRect.right;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /* ev */,\n        shouldWrap,\n      )\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusRight(): boolean {\n    const shouldWrap = this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this.moveFocus(\n        !this.props.isRtl,\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (this.props.isRtl) {\n            // When in RTL, this comparison should be the same as the one in moveFocusLeft for LTR.\n            // Going right at a rightmost rectangle will go up a line instead of down a line like in LTR.\n            // This is important, because we want to be comparing the bottom of the target rect\n            // with the top of the active rect.\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.left >= activeRect.left &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = targetRect.left - activeRect.left;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /* ev */,\n        shouldWrap,\n      )\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  getHorizontalDistanceFromCenter = (isForward: boolean, activeRect: ClientRect, targetRect: ClientRect): number => {\n    const leftAlignment = this._focusAlignment.left;\n    // ClientRect values can be floats that differ by very small fractions of a decimal.\n    // If the difference between top and bottom are within a pixel then we should treat\n    // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n    // but without Math.Floor they will be handled incorrectly.\n    const targetRectTop = Math.floor(targetRect.top);\n    const activeRectBottom = Math.floor(activeRect.bottom);\n    const targetRectBottom = Math.floor(targetRect.bottom);\n    const activeRectTop = Math.floor(activeRect.top);\n    const isValidCandidateOnpagingDown = isForward && targetRectTop > activeRectBottom;\n    const isValidCandidateOnpagingUp = !isForward && targetRectBottom < activeRectTop;\n\n    if (isValidCandidateOnpagingDown || isValidCandidateOnpagingUp) {\n      if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n        return 0;\n      }\n      return Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n    }\n\n    if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n      return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n    }\n    return LARGE_DISTANCE_FROM_CENTER;\n  };\n\n  moveFocusPaging(isForward: boolean, useDefaultWrap: boolean = true): boolean {\n    let element = this._activeElement;\n    if (!element || !this._root.current) {\n      return false;\n    }\n    if (this.isElementInput(element)) {\n      if (!this.shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n    const scrollableParent = findScrollableParent(element);\n    if (!scrollableParent) {\n      return false;\n    }\n    let candidateDistance = -1;\n    let candidateElement = undefined;\n    let targetTop = -1;\n    let targetBottom = -1;\n    const pagesize = (scrollableParent as HTMLElement).clientHeight;\n    const activeRect = element.getBoundingClientRect();\n    do {\n      element = isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element);\n      if (element) {\n        const targetRect = element.getBoundingClientRect();\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const activeRectTop = Math.floor(activeRect.top);\n        const elementDistance = this.getHorizontalDistanceFromCenter(isForward, activeRect, targetRect);\n        const isElementPassedPageSizeOnPagingDown = isForward && targetRectTop > activeRectBottom + pagesize;\n        const isElementPassedPageSizeOnPagingUp = !isForward && targetRectBottom < activeRectTop - pagesize;\n\n        if (isElementPassedPageSizeOnPagingDown || isElementPassedPageSizeOnPagingUp) {\n          break;\n        }\n        if (elementDistance > -1) {\n          // for paging down\n          if (isForward && targetRectTop > targetTop) {\n            targetTop = targetRectTop;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (!isForward && targetRectBottom < targetBottom) {\n            // for paging up\n            targetBottom = targetRectBottom;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (candidateDistance === -1 || elementDistance <= candidateDistance) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n        }\n      }\n    } while (element);\n\n    let changedFocus = false;\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n      this.setFocusAlignment(candidateElement as HTMLElement, false, true);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n    return changedFocus;\n  }\n\n  setFocusAlignment(element: HTMLElement, isHorizontal?: boolean, isVertical?: boolean) {\n    if (\n      this.props.direction === FocusZoneDirection.bidirectional &&\n      (!this._focusAlignment || isHorizontal || isVertical)\n    ) {\n      const rect = element.getBoundingClientRect();\n      const left = rect.left + rect.width / 2;\n      const top = rect.top + rect.height / 2;\n\n      if (!this._focusAlignment) {\n        this._focusAlignment = { left, top };\n      }\n\n      if (isHorizontal) {\n        this._focusAlignment.left = left;\n      }\n\n      if (isVertical) {\n        this._focusAlignment.top = top;\n      }\n    }\n  }\n\n  isImmediateDescendantOfZone(element?: HTMLElement): boolean {\n    return this.getOwnerZone(element) === this._root.current;\n  }\n\n  getOwnerZone(element?: HTMLElement): HTMLElement | null {\n    const doc = getDocument(this._root.current);\n    let parentElement = getParent(element as HTMLElement, ALLOW_VIRTUAL_ELEMENTS);\n\n    // @ts-ignore\n    while (parentElement && parentElement !== this._root.current && parentElement !== doc.body) {\n      if (isElementFocusZone(parentElement)) {\n        return parentElement;\n      }\n\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    return this._root.current;\n  }\n\n  updateTabIndexes(onElement?: HTMLElement) {\n    let element = onElement;\n\n    if (\n      !this._activeElement &&\n      this.props.defaultTabbableElement &&\n      typeof this.props.defaultTabbableElement === 'function'\n    ) {\n      this._activeElement = this.props.defaultTabbableElement(this._root.current as HTMLElement);\n    }\n\n    if (!element && this._root.current) {\n      this._defaultFocusElement = null;\n      element = this._root.current;\n      if (this._activeElement && !elementContains(element, this._activeElement, ALLOW_VIRTUAL_ELEMENTS)) {\n        this._activeElement = null;\n      }\n    }\n\n    // If active element changes state to disabled, set it to null.\n    // Otherwise, we lose keyboard accessibility to other elements in focus zone.\n    if (this._activeElement && !isElementTabbable(this._activeElement)) {\n      this._activeElement = null;\n    }\n\n    const childNodes = element && element.children;\n\n    for (let childIndex = 0; childNodes && childIndex < childNodes.length; childIndex++) {\n      const child = childNodes[childIndex] as HTMLElement;\n\n      if (!isElementFocusZone(child)) {\n        // If the item is explicitly set to not be focusable then TABINDEX needs to be set to -1.\n        if (child.getAttribute && child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'false') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n\n        if (isElementTabbable(child)) {\n          if (this.props.disabled) {\n            child.setAttribute(TABINDEX, '-1');\n          } else if (\n            !this._isInnerZone &&\n            ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n          ) {\n            this._defaultFocusElement = child;\n            if (child.getAttribute(TABINDEX) !== '0') {\n              child.setAttribute(TABINDEX, '0');\n            }\n          } else if (child.getAttribute(TABINDEX) !== '-1') {\n            child.setAttribute(TABINDEX, '-1');\n          }\n        } else if (child.tagName === 'svg' && child.getAttribute('focusable') !== 'false') {\n          // Disgusting IE hack. Sad face.\n          child.setAttribute('focusable', 'false');\n        }\n      } else if (child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true') {\n        if (\n          !this._isInnerZone &&\n          ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n        ) {\n          this._defaultFocusElement = child;\n          if (child.getAttribute(TABINDEX) !== '0') {\n            child.setAttribute(TABINDEX, '0');\n          }\n        } else if (child.getAttribute(TABINDEX) !== '-1') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n      }\n\n      this.updateTabIndexes(child);\n    }\n  }\n\n  isContentEditableElement(element: HTMLElement): boolean {\n    return element && element.getAttribute('contenteditable') === 'true';\n  }\n\n  isElementInput(element: HTMLElement): boolean {\n    if (\n      element &&\n      element.tagName &&\n      (element.tagName.toLowerCase() === 'input' || element.tagName.toLowerCase() === 'textarea')\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  shouldInputLoseFocus(element: HTMLInputElement, isForward?: boolean) {\n    // If a tab was used, we want to focus on the next element.\n    if (\n      !this._processingTabKey &&\n      element &&\n      element.type &&\n      ALLOWED_INPUT_TYPES.indexOf(element.type.toLowerCase()) > -1\n    ) {\n      const selectionStart = element.selectionStart;\n      const selectionEnd = element.selectionEnd;\n      const isRangeSelected = selectionStart !== selectionEnd;\n      const inputValue = element.value;\n      const isReadonly = element.readOnly;\n\n      // We shouldn't lose focus in the following cases:\n      // 1. There is range selected.\n      // 2. When selection start is larger than 0 and it is backward and not readOnly.\n      // 3. when selection start is not the end of length and it is forward and not readOnly.\n      // 4. We press any of the arrow keys when our handleTabKey isn't none or undefined (only losing focus if we hit tab)\n      // and if shouldInputLoseFocusOnArrowKey is defined, if scenario prefers to not loose the focus which is determined by calling the\n      // callback shouldInputLoseFocusOnArrowKey\n      if (\n        isRangeSelected ||\n        (selectionStart! > 0 && !isForward && !isReadonly) ||\n        (selectionStart !== inputValue.length && isForward && !isReadonly) ||\n        (!!this.props.handleTabKey &&\n          !(this.props.shouldInputLoseFocusOnArrowKey && this.props.shouldInputLoseFocusOnArrowKey(element)))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  shouldWrapFocus(\n    element: HTMLElement,\n    noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap',\n  ): boolean {\n    return !!this.props.checkForNoWrap ? shouldWrapFocus(element, noWrapDataAttribute) : true;\n  }\n\n  getDocument(): Document {\n    return getDocument(this._root.current)!;\n  }\n}\n"],"mappings":"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"}