{"version":3,"file":"useContextSelectors.js","names":["React","_interopRequireWildcard","require","_utils","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","useContextSelectors","context","selectors","contextValue","useContext","value","current","version","listeners","selected","keys","forEach","_React$useReducer","useReducer","prevState","payload","stateHasNotChanged","every","is","statePayloadHasChanged","some","nextSelected","selectedHasNotChanged","e","concat","state","dispatch","hasSelectedValuesUpdates","find","undefined","useIsomorphicLayoutEffect","push","index","indexOf","splice","exports"],"sources":["context-selector/useContextSelectors.ts"],"sourcesContent":["import * as React from 'react';\nimport { Context, ContextSelector, ContextVersion, ContextValues } from './types';\nimport { useIsomorphicLayoutEffect } from './utils';\n\n/**\n * This hook returns context selected value by selectors.\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referencially changed.\n */\nexport const useContextSelectors = <\n  Value extends Record<string, any>,\n  Properties extends string,\n  Selectors extends Record<Properties, ContextSelector<Value, SelectedValue>>,\n  SelectedValue extends any,\n>(\n  context: Context<Value>,\n  selectors: Selectors,\n): Record<Properties, SelectedValue> => {\n  const contextValue = React.useContext(context as unknown as Context<ContextValues<Value>>);\n\n  const {\n    value: { current: value },\n    version: { current: version },\n    listeners,\n  } = contextValue;\n\n  const selected = {} as Record<Properties, SelectedValue>;\n  Object.keys(selectors).forEach((key: Properties) => {\n    selected[key] = selectors[key](value);\n  });\n\n  const [state, dispatch] = React.useReducer(\n    (\n      prevState: readonly [\n        Value /* contextValue */,\n        Record<Properties, SelectedValue> /* { [key]: selector(value) } */,\n      ],\n      payload:\n        | undefined // undefined from render below\n        | readonly [ContextVersion, Value], // from provider effect\n    ) => {\n      if (!payload) {\n        // early bail out when is dispatched during render\n        return [value, selected] as const;\n      }\n\n      if (payload[0] <= version) {\n        const stateHasNotChanged = Object.keys(selectors).every((key: Properties) =>\n          Object.is((prevState[1] as { [key: string]: any })[key] as SelectedValue, selected[key]),\n        );\n\n        if (stateHasNotChanged) {\n          return prevState; // bail out\n        }\n\n        return [value, selected] as const;\n      }\n\n      try {\n        const statePayloadHasChanged = Object.keys(prevState[0]).some((key: Properties) => {\n          return !Object.is(prevState[0] /* previous contextValue */[key], payload[1] /* current contextValue */[key]);\n        });\n\n        if (!statePayloadHasChanged) {\n          return prevState;\n        }\n\n        const nextSelected = {} as Record<Properties, SelectedValue>;\n        Object.keys(selectors).forEach((key: Properties) => {\n          nextSelected[key] = selectors[key](payload[1]);\n        });\n\n        const selectedHasNotChanged = Object.keys(selectors).every((key: Properties) => {\n          return Object.is(prevState[1][key] /* previous { [key]: selector(value) } */, nextSelected[key]);\n        });\n\n        if (selectedHasNotChanged) {\n          return prevState;\n        }\n\n        return [payload[1], nextSelected] as const;\n      } catch (e) {\n        // ignored (stale props or some other reason)\n      }\n      return [...prevState] as const; // schedule update\n    },\n    [value, selected] as const,\n  );\n\n  // schedule re-render when selected context is updated\n  const hasSelectedValuesUpdates = Object.keys(selectors).find(\n    (key: Properties) => !Object.is(state[1] /* previous { [key]: selector(value) } */[key], selected[key]),\n  );\n  if (hasSelectedValuesUpdates !== undefined) {\n    dispatch(undefined);\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    listeners.push(dispatch);\n\n    return () => {\n      const index = listeners.indexOf(dispatch);\n      listeners.splice(index, 1);\n    };\n  }, [listeners]);\n\n  return state[1] as Record<Properties, SelectedValue>;\n};\n"],"mappings":"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"}