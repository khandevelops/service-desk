{"version":3,"file":"shouldHandleOnKeys.js","names":["_accessibility","require","isKeyModifiersMatch","modifierValue","combinationValue","undefined","shouldHandleOnKeys","event","keysCombinations","some","keysCombination","keyCode","getCode","altKey","shiftKey","metaKey","ctrlKey","exports"],"sources":["accessibility/shouldHandleOnKeys.ts"],"sourcesContent":["import { KeyCombinations, getCode } from '@fluentui/accessibility';\nimport * as React from 'react';\n\nconst isKeyModifiersMatch = (modifierValue: boolean, combinationValue?: boolean) => {\n  if (combinationValue === undefined) {\n    return true;\n  }\n\n  return modifierValue === combinationValue;\n};\n\nexport const shouldHandleOnKeys = (event: React.KeyboardEvent, keysCombinations: KeyCombinations[]): boolean =>\n  keysCombinations.some(\n    keysCombination =>\n      keysCombination.keyCode === getCode(event) &&\n      isKeyModifiersMatch(event.altKey, keysCombination.altKey) &&\n      isKeyModifiersMatch(event.shiftKey, keysCombination.shiftKey) &&\n      isKeyModifiersMatch(event.metaKey, keysCombination.metaKey) &&\n      isKeyModifiersMatch(event.ctrlKey, keysCombination.ctrlKey),\n  );\n"],"mappings":";;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AAGA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,aAAsB,EAAEC,gBAA0B,EAAK;EAClF,IAAIA,gBAAgB,KAAKC,SAAS,EAAE;IAClC,OAAO,IAAI;EACb;EAEA,OAAOF,aAAa,KAAKC,gBAAgB;AAC3C,CAAC;AAEM,IAAME,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,KAA0B,EAAEC,gBAAmC;EAAA,OAChGA,gBAAgB,CAACC,IAAI,CACnB,UAAAC,eAAe;IAAA,OACbA,eAAe,CAACC,OAAO,KAAK,IAAAC,sBAAO,EAACL,KAAK,CAAC,IAC1CL,mBAAmB,CAACK,KAAK,CAACM,MAAM,EAAEH,eAAe,CAACG,MAAM,CAAC,IACzDX,mBAAmB,CAACK,KAAK,CAACO,QAAQ,EAAEJ,eAAe,CAACI,QAAQ,CAAC,IAC7DZ,mBAAmB,CAACK,KAAK,CAACQ,OAAO,EAAEL,eAAe,CAACK,OAAO,CAAC,IAC3Db,mBAAmB,CAACK,KAAK,CAACS,OAAO,EAAEN,eAAe,CAACM,OAAO,CAAC;EAAA,CAC/D,CAAC;AAAA;AAACC,OAAA,CAAAX,kBAAA,GAAAA,kBAAA"}