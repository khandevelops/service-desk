{"version":3,"file":"getAccessibility.js","names":["_getKeyDownHandlers","require","emptyBehavior","attributes","keyHandlers","getAccessibility","displayName","behavior","behaviorProps","isRtlEnabled","actionHandlers","undefined","definition","keyActions","getKeyDownHandlers","focusZone","props","Object","assign","preventFocusRestoration","process","env","NODE_ENV","keys","forEach","slotName","validatorName","exports"],"sources":["accessibility/getAccessibility.ts"],"sourcesContent":["import {\n  Accessibility,\n  AccessibilityAttributes,\n  AccessibilityAttributesBySlot,\n  AccessibilityDefinition,\n} from '@fluentui/accessibility';\n\nimport { getKeyDownHandlers } from './getKeyDownHandlers';\nimport { AccessibilityActionHandlers, ReactAccessibilityBehavior } from './types';\n\nconst emptyBehavior: ReactAccessibilityBehavior = {\n  attributes: {},\n  keyHandlers: {},\n};\n\nexport const getAccessibility = <Props extends Record<string, any>>(\n  displayName: string,\n  behavior: Accessibility<Props>,\n  behaviorProps: Props,\n  isRtlEnabled: boolean,\n  actionHandlers?: AccessibilityActionHandlers,\n): ReactAccessibilityBehavior => {\n  if (behavior === null || behavior === undefined) {\n    return emptyBehavior;\n  }\n\n  const definition: AccessibilityDefinition = behavior(behaviorProps);\n  const keyHandlers =\n    actionHandlers && definition.keyActions\n      ? getKeyDownHandlers(actionHandlers, definition.keyActions, isRtlEnabled)\n      : {};\n\n  if (definition.focusZone) {\n    definition.focusZone.props = {\n      // maintain behavior of focus zone in v7 behaviors\n      preventFocusRestoration: true,\n      ...definition.focusZone.props,\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // For the non-production builds we enable the runtime accessibility attributes validator.\n    // We're adding the data-aa-class attribute which is being consumed by the validator, the\n    // schema is located in @fluentui/ability-attributes package.\n    if (definition.attributes) {\n      Object.keys(definition.attributes).forEach(slotName => {\n        const validatorName =\n          (definition.attributes as AccessibilityAttributesBySlot)[slotName]['data-aa-class'] ||\n          `${displayName}${slotName === 'root' ? '' : `__${slotName}`}`;\n\n        if (!(definition.attributes as AccessibilityAttributesBySlot)[slotName]) {\n          (definition.attributes as AccessibilityAttributesBySlot)[slotName] = {} as AccessibilityAttributes;\n        }\n\n        (definition.attributes as AccessibilityAttributesBySlot)[slotName]['data-aa-class'] = validatorName;\n      });\n    }\n  }\n\n  return {\n    ...emptyBehavior,\n    ...definition,\n    keyHandlers,\n  };\n};\n"],"mappings":";;;;AAOA,IAAAA,mBAAA,GAAAC,OAAA;AAGA,IAAMC,aAAyC,GAAG;EAChDC,UAAU,EAAE,CAAC,CAAC;EACdC,WAAW,EAAE,CAAC;AAChB,CAAC;AAEM,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAC3BC,WAAmB,EACnBC,QAA8B,EAC9BC,aAAoB,EACpBC,YAAqB,EACrBC,cAA4C,EACb;EAC/B,IAAIH,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKI,SAAS,EAAE;IAC/C,OAAOT,aAAa;EACtB;EAEA,IAAMU,UAAmC,GAAGL,QAAQ,CAACC,aAAa,CAAC;EACnE,IAAMJ,WAAW,GACfM,cAAc,IAAIE,UAAU,CAACC,UAAU,GACnC,IAAAC,sCAAkB,EAACJ,cAAc,EAAEE,UAAU,CAACC,UAAU,EAAEJ,YAAY,CAAC,GACvE,CAAC,CAAC;EAER,IAAIG,UAAU,CAACG,SAAS,EAAE;IACxBH,UAAU,CAACG,SAAS,CAACC,KAAK,GAAAC,MAAA,CAAAC,MAAA;MACxB;MACAC,uBAAuB,EAAE;IAAI,GAC1BP,UAAU,CAACG,SAAS,CAACC,KAAK,CAC9B;EACH;EAEA,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC;IACA;IACA;IACA,IAAIV,UAAU,CAACT,UAAU,EAAE;MACzBc,MAAM,CAACM,IAAI,CAACX,UAAU,CAACT,UAAU,CAAC,CAACqB,OAAO,CAAC,UAAAC,QAAQ,EAAI;QACrD,IAAMC,aAAa,GAChBd,UAAU,CAACT,UAAU,CAAmCsB,QAAQ,CAAC,CAAC,eAAe,CAAC,SAChFnB,WAAW,IAAGmB,QAAQ,KAAK,MAAM,GAAG,EAAE,UAAQA,QAAU,CAAE;QAE/D,IAAI,CAAEb,UAAU,CAACT,UAAU,CAAmCsB,QAAQ,CAAC,EAAE;UACtEb,UAAU,CAACT,UAAU,CAAmCsB,QAAQ,CAAC,GAAG,CAAC,CAA4B;QACpG;QAECb,UAAU,CAACT,UAAU,CAAmCsB,QAAQ,CAAC,CAAC,eAAe,CAAC,GAAGC,aAAa;MACrG,CAAC,CAAC;IACJ;EACF;EAEA,OAAAT,MAAA,CAAAC,MAAA,KACKhB,aAAa,EACbU,UAAU;IACbR,WAAW,EAAXA;EAAW;AAEf,CAAC;AAACuB,OAAA,CAAAtB,gBAAA,GAAAA,gBAAA"}