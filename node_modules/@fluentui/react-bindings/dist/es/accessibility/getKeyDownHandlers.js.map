{"version":3,"file":"getKeyDownHandlers.js","names":["keyboardKey","shouldHandleOnKeys","rtlKeyMap","_rtlKeyMap","ArrowRight","ArrowLeft","getKeyDownHandlers","componentActionHandlers","behaviorActions","isRtlEnabled","slotKeyHandlers","componentHandlerNames","Object","keys","forEach","slotName","behaviorSlotActions","handledActions","filter","actionName","slotAction","actionHasKeyCombinations","Array","isArray","keyCombinations","length","actionHandledByComponent","indexOf","onKeyDown","event","map","keyCombination","keyToRtlKey","keyCode"],"sources":["accessibility/getKeyDownHandlers.ts"],"sourcesContent":["import { KeyActions, keyboardKey } from '@fluentui/accessibility';\nimport * as React from 'react';\n\nimport { shouldHandleOnKeys } from './shouldHandleOnKeys';\nimport { AccessibilityActionHandlers, AccessibilityKeyHandlers } from './types';\n\nconst rtlKeyMap: Record<number, number> = {\n  [keyboardKey.ArrowRight]: keyboardKey.ArrowLeft,\n  [keyboardKey.ArrowLeft]: keyboardKey.ArrowRight,\n};\n\n/**\n * Assigns onKeyDown handler to the slot element, based on Component's actions\n * and keys mappings defined in Accessibility behavior\n * @param {AccessibilityActionHandlers} componentActionHandlers Actions handlers defined in a component.\n * @param {KeyActions} behaviorActions Mappings of actions and keys defined in Accessibility behavior.\n * @param {boolean} isRtlEnabled Indicates if Left and Right arrow keys should be swapped in RTL mode.\n */\nexport const getKeyDownHandlers = (\n  componentActionHandlers: AccessibilityActionHandlers,\n  behaviorActions: KeyActions,\n  isRtlEnabled?: boolean,\n): AccessibilityKeyHandlers => {\n  const slotKeyHandlers: AccessibilityKeyHandlers = {};\n\n  if (!componentActionHandlers || !behaviorActions) {\n    return slotKeyHandlers;\n  }\n\n  const componentHandlerNames = Object.keys(componentActionHandlers);\n\n  Object.keys(behaviorActions).forEach(slotName => {\n    const behaviorSlotActions = behaviorActions[slotName];\n    const handledActions = Object.keys(behaviorSlotActions).filter(actionName => {\n      const slotAction = behaviorSlotActions[actionName];\n\n      const actionHasKeyCombinations =\n        Array.isArray(slotAction.keyCombinations) && slotAction.keyCombinations.length > 0;\n      const actionHandledByComponent = componentHandlerNames.indexOf(actionName) !== -1;\n\n      return actionHasKeyCombinations && actionHandledByComponent;\n    });\n\n    if (handledActions.length > 0) {\n      slotKeyHandlers[slotName] = {\n        onKeyDown: (event: React.KeyboardEvent) => {\n          handledActions.forEach(actionName => {\n            let keyCombinations = behaviorSlotActions[actionName].keyCombinations;\n\n            if (keyCombinations) {\n              if (isRtlEnabled) {\n                keyCombinations = keyCombinations.map(keyCombination => {\n                  const keyToRtlKey = rtlKeyMap[keyCombination.keyCode];\n                  if (keyToRtlKey) {\n                    keyCombination.keyCode = keyToRtlKey;\n                  }\n                  return keyCombination;\n                });\n              }\n\n              if (shouldHandleOnKeys(event, keyCombinations)) {\n                componentActionHandlers[actionName](event);\n              }\n            }\n          });\n        },\n      };\n    }\n  });\n\n  return slotKeyHandlers;\n};\n"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,yBAAyB;AAGjE,SAASC,kBAAkB,QAAQ,sBAAsB;AAGzD,IAAMC,SAAiC,IAAAC,UAAA,OAAAA,UAAA,CACpCH,WAAW,CAACI,UAAU,IAAGJ,WAAW,CAACK,SAAS,EAAAF,UAAA,CAC9CH,WAAW,CAACK,SAAS,IAAGL,WAAW,CAACI,UAAU,EAAAD,UAAA,CAChD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAC7BC,uBAAoD,EACpDC,eAA2B,EAC3BC,YAAsB,EACO;EAC7B,IAAMC,eAAyC,GAAG,CAAC,CAAC;EAEpD,IAAI,CAACH,uBAAuB,IAAI,CAACC,eAAe,EAAE;IAChD,OAAOE,eAAe;EACxB;EAEA,IAAMC,qBAAqB,GAAGC,MAAM,CAACC,IAAI,CAACN,uBAAuB,CAAC;EAElEK,MAAM,CAACC,IAAI,CAACL,eAAe,CAAC,CAACM,OAAO,CAAC,UAAAC,QAAQ,EAAI;IAC/C,IAAMC,mBAAmB,GAAGR,eAAe,CAACO,QAAQ,CAAC;IACrD,IAAME,cAAc,GAAGL,MAAM,CAACC,IAAI,CAACG,mBAAmB,CAAC,CAACE,MAAM,CAAC,UAAAC,UAAU,EAAI;MAC3E,IAAMC,UAAU,GAAGJ,mBAAmB,CAACG,UAAU,CAAC;MAElD,IAAME,wBAAwB,GAC5BC,KAAK,CAACC,OAAO,CAACH,UAAU,CAACI,eAAe,CAAC,IAAIJ,UAAU,CAACI,eAAe,CAACC,MAAM,GAAG,CAAC;MACpF,IAAMC,wBAAwB,GAAGf,qBAAqB,CAACgB,OAAO,CAACR,UAAU,CAAC,KAAK,CAAC,CAAC;MAEjF,OAAOE,wBAAwB,IAAIK,wBAAwB;IAC7D,CAAC,CAAC;IAEF,IAAIT,cAAc,CAACQ,MAAM,GAAG,CAAC,EAAE;MAC7Bf,eAAe,CAACK,QAAQ,CAAC,GAAG;QAC1Ba,SAAS,EAAE,SAAAA,UAACC,KAA0B,EAAK;UACzCZ,cAAc,CAACH,OAAO,CAAC,UAAAK,UAAU,EAAI;YACnC,IAAIK,eAAe,GAAGR,mBAAmB,CAACG,UAAU,CAAC,CAACK,eAAe;YAErE,IAAIA,eAAe,EAAE;cACnB,IAAIf,YAAY,EAAE;gBAChBe,eAAe,GAAGA,eAAe,CAACM,GAAG,CAAC,UAAAC,cAAc,EAAI;kBACtD,IAAMC,WAAW,GAAG9B,SAAS,CAAC6B,cAAc,CAACE,OAAO,CAAC;kBACrD,IAAID,WAAW,EAAE;oBACfD,cAAc,CAACE,OAAO,GAAGD,WAAW;kBACtC;kBACA,OAAOD,cAAc;gBACvB,CAAC,CAAC;cACJ;cAEA,IAAI9B,kBAAkB,CAAC4B,KAAK,EAAEL,eAAe,CAAC,EAAE;gBAC9CjB,uBAAuB,CAACY,UAAU,CAAC,CAACU,KAAK,CAAC;cAC5C;YACF;UACF,CAAC,CAAC;QACJ;MACF,CAAC;IACH;EACF,CAAC,CAAC;EAEF,OAAOnB,eAAe;AACxB,CAAC"}