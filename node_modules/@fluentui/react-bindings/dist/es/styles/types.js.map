{"version":3,"file":"types.js","names":[],"sources":["styles/types.ts"],"sourcesContent":["import { DebugData, ICSSInJSStyle, PropsWithVarsAndStyles } from '@fluentui/styles';\nimport { ProviderContextPrepared } from '../context';\n\n// Notice:\n// This temporary lives here, will be remove once `animation` prop will be dropped\nexport type ComponentAnimationProp = {\n  name: string;\n  delay?: string;\n  direction?: string;\n  duration?: string;\n  fillMode?: string;\n  iterationCount?: string;\n  playState?: string;\n  timingFunction?: string;\n  keyframeParams?: object;\n};\n\nexport type ComponentSlotClasses = Record<string, string>;\n\n// Heads Up!\n// Keep in sync with packages/react-proptypes/src/index.ts\nexport type ComponentDesignProp = {\n  display?: ICSSInJSStyle['display'];\n  position?: ICSSInJSStyle['position'];\n\n  top?: ICSSInJSStyle['top'];\n  bottom?: ICSSInJSStyle['bottom'];\n  left?: ICSSInJSStyle['left'];\n  right?: ICSSInJSStyle['right'];\n\n  padding?: ICSSInJSStyle['padding'];\n  paddingTop?: ICSSInJSStyle['paddingTop'];\n  paddingRight?: ICSSInJSStyle['paddingRight'];\n  paddingBottom?: ICSSInJSStyle['paddingBottom'];\n  paddingLeft?: ICSSInJSStyle['paddingLeft'];\n\n  margin?: ICSSInJSStyle['margin'];\n  marginTop?: ICSSInJSStyle['marginTop'];\n  marginRight?: ICSSInJSStyle['marginRight'];\n  marginBottom?: ICSSInJSStyle['marginBottom'];\n  marginLeft?: ICSSInJSStyle['marginLeft'];\n\n  width?: ICSSInJSStyle['width'];\n  height?: ICSSInJSStyle['height'];\n  minWidth?: ICSSInJSStyle['minWidth'];\n  maxWidth?: ICSSInJSStyle['maxWidth'];\n  minHeight?: ICSSInJSStyle['minHeight'];\n  maxHeight?: ICSSInJSStyle['maxHeight'];\n};\n\nexport type PrimitiveProps = Record<string, boolean | number | string | undefined>;\n\nexport type ResolveStylesOptions = Omit<ProviderContextPrepared, 'target'> & {\n  className?: string;\n  allDisplayNames: string[];\n  primaryDisplayName: string;\n  componentProps: Record<string, any>;\n  inlineStylesProps: PropsWithVarsAndStyles & { design?: ComponentDesignProp };\n  rtl: boolean;\n  saveDebug: (debug: DebugData | null) => void;\n};\n"],"mappings":""}