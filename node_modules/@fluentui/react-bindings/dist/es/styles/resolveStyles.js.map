{"version":3,"file":"resolveStyles.js","names":["isDebugEnabled","mergeComponentStyles","withDebugId","cx","classesCache","WeakMap","stylesCache","resolveStyles","options","resolvedVariables","allDisplayNames","componentClassName","className","theme","primaryDisplayName","componentProps","inlineStylesProps","rtl","disableAnimations","renderer","performanceFlags","performance","telemetry","design","styles","variables","noInlineStylesOverrides","noVariableOverrides","enableBooleanVariablesCaching","process","env","NODE_ENV","enableStylesCaching","Error","_isPlainObject","hasOnlyBooleanVariables","Object","keys","every","variableName","_isNil","cacheEnabled","mergedStyles","length","componentStyles","root","map","displayName","filter","Boolean","reduce","acc","styleParam","props","rendererParam","direction","join","sanitizeCss","enableSanitizeCssPlugin","resolvedStylesDebug","has","set","propsCacheKey","JSON","stringify","variablesCacheKey","componentCacheKey","Proxy","resolvedStyles","classes","forEach","slotName","lazyEvaluationKey","slotCacheKey","defineProperty","enumerable","configurable","val","_Object$assign","assign","get","stylesThemeCache","telemetryPartStart","enabled","now","_Object$assign2","_resolvedStyles$slotN","_resolvedStyles$slotN2","msResolveStylesTotal","_Object$assign3","classesThemeCache","stylesRootCacheHits","stylesSlotsCacheHits","styleObj","renderRule","_Object$assign4","resultClassName","msRenderStylesTotal","target","_mergedStyles$slotNam","_mergedStyles","call","_Object$assign5","_target$slotName","_target$slotName2","_Object$assign6"],"sources":["styles/resolveStyles.ts"],"sourcesContent":["import { RendererParam } from '@fluentui/react-northstar-styles-renderer';\nimport {\n  ComponentSlotStylesInput,\n  ComponentSlotStylesPrepared,\n  ComponentSlotStylesResolved,\n  ComponentStyleFunctionParam,\n  ComponentVariablesObject,\n  ICSSInJSStyle,\n  isDebugEnabled,\n  mergeComponentStyles,\n  ThemePrepared,\n  withDebugId,\n} from '@fluentui/styles';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\n\nimport { ComponentSlotClasses, ResolveStylesOptions } from './types';\n\nexport type ResolveStylesResult = {\n  resolvedStyles: ComponentSlotStylesResolved;\n  resolvedStylesDebug: Record<string, { styles: Object }[]>;\n  classes: ComponentSlotClasses;\n};\n\n// this weak map is used as cache for the classes\nconst classesCache = new WeakMap<ThemePrepared, Record<string, string>>();\n\n// this weak map is used as cache for the styles\nconst stylesCache = new WeakMap<ThemePrepared, Record<string, ICSSInJSStyle>>();\n\n/**\n * Both resolvedStyles and classes are objects of getters with lazy evaluation\n *\n * Additionally if the cacheEnabled option is provided, than the resolved styles\n * and classes are caching the results in WeakMaps. The key of the maps contains the following:\n * - theme\n * - displayName\n * - slot name\n * - styling props\n * - rtl mode\n * - disable animations mode\n */\nexport const resolveStyles = (\n  options: ResolveStylesOptions,\n  resolvedVariables: ComponentVariablesObject,\n): ResolveStylesResult => {\n  const {\n    allDisplayNames,\n    className: componentClassName,\n    theme,\n    primaryDisplayName,\n    componentProps,\n    inlineStylesProps,\n    rtl,\n    disableAnimations,\n    renderer,\n    performance: performanceFlags,\n    telemetry,\n  } = options;\n\n  const { className, design, styles, variables } = inlineStylesProps;\n  const noInlineStylesOverrides = !(design || styles);\n\n  let noVariableOverrides = performanceFlags.enableBooleanVariablesCaching || !variables;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    if (!performanceFlags.enableStylesCaching && performanceFlags.enableBooleanVariablesCaching) {\n      throw new Error(\n        '@fluentui/react-northstar: Please check your \"performance\" settings on \"Provider\", to enable \"enableBooleanVariablesCaching\" you need to enable \"enableStylesCaching\"',\n      );\n    }\n  }\n\n  if (performanceFlags.enableBooleanVariablesCaching) {\n    if (_.isPlainObject(variables)) {\n      const hasOnlyBooleanVariables = Object.keys(variables).every(\n        variableName =>\n          variables[variableName] === null ||\n          typeof variables[variableName] === 'undefined' ||\n          typeof variables[variableName] === 'boolean',\n      );\n\n      if (!hasOnlyBooleanVariables) {\n        noVariableOverrides = false;\n      }\n    } else if (!_.isNil(variables)) {\n      noVariableOverrides = false;\n    }\n  }\n\n  const cacheEnabled = performanceFlags.enableStylesCaching && noInlineStylesOverrides && noVariableOverrides;\n\n  // Merge theme styles with inline overrides if any\n  let mergedStyles: ComponentSlotStylesPrepared;\n\n  if (allDisplayNames.length === 1) {\n    mergedStyles = theme.componentStyles[allDisplayNames[0]] || { root: () => ({}) };\n  } else {\n    const styles = allDisplayNames.map(displayName => theme.componentStyles[displayName]).filter(Boolean);\n\n    if (styles.length > 0) {\n      mergedStyles = styles.reduce<ComponentSlotStylesPrepared>((acc, styles) => {\n        return mergeComponentStyles(acc, styles);\n      }, {});\n    } else {\n      mergedStyles = { root: () => ({}) };\n    }\n  }\n\n  if (!noInlineStylesOverrides) {\n    mergedStyles = mergeComponentStyles(\n      mergedStyles,\n      mergeComponentStyles(\n        design && withDebugId({ root: design } as ComponentSlotStylesInput, 'props.design'),\n        styles && withDebugId({ root: styles } as ComponentSlotStylesInput, 'props.styles'),\n      ),\n    );\n  }\n\n  const styleParam: ComponentStyleFunctionParam = {\n    props: componentProps,\n    variables: resolvedVariables,\n    theme,\n    rtl,\n    disableAnimations,\n  };\n\n  // Heads Up! Keep in sync with Design.tsx render logic\n  const rendererParam: RendererParam = {\n    direction: rtl ? 'rtl' : 'ltr',\n    disableAnimations,\n    displayName: allDisplayNames.join(':'), // does not affect styles, only used by useEnhancedRenderer in docs\n    sanitizeCss: performanceFlags.enableSanitizeCssPlugin,\n  };\n\n  const resolvedStylesDebug: Record<string, { styles: Object }[]> = {};\n\n  if (cacheEnabled && theme) {\n    if (!stylesCache.has(theme)) {\n      stylesCache.set(theme, {});\n    }\n    if (!classesCache.has(theme)) {\n      classesCache.set(theme, {});\n    }\n  }\n\n  const propsCacheKey = cacheEnabled ? JSON.stringify(componentProps) : '';\n  const variablesCacheKey =\n    cacheEnabled && performanceFlags.enableBooleanVariablesCaching ? JSON.stringify(variables) : '';\n  const componentCacheKey = cacheEnabled\n    ? `${allDisplayNames.join(':')}:${propsCacheKey}:${variablesCacheKey}:${styleParam.rtl}${\n        styleParam.disableAnimations\n      }`\n    : '';\n\n  if (typeof Proxy === 'undefined') {\n    //\n    //\n    // IE11 branch of code, feel free to remove later.\n    // Keep it sync with another branch below!\n    //\n    //\n\n    const resolvedStyles: Record<string, ICSSInJSStyle> = {};\n    const classes: Record<string, string> = {};\n\n    Object.keys(mergedStyles).forEach(slotName => {\n      // resolve/render slot styles once and cache\n      const lazyEvaluationKey = `${slotName}__return`;\n      const slotCacheKey = componentCacheKey + slotName;\n\n      Object.defineProperty(resolvedStyles, slotName, {\n        enumerable: false,\n        configurable: false,\n        set(val: ICSSInJSStyle) {\n          // Add to the cache if it's enabled\n          if (cacheEnabled && theme) {\n            stylesCache.set(theme, {\n              ...stylesCache.get(theme),\n              [slotCacheKey]: val,\n            });\n          }\n\n          resolvedStyles[lazyEvaluationKey] = val;\n        },\n        get(): ICSSInJSStyle {\n          // If caching enabled and entry exists, get from cache, avoid lazy evaluation\n          if (cacheEnabled && theme) {\n            const stylesThemeCache = stylesCache.get(theme) || {};\n            if (stylesThemeCache[slotCacheKey]) {\n              return stylesThemeCache[slotCacheKey];\n            }\n          }\n\n          if (resolvedStyles[lazyEvaluationKey]) {\n            return resolvedStyles[lazyEvaluationKey];\n          }\n\n          const telemetryPartStart = telemetry?.enabled ? performance.now() : 0;\n\n          // resolve/render slot styles once and cache\n          resolvedStyles[lazyEvaluationKey] = mergedStyles[slotName](styleParam);\n\n          if (cacheEnabled && theme) {\n            stylesCache.set(theme, {\n              ...stylesCache.get(theme),\n              [slotCacheKey]: resolvedStyles[lazyEvaluationKey],\n            });\n          }\n\n          if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n            resolvedStylesDebug[slotName] = (resolvedStyles[slotName] as any)?.['_debug'];\n            delete (resolvedStyles[slotName] as any)?.['_debug'];\n          }\n\n          if (telemetry?.enabled && telemetry.performance[primaryDisplayName]) {\n            telemetry.performance[primaryDisplayName].msResolveStylesTotal += performance.now() - telemetryPartStart;\n          }\n\n          return resolvedStyles[lazyEvaluationKey];\n        },\n      });\n\n      Object.defineProperty(classes, slotName, {\n        enumerable: false,\n        configurable: false,\n        set(val: string) {\n          if (cacheEnabled && theme) {\n            classesCache.set(theme, {\n              ...classesCache.get(theme),\n              [slotCacheKey]: val,\n            });\n          }\n\n          classes[lazyEvaluationKey] = val;\n        },\n        get(): string {\n          if (cacheEnabled && theme) {\n            const classesThemeCache = classesCache.get(theme) || {};\n\n            //\n            // Cached styles\n            //\n\n            if (classesThemeCache[slotCacheKey] || classesThemeCache[slotCacheKey] === '') {\n              if (telemetry?.performance[primaryDisplayName]) {\n                if (slotName === 'root') {\n                  telemetry.performance[primaryDisplayName].stylesRootCacheHits++;\n                } else {\n                  telemetry.performance[primaryDisplayName].stylesSlotsCacheHits++;\n                }\n              }\n\n              return slotName === 'root'\n                ? cx(componentClassName, classesThemeCache[slotCacheKey], className)\n                : classesThemeCache[slotCacheKey];\n            }\n          }\n\n          //\n          // Lazy eval\n          //\n\n          if (classes[lazyEvaluationKey]) {\n            return slotName === 'root'\n              ? cx(componentClassName, classes[lazyEvaluationKey], className)\n              : classes[lazyEvaluationKey];\n          }\n\n          // this resolves the getter magic\n          const styleObj = resolvedStyles[slotName];\n          const telemetryPartStart = telemetry?.enabled ? performance.now() : 0;\n\n          if (styleObj) {\n            classes[lazyEvaluationKey] = renderer.renderRule(styleObj, rendererParam);\n\n            if (cacheEnabled && theme) {\n              classesCache.set(theme, {\n                ...classesCache.get(theme),\n                [slotCacheKey]: classes[lazyEvaluationKey],\n              });\n            }\n          }\n\n          const resultClassName =\n            slotName === 'root'\n              ? cx(componentClassName, classes[lazyEvaluationKey], className)\n              : classes[lazyEvaluationKey];\n\n          if (telemetry?.enabled && telemetry.performance[primaryDisplayName]) {\n            telemetry.performance[primaryDisplayName].msRenderStylesTotal += performance.now() - telemetryPartStart;\n          }\n\n          return resultClassName;\n        },\n      });\n    });\n\n    return {\n      resolvedStyles,\n      resolvedStylesDebug,\n      classes,\n    };\n  }\n\n  const resolvedStyles = new Proxy<Record<string, ICSSInJSStyle>>(\n    {},\n    {\n      get(target, slotName: string) {\n        const slotCacheKey = componentCacheKey + slotName;\n\n        // If caching enabled and entry exists, get from cache, avoid lazy evaluation\n        if (cacheEnabled && theme) {\n          const stylesThemeCache = stylesCache.get(theme) || {};\n          if (stylesThemeCache[slotCacheKey]) {\n            return stylesThemeCache[slotCacheKey];\n          }\n        }\n\n        if (target[slotName]) {\n          return target[slotName];\n        }\n\n        const telemetryPartStart = telemetry?.enabled ? performance.now() : 0;\n\n        // resolve/render slot styles once and cache\n        target[slotName] = mergedStyles[slotName]?.(styleParam);\n\n        if (cacheEnabled && theme) {\n          stylesCache.set(theme, {\n            ...stylesCache.get(theme),\n            [slotCacheKey]: target[slotName],\n          });\n        }\n\n        if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n          resolvedStylesDebug[slotName] = (target[slotName] as any)?.['_debug'];\n          delete (target[slotName] as any)?.['_debug'];\n        }\n\n        if (telemetry?.enabled && telemetry.performance[primaryDisplayName]) {\n          telemetry.performance[primaryDisplayName].msResolveStylesTotal += performance.now() - telemetryPartStart;\n        }\n\n        return target[slotName];\n      },\n    },\n  );\n  const classes = new Proxy<Record<string, string>>(\n    {},\n    {\n      get(target, slotName: string) {\n        const slotCacheKey = componentCacheKey + slotName;\n\n        if (cacheEnabled && theme) {\n          const classesThemeCache = classesCache.get(theme) || {};\n\n          //\n          // Cached styles\n          //\n\n          if (classesThemeCache[slotCacheKey] || classesThemeCache[slotCacheKey] === '') {\n            if (telemetry?.performance[primaryDisplayName]) {\n              if (slotName === 'root') {\n                telemetry.performance[primaryDisplayName].stylesRootCacheHits++;\n              } else {\n                telemetry.performance[primaryDisplayName].stylesSlotsCacheHits++;\n              }\n            }\n\n            return slotName === 'root'\n              ? cx(componentClassName, classesThemeCache[slotCacheKey], className)\n              : classesThemeCache[slotCacheKey];\n          }\n        }\n\n        //\n        // Lazy eval\n        //\n\n        if (target[slotName]) {\n          return slotName === 'root' ? cx(componentClassName, target[slotName], className) : target[slotName];\n        }\n\n        // this resolves the getter magic\n        const styleObj = resolvedStyles[slotName];\n        const telemetryPartStart = telemetry?.enabled ? performance.now() : 0;\n\n        if (styleObj) {\n          target[slotName] = renderer.renderRule(styleObj, rendererParam);\n\n          if (cacheEnabled && theme) {\n            classesCache.set(theme, {\n              ...classesCache.get(theme),\n              [slotCacheKey]: target[slotName],\n            });\n          }\n        }\n\n        const resultClassName =\n          slotName === 'root' ? cx(componentClassName, target[slotName], className) : target[slotName];\n\n        if (telemetry?.enabled && telemetry.performance[primaryDisplayName]) {\n          telemetry.performance[primaryDisplayName].msRenderStylesTotal += performance.now() - telemetryPartStart;\n        }\n\n        return resultClassName;\n      },\n    },\n  );\n\n  return {\n    resolvedStyles,\n    resolvedStylesDebug,\n    classes,\n  };\n};\n"],"mappings":"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"}