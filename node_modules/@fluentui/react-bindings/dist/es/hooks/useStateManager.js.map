{"version":3,"file":"useStateManager.js","names":["React","getDefinedProps","props","definedProps","Object","keys","forEach","propName","undefined","useStateManager","managerFactory","options","_options","_options$mapPropsToIn","mapPropsToInitialState","_options$mapPropsToSt","mapPropsToState","_options$sideEffects","sideEffects","latestActions","useMemo","latestManager","useRef","_ref","useReducer","c","forceUpdate","initialState","current","state","actions","assign","concat","process","env","NODE_ENV","isExtensible","preventExtensions","freeze"],"sources":["hooks/useStateManager.ts"],"sourcesContent":["import { AnyAction, EnhancedActions, Manager, ManagerFactory, SideEffect } from '@fluentui/state';\nimport * as React from 'react';\n\ntype UseStateManagerOptions<State> = {\n  mapPropsToInitialState?: () => Partial<State>;\n  mapPropsToState?: () => Partial<State>;\n  sideEffects?: SideEffect<State>[];\n};\n\ntype UseStateManagerResult<State, Actions> = {\n  state: Readonly<State>;\n  actions: Readonly<Actions>;\n};\n\nconst getDefinedProps = <Props extends Record<string, any>>(props: Props): Partial<Props> => {\n  const definedProps: Partial<Props> = {};\n\n  Object.keys(props).forEach(propName => {\n    if (props[propName] !== undefined) {\n      (<Record<string, any>>definedProps)[propName] = props[propName];\n    }\n  });\n\n  return definedProps;\n};\n\nexport const useStateManager = <State extends Record<string, any>, Actions extends Record<string, AnyAction>>(\n  managerFactory: ManagerFactory<State, Actions>,\n  options: UseStateManagerOptions<State> = {},\n): UseStateManagerResult<State, Actions> => {\n  const {\n    mapPropsToInitialState = () => ({} as Partial<State>),\n    mapPropsToState = () => ({} as Partial<State>),\n    sideEffects = [],\n  } = options;\n  const latestActions = React.useMemo<Actions>(\n    () => ({} as Actions),\n    // The change of `managerFactory` should trigger recreation of `latestActions` as they can be different between\n    // managers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [managerFactory],\n  );\n  const latestManager = React.useRef<Manager<State, Actions> | null>(null);\n\n  // Heads up! forceUpdate() is used only for triggering rerenders, stateManager is SSOT\n  const [, forceUpdate] = React.useReducer((c: number) => c + 1, 0) as [never, () => void];\n\n  // If manager exists, the current state will be used\n  const initialState = latestManager.current ? latestManager.current.state : getDefinedProps(mapPropsToInitialState());\n\n  latestManager.current = managerFactory({\n    // Factory has already configured actions\n    actions: {} as EnhancedActions<State, Actions>,\n    state: { ...initialState, ...getDefinedProps(mapPropsToState()) },\n    sideEffects: [\n      ...sideEffects,\n      // `sideEffect` is called with two arguments, but hooks don't support the second callback\n      // argument\n      () => forceUpdate(),\n    ],\n  });\n\n  // We need to keep the same reference to an object with actions to allow usage them as\n  // a dependency in useCallback() hook\n  Object.assign(latestActions, latestManager.current.actions);\n\n  // For development environments we disallow ability to extend object with other properties to\n  // avoid misusage\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.isExtensible(latestActions)) Object.preventExtensions(latestActions);\n  }\n\n  // We need to pass exactly `manager.state` to provide the same state object during the same render\n  // frame.\n  // It keeps behavior consistency between React state tools and our managers\n  // https://github.com/facebook/react/issues/11527#issuecomment-360199710\n  // Object.freeze() is used only in dev-mode to avoid usage mistakes\n\n  return {\n    state:\n      process.env.NODE_ENV === 'production' ? latestManager.current.state : Object.freeze(latestManager.current.state),\n    actions: latestActions,\n  };\n};\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAa9B,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAuCC,KAAY,EAAqB;EAC3F,IAAMC,YAA4B,GAAG,CAAC,CAAC;EAEvCC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,OAAO,CAAC,UAAAC,QAAQ,EAAI;IACrC,IAAIL,KAAK,CAACK,QAAQ,CAAC,KAAKC,SAAS,EAAE;MACXL,YAAY,CAAEI,QAAQ,CAAC,GAAGL,KAAK,CAACK,QAAQ,CAAC;IACjE;EACF,CAAC,CAAC;EAEF,OAAOJ,YAAY;AACrB,CAAC;AAED,OAAO,IAAMM,eAAe,GAAG,SAAlBA,eAAeA,CAC1BC,cAA8C,EAC9CC,OAAsC,EACI;EAAA,IAD1CA,OAAsC;IAAtCA,OAAsC,GAAG,CAAC,CAAC;EAAA;EAE3C,IAAAC,QAAA,GAIID,OAAO;IAAAE,qBAAA,GAAAD,QAAA,CAHTE,sBAAsB;IAAtBA,sBAAsB,GAAAD,qBAAA,cAAG;MAAA,OAAO,CAAC,CAAC;IAAA,CAAmB,GAAAA,qBAAA;IAAAE,qBAAA,GAAAH,QAAA,CACrDI,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAG;MAAA,OAAO,CAAC,CAAC;IAAA,CAAmB,GAAAA,qBAAA;IAAAE,oBAAA,GAAAL,QAAA,CAC9CM,WAAW;IAAXA,WAAW,GAAAD,oBAAA,cAAG,EAAE,GAAAA,oBAAA;EAElB,IAAME,aAAa,GAAGnB,KAAK,CAACoB,OAAO,CACjC;IAAA,OAAO,CAAC,CAAC;EAAA,CAAY;EACrB;EACA;EACA;EACA,CAACV,cAAc,CACjB,CAAC;EACD,IAAMW,aAAa,GAAGrB,KAAK,CAACsB,MAAM,CAAiC,IAAI,CAAC;;EAExE;EACA,IAAAC,IAAA,GAAwBvB,KAAK,CAACwB,UAAU,CAAC,UAACC,CAAS;MAAA,OAAKA,CAAC,GAAG,CAAC;IAAA,GAAE,CAAC,CAAC;IAAxDC,WAAW,GAAAH,IAAA;;EAEpB;EACA,IAAMI,YAAY,GAAGN,aAAa,CAACO,OAAO,GAAGP,aAAa,CAACO,OAAO,CAACC,KAAK,GAAG5B,eAAe,CAACa,sBAAsB,CAAC,CAAC,CAAC;EAEpHO,aAAa,CAACO,OAAO,GAAGlB,cAAc,CAAC;IACrC;IACAoB,OAAO,EAAE,CAAC,CAAoC;IAC9CD,KAAK,EAAAzB,MAAA,CAAA2B,MAAA,KAAOJ,YAAY,EAAK1B,eAAe,CAACe,eAAe,CAAC,CAAC,CAAC,CAAE;IACjEE,WAAW,KAAAc,MAAA,CACNd,WAAW;IACd;IACA;IACA;MAAA,OAAMQ,WAAW,CAAC,CAAC;IAAA;EAEvB,CAAC,CAAC;;EAEF;EACA;EACAtB,MAAM,CAAC2B,MAAM,CAACZ,aAAa,EAAEE,aAAa,CAACO,OAAO,CAACE,OAAO,CAAC;;EAE3D;EACA;EACA,IAAIG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI/B,MAAM,CAACgC,YAAY,CAACjB,aAAa,CAAC,EAAEf,MAAM,CAACiC,iBAAiB,CAAClB,aAAa,CAAC;EACjF;;EAEA;EACA;EACA;EACA;EACA;;EAEA,OAAO;IACLU,KAAK,EACHI,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGd,aAAa,CAACO,OAAO,CAACC,KAAK,GAAGzB,MAAM,CAACkC,MAAM,CAACjB,aAAa,CAACO,OAAO,CAACC,KAAK,CAAC;IAClHC,OAAO,EAAEX;EACX,CAAC;AACH,CAAC"}