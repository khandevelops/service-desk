{"version":3,"file":"useStyles.js","names":["React","cx","useFluentContext","getStyles","useStyles","displayName","options","_composeOptions$mapPr","context","debug","useRef","fluentUIDebug","unstyled","_options$composeOptio","componentClassName","composeOptions","className","classNameProp","mapPropsToInlineStyles","classes","root","styles","_options$className","process","env","NODE_ENV","_options$mapPropsToSt","mapPropsToStyles","_options$mapPropsToIn","_options$unstable_pro","unstable_props","_options$rtl","rtl","componentStylesProps","composeProps","Object","assign","composeStylesProps","mapPropsToStylesPropsChain","reduce","acc","fn","_getStyles","allDisplayNames","displayNames","primaryDisplayName","componentProps","inlineStylesProps","disableAnimations","renderer","saveDebug","current","theme","performance","telemetry","resolvedStyles"],"sources":["hooks/useStyles.ts"],"sourcesContent":["import { ComposePreparedOptions } from '../compose';\nimport { ComponentSlotStyle, ComponentSlotStylesResolved, ComponentVariablesInput, DebugData } from '@fluentui/styles';\nimport * as React from 'react';\nimport cx from 'classnames';\n\nimport { useFluentContext } from '../context';\nimport { ComponentDesignProp, ComponentSlotClasses, PrimitiveProps } from '../styles/types';\nimport { getStyles } from '../styles/getStyles';\n\ntype UseStylesOptions<StyleProps extends PrimitiveProps> = {\n  /** A classname that will be added by default to all instances of a component on the `root` slot. */\n  className?: string;\n\n  /** An options from compose(), should be used only if component was created by `compose()`. */\n  composeOptions?: ComposePreparedOptions;\n\n  /**\n   * A mapping from component's props to styles functions props. Can be only primitive types as they will be used for\n   * cache keys.\n   */\n  mapPropsToStyles?: () => StyleProps;\n\n  /**\n   * A set props of that contain mapping for props that perform inline styles overrides, for example `styles` or\n   * `variables`.\n   */\n  mapPropsToInlineStyles?: () => InlineStyleProps<any>;\n\n  /**\n   * All components props, should be used only if component was created by `compose()`. Will be replaced in future with\n   * better approach.\n   */\n  unstable_props?: Record<string, any>;\n\n  /** A current mode for text direction (ltr or rtl). */\n  rtl?: boolean;\n\n  unstyled?: boolean;\n};\n\nexport type UseStylesResult = {\n  classes: ComponentSlotClasses;\n  styles: ComponentSlotStylesResolved;\n};\n\ntype InlineStyleProps<ComponentProps> = {\n  /** Additional CSS class name(s) to apply.  */\n  className?: string;\n\n  design?: ComponentDesignProp;\n\n  /** Additional CSS styles to apply to the component instance.  */\n  styles?: ComponentSlotStyle<ComponentProps, any>; // TODO: see if we can improve it\n\n  /** Override for theme site variables to allow modifications of component styling via themes. */\n  variables?: ComponentVariablesInput;\n};\n\nexport const useStyles = <StyleProps extends PrimitiveProps>(\n  displayName: string,\n  options: UseStylesOptions<StyleProps>,\n): UseStylesResult => {\n  const context = useFluentContext();\n\n  // Stores debug information for component.\n  const debug = React.useRef<{ fluentUIDebug: DebugData | null }>({ fluentUIDebug: null });\n\n  if (options.unstyled) {\n    const componentClassName = options.composeOptions?.className || options.className;\n    const classNameProp = options.mapPropsToInlineStyles?.().className;\n    return { classes: { root: cx(componentClassName, classNameProp) }, styles: {} };\n  }\n\n  const {\n    className = process.env.NODE_ENV === 'production' ? '' : 'no-classname-ðŸ™‰',\n    composeOptions,\n    mapPropsToStyles = () => ({} as StyleProps),\n    mapPropsToInlineStyles = () => ({} as InlineStyleProps<any>),\n    unstable_props = {},\n    rtl = false,\n  } = options;\n  const componentStylesProps = mapPropsToStyles();\n\n  // `composeProps` should include all props including stylesProps as they can contain state\n  const composeProps = { ...unstable_props, ...componentStylesProps };\n  const composeStylesProps = composeOptions?.mapPropsToStylesPropsChain?.reduce(\n    (acc, fn) => ({ ...acc, ...fn(composeProps) }),\n    {},\n  );\n\n  const { classes, styles: resolvedStyles } = getStyles({\n    // Input values\n    allDisplayNames: composeOptions?.displayNames || [displayName],\n    className: composeOptions?.className || className,\n    primaryDisplayName: composeOptions?.displayName || displayName,\n    componentProps: {\n      ...componentStylesProps,\n      ...composeStylesProps,\n    },\n    inlineStylesProps: mapPropsToInlineStyles(),\n\n    // Context values\n    disableAnimations: context.disableAnimations,\n    renderer: context.renderer,\n    rtl,\n    saveDebug: fluentUIDebug => (debug.current = { fluentUIDebug }),\n    theme: context.theme,\n    performance: context.performance,\n    telemetry: context.telemetry,\n  });\n\n  return { classes, styles: resolvedStyles };\n};\n"],"mappings":"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"}