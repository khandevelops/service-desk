{"version":3,"file":"FocusTrapZone.types.js","names":[],"sources":["FocusZone/FocusTrapZone.types.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface FocusTrapZoneProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** @docSiteIgnore */\n  as?: React.ReactType;\n\n  /**\n   * Additional CSS class name(s) to apply.\n   */\n  className?: string;\n\n  /**\n   * Disables the FocusTrapZone's focus trapping behavior when set.\n   */\n  disabled?: boolean;\n\n  /**\n   * Sets the HTMLElement to focus on when exiting the FocusTrapZone.\n   * @defaultvalue The `element.target` that triggered the FTZ.\n   */\n  elementToFocusOnDismiss?: HTMLElement;\n\n  /**\n   * Sets the aria-labelledby attribute.\n   */\n  ariaLabelledBy?: string;\n\n  /** Indicates if this Trap Zone will allow clicks outside the FocusTrapZone. */\n  isClickableOutsideFocusTrap?: boolean;\n\n  /**\n   * Indicates if the previously focused element outside FocusTrapZone should be focused on outside click.\n   * Note: trigger will be focused when exiting FTZ using keyboard.\n   * If isClickableOutsideFocusTrap === 'false', focusTriggerOnOutsideClick will not be taken into account.\n   */\n  focusTriggerOnOutsideClick?: boolean;\n\n  /**\n   * Indicates if this Trap Zone will ignore keeping track of HTMLElement that activated the Zone.\n   */\n  ignoreExternalFocusing?: boolean;\n\n  /**\n   * Indicates whether focus trap zone should force focus inside the trap zone when focus event occurs outside the zone.\n   * @defaultvalue true\n   */\n  forceFocusInsideTrapOnOutsideFocus?: boolean;\n\n  /**\n   * Indicates whether focus trap zone should force focus inside the trap zone on component update.\n   */\n  forceFocusInsideTrapOnComponentUpdate?: boolean;\n\n  /**\n   * Indicates the selector for first focusable item.  Only applies if focusPreviouslyFocusedInnerElement == false.\n   */\n  firstFocusableSelector?: string | (() => string);\n\n  /**\n   * Do not put focus onto first element when render focus trap zone\n   */\n  disableFirstFocus?: boolean;\n\n  /**\n   * Specifies the algorithm used to determine which descendant element to focus when focus() is called.\n   * If false, the first focusable descendant, filtered by the firstFocusableSelector property if present, is chosen.\n   * If true, the element that was focused when the Trap Zone last had a focused descendant is chosen.\n   * If it has never had a focused descendant before, behavior falls back to the first focused descendant.\n   */\n  focusPreviouslyFocusedInnerElement?: boolean;\n\n  /**\n   * When FocusTrapZone is released, FocusTrapZone will try to restore focus back to the previously focused element;\n   * sometimes focusing on the previously focused element can cause page to scroll. Set this prop to true to prevent scrolling\n   */\n  preventScrollOnRestoreFocus?: boolean;\n\n  innerRef?: any;\n}\n"],"mappings":""}