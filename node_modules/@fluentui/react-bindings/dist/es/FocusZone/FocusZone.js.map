{"version":3,"file":"FocusZone.js","names":["FocusZoneDirection","FocusZoneTabbableElements","IS_ENTER_DISABLED_ATTRIBUTE","IS_FOCUSABLE_ATTRIBUTE","getCode","keyboardKey","SpacebarKey","React","cx","PropTypes","getDocument","getWindow","findScrollableParent","shouldWrapFocus","elementContains","getParent","getElementType","getUnhandledProps","getNextElement","getPreviousElement","isElementFocusZone","isElementFocusSubZone","isElementTabbable","getElementIndexPath","getFocusableByIndexPath","FOCUSZONE_ID_ATTRIBUTE","handleRef","TABINDEX","NO_VERTICAL_WRAP","NO_HORIZONTAL_WRAP","LARGE_DISTANCE_FROM_CENTER","LARGE_NEGATIVE_DISTANCE_FROM_CENTER","_allInstances","outerZones","_windowToOuterZoneMap","Map","register","window","FZ","_this$_windowToOuterZ2","get","_this$_windowToOuterZ","add","set","Set","size","unregister","_this$_windowToOuterZ3","_this$_windowToOuterZ4","delete","getOutZone","ALLOWED_INPUT_TYPES","ALLOW_VIRTUAL_ELEMENTS","_raiseClickFromKeyboardEvent","target","ev","event","MouseEvent","ctrlKey","metaKey","shiftKey","altKey","bubbles","cancelable","dispatchEvent","_onKeyDownCapture","Tab","_outerZones$getOutZon","forEach","zone","props","shouldResetActiveElementWhenTabFromZone","document","activeElement","_activeElement","updateTabIndexes","FocusZone","_React$Component","_inheritsLoose","_this","call","_root","current","_id","_lastIndexPath","_isParked","_parkedTabIndex","_defaultFocusElement","_focusAlignment","_isInnerZone","_processingTabKey","windowElement","setRef","elem","innerRef","process","env","NODE_ENV","nodeType","Error","_onBlur","setParkedFocus","_onFocus","_ev$target","_this$props","onActiveElementChanged","stopFocusPropagation","shouldFocusInnerElementWhenReceivedFocus","defaultTabbableElement","shouldIgnoreNotFocusable","dataset","isFocusable","newActiveElement","isImmediateDescendant","isImmediateDescendantOfZone","parentElement","maybeElementToFocus","focus","setFocusAlignment","stopPropagation","_invoke","_onMouseDown","disabled","path","push","length","pop","setActiveElement","_onKeyDown","_this$props2","direction","shouldEnterInnerZone","pagingSupportDisabled","undefined","doc","onKeyDown","isDefaultPrevented","innerZone","getFirstInnerZone","focusElement","firstChild","tryInvokeClickForFocusable","ArrowLeft","vertical","preventDefaultWhenHandled","moveFocusLeft","ArrowRight","moveFocusRight","ArrowUp","horizontal","moveFocusUp","ArrowDown","moveFocusDown","PageDown","moveFocusPaging","PageUp","handleTabKey","all","inputOnly","isElementInput","focusChanged","tabWithDirection","isRtl","Home","isContentEditableElement","shouldInputLoseFocus","End","lastChild","Enter","preventDefault","getHorizontalDistanceFromCenter","isForward","activeRect","targetRect","leftAlignment","left","targetRectTop","Math","floor","top","activeRectBottom","bottom","targetRectBottom","activeRectTop","isValidCandidateOnpagingDown","isValidCandidateOnpagingUp","width","abs","_uniqueId","_proto","prototype","componentDidMount","body","_outerZones$getOutZon2","addEventListener","querySelector","shouldFocusOnMount","componentDidUpdate","preventFocusRestoration","elementToFocus","componentWillUnmount","removeEventListener","render","className","ElementType","unhandledProps","_keys","propTypes","evaluateFocusBeforeRender","createElement","_extends","ref","onFocus","onMouseDownCapture","children","forceIntoFirstElement","getAttribute","ownerZoneElement","getOwnerZone","ownerZone","focusLast","element","forceAlignment","shouldReceiveFocus","focusedElement","shouldRestoreFocus","isParked","allowFocusRoot","setAttribute","removeAttribute","previousActiveElement","tabIndex","targetElement","shouldRaiseClicks","tagName","forRootElement","rootElement","child","firstElementChild","match","nextElementSibling","moveFocus","getDistanceFromCenter","useDefaultWrap","candidateDistance","candidateElement","changedFocus","isBidirectional","bidirectional","getBoundingClientRect","elementDistance","isCircularNavigation","lastElementChild","_this2","targetTop","distance","_this3","_this4","shouldWrap","topBottomComparison","parseFloat","toFixed","right","_this5","scrollableParent","targetBottom","pagesize","clientHeight","isElementPassedPageSizeOnPagingDown","isElementPassedPageSizeOnPagingUp","isHorizontal","isVertical","rect","height","onElement","childNodes","childIndex","toLowerCase","type","indexOf","selectionStart","selectionEnd","isRangeSelected","inputValue","value","isReadonly","readOnly","shouldInputLoseFocusOnArrowKey","noWrapDataAttribute","checkForNoWrap","Component","string","number","func","bool","as","elementType","any","defaultProps","displayName"],"sources":["FocusZone/FocusZone.tsx"],"sourcesContent":["import {\n  FocusZoneDirection,\n  FocusZoneTabbableElements,\n  IS_ENTER_DISABLED_ATTRIBUTE,\n  IS_FOCUSABLE_ATTRIBUTE,\n  getCode,\n  keyboardKey,\n  SpacebarKey,\n} from '@fluentui/accessibility';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\n\nimport { getDocument } from '../utils/getDocument';\nimport { getWindow } from '../utils/getWindow';\nimport { findScrollableParent } from '../utils/findScrollableParent';\nimport { shouldWrapFocus } from '../utils/shouldWrapFocus';\n\nimport { elementContains, getParent } from '@fluentui/dom-utilities';\n\nimport { getElementType } from '../utils/getElementType';\nimport { getUnhandledProps } from '../utils/getUnhandledProps';\nimport { FocusZoneProps, IFocusZone } from './FocusZone.types';\nimport {\n  getNextElement,\n  getPreviousElement,\n  isElementFocusZone,\n  isElementFocusSubZone,\n  isElementTabbable,\n  getElementIndexPath,\n  getFocusableByIndexPath,\n  FOCUSZONE_ID_ATTRIBUTE,\n} from './focusUtilities';\nimport { handleRef } from '@fluentui/react-component-ref';\n\nconst TABINDEX = 'tabindex';\nconst NO_VERTICAL_WRAP = 'data-no-vertical-wrap';\nconst NO_HORIZONTAL_WRAP = 'data-no-horizontal-wrap';\nconst LARGE_DISTANCE_FROM_CENTER = 999999999;\nconst LARGE_NEGATIVE_DISTANCE_FROM_CENTER = -999999999;\n\nconst _allInstances: {\n  [key: string]: FocusZone;\n} = {};\n\nconst outerZones = {\n  _windowToOuterZoneMap: new Map<Window, Set<FocusZone>>(),\n  register(window: Window, FZ: FocusZone) {\n    if (this._windowToOuterZoneMap.get(window)) {\n      this._windowToOuterZoneMap.get(window)?.add(FZ);\n    } else {\n      this._windowToOuterZoneMap.set(window, new Set([FZ]));\n    }\n\n    return this._windowToOuterZoneMap.get(window)?.size;\n  },\n  unregister(window: Window, FZ: FocusZone) {\n    this._windowToOuterZoneMap.get(window)?.delete(FZ);\n    if (this._windowToOuterZoneMap.get(window)?.size === 0) {\n      this._windowToOuterZoneMap.delete(window);\n    }\n  },\n  getOutZone(window: Window) {\n    return this._windowToOuterZoneMap.get(window);\n  },\n};\n\ninterface Point {\n  left: number;\n  top: number;\n}\nconst ALLOWED_INPUT_TYPES = ['text', 'number', 'password', 'email', 'tel', 'url', 'search'];\n\nconst ALLOW_VIRTUAL_ELEMENTS = false;\n\n/**\n * Raises a click on a target element based on a keyboard event.\n */\nfunction _raiseClickFromKeyboardEvent(target: Element, ev?: React.KeyboardEvent<HTMLElement>): void {\n  const event = new MouseEvent('click', {\n    ctrlKey: ev?.ctrlKey,\n    metaKey: ev?.metaKey,\n    shiftKey: ev?.shiftKey,\n    altKey: ev?.altKey,\n    bubbles: ev?.bubbles,\n    cancelable: ev?.cancelable,\n  });\n\n  target.dispatchEvent(event);\n}\n\n/**\n * Handle global tab presses so that we can patch tabindexes on the fly.\n */\nfunction _onKeyDownCapture(ev: KeyboardEvent) {\n  if (getCode(ev) === keyboardKey.Tab) {\n    outerZones.getOutZone(getWindow(ev.target as Element)!)?.forEach(zone => {\n      if (zone.props.shouldResetActiveElementWhenTabFromZone && document.activeElement !== zone._activeElement) {\n        // when focus is outside of component and shouldResetActiveElementWhenTabFromZone, reset tabIndex\n        zone._activeElement = null;\n      }\n      zone.updateTabIndexes();\n    });\n  }\n}\n\nexport class FocusZone extends React.Component<FocusZoneProps> implements IFocusZone {\n  static propTypes = {\n    className: PropTypes.string,\n    direction: PropTypes.number,\n    defaultTabbableElement: PropTypes.func,\n    shouldFocusOnMount: PropTypes.bool,\n    shouldResetActiveElementWhenTabFromZone: PropTypes.bool,\n    shouldRaiseClicks: PropTypes.bool,\n    shouldFocusInnerElementWhenReceivedFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    as: PropTypes.elementType as PropTypes.Requireable<React.ElementType>,\n    isCircularNavigation: PropTypes.bool,\n    shouldEnterInnerZone: PropTypes.func,\n    onActiveElementChanged: PropTypes.func,\n    shouldReceiveFocus: PropTypes.func,\n    handleTabKey: PropTypes.number,\n    shouldInputLoseFocusOnArrowKey: PropTypes.func,\n    stopFocusPropagation: PropTypes.bool,\n    onFocus: PropTypes.func,\n    preventDefaultWhenHandled: PropTypes.bool,\n    isRtl: PropTypes.bool,\n    preventFocusRestoration: PropTypes.bool,\n    pagingSupportDisabled: PropTypes.bool,\n    shouldIgnoreNotFocusable: PropTypes.bool,\n    innerRef: PropTypes.any,\n  };\n\n  static defaultProps: FocusZoneProps = {\n    isCircularNavigation: false,\n    direction: FocusZoneDirection.bidirectional,\n    as: 'div',\n    preventDefaultWhenHandled: true,\n    shouldRaiseClicks: false,\n  };\n\n  static displayName = 'FocusZone';\n  static className = 'ms-FocusZone';\n\n  static outerZones = outerZones;\n\n  _root: { current: HTMLElement | null } = { current: null };\n  _id: string;\n  /** The most recently focused child element. */\n  _activeElement: HTMLElement | null;\n\n  /**\n   * The index path to the last focused child element.\n   */\n  _lastIndexPath: number[] | undefined;\n\n  /**\n   * Flag to define when we've intentionally parked focus on the root element to temporarily\n   * hold focus until items appear within the zone.\n   */\n  _isParked: boolean = false;\n  _parkedTabIndex: string | null | undefined;\n\n  /** The child element with tabindex=0. */\n  _defaultFocusElement: HTMLElement | null;\n  _focusAlignment: Point;\n  _isInnerZone: boolean;\n\n  /** Used to allow us to move to next focusable element even when we're focusing on a input element when pressing tab */\n  _processingTabKey: boolean;\n\n  windowElement: Window | null;\n\n  constructor(props: FocusZoneProps) {\n    super(props);\n\n    this._id = _.uniqueId('FocusZone');\n\n    this._focusAlignment = {\n      left: 0,\n      top: 0,\n    };\n\n    this._processingTabKey = false;\n  }\n\n  componentDidMount(): void {\n    _allInstances[this._id] = this;\n\n    if (!this._root.current) {\n      return;\n    }\n\n    // @ts-ignore\n    this.windowElement = getWindow(this._root.current);\n    let parentElement = getParent(this._root.current, ALLOW_VIRTUAL_ELEMENTS);\n    const doc = getDocument(this._root.current);\n\n    // @ts-ignore\n    while (parentElement && parentElement !== doc.body && parentElement.nodeType === 1) {\n      if (isElementFocusZone(parentElement)) {\n        this._isInnerZone = true;\n        break;\n      }\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    if (!this._isInnerZone && this.windowElement) {\n      outerZones.register(this.windowElement, this);\n\n      if (outerZones.getOutZone(this.windowElement)?.size === 1) {\n        this.windowElement.addEventListener('keydown', _onKeyDownCapture, true);\n      }\n    }\n\n    this._root.current.addEventListener('blur', this._onBlur, true);\n\n    // Assign initial tab indexes so that we can set initial focus as appropriate.\n    this.updateTabIndexes();\n\n    if (this.props.defaultTabbableElement && typeof this.props.defaultTabbableElement === 'string') {\n      this._activeElement = this.getDocument().querySelector(this.props.defaultTabbableElement) as HTMLElement;\n    }\n\n    if (this.props.shouldFocusOnMount) {\n      this.focus();\n    }\n  }\n\n  componentDidUpdate(): void {\n    if (!this._root.current) {\n      return;\n    }\n    const doc = getDocument(this._root.current);\n\n    if (\n      !this.props.preventFocusRestoration &&\n      doc &&\n      this._lastIndexPath &&\n      (doc.activeElement === doc.body || doc.activeElement === null || doc.activeElement === this._root.current)\n    ) {\n      // The element has been removed after the render, attempt to restore focus.\n      const elementToFocus = getFocusableByIndexPath(this._root.current as HTMLElement, this._lastIndexPath);\n\n      if (elementToFocus) {\n        this.setActiveElement(elementToFocus, true);\n        elementToFocus.focus();\n        this.setParkedFocus(false);\n      } else {\n        // We had a focus path to restore, but now that path is unresolvable. Park focus\n        // on the container until we can try again.\n        this.setParkedFocus(true);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    delete _allInstances[this._id];\n    outerZones.unregister(this.windowElement!, this);\n\n    if (!this._isInnerZone) {\n      if (this.windowElement && !outerZones.getOutZone(this.windowElement)) {\n        this.windowElement.removeEventListener('keydown', _onKeyDownCapture, true);\n      }\n    }\n\n    if (this._root.current) {\n      this._root.current.removeEventListener('blur', this._onBlur, true);\n    }\n\n    this._activeElement = null;\n    this._defaultFocusElement = null;\n  }\n\n  render() {\n    const { className } = this.props;\n\n    const ElementType = getElementType(this.props);\n    const unhandledProps = getUnhandledProps(_.keys(FocusZone.propTypes) as any, this.props);\n\n    // Note, right before rendering/reconciling proceeds, we need to record if focus\n    // was in the zone before the update. This helper will track this and, if focus\n    // was actually in the zone, what the index path to the element is at this time.\n    // Then, later in componentDidUpdate, we can evaluate if we need to restore it in\n    // the case the element was removed.\n    this.evaluateFocusBeforeRender();\n    return (\n      <ElementType\n        {...unhandledProps}\n        ref={this.setRef}\n        className={cx(FocusZone.className, className)}\n        data-focuszone-id={this._id}\n        onKeyDown={this._onKeyDown}\n        onFocus={this._onFocus}\n        onMouseDownCapture={this._onMouseDown}\n      >\n        {this.props.children}\n      </ElementType>\n    );\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._root.current) {\n      if (\n        !forceIntoFirstElement &&\n        this._root.current.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        this._isInnerZone\n      ) {\n        const ownerZoneElement = this.getOwnerZone(this._root.current) as HTMLElement;\n\n        if (ownerZoneElement !== this._root.current) {\n          const ownerZone = _allInstances[ownerZoneElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n\n          return !!ownerZone && ownerZone.focusElement(this._root.current);\n        }\n\n        return false;\n      }\n      if (\n        !forceIntoFirstElement &&\n        this._activeElement &&\n        elementContains(this._root.current, this._activeElement, ALLOW_VIRTUAL_ELEMENTS) &&\n        isElementTabbable(this._activeElement)\n      ) {\n        this._activeElement.focus();\n        return true;\n      }\n\n      const firstChild = this._root.current.firstChild as HTMLElement;\n\n      return this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement);\n    }\n    return false;\n  }\n\n  /**\n   * Sets focus to the last tabbable item in the zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusLast(): boolean {\n    if (this._root.current) {\n      const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n\n      return this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement);\n    }\n\n    return false;\n  }\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * shouldReceiveFocus to create delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param element - The child element within the zone to focus.\n   * @param forceAlignment - If true, focus alignment will be set according to the element provided.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusElement(element: HTMLElement, forceAlignment?: boolean): boolean {\n    const { shouldReceiveFocus } = this.props;\n\n    if (shouldReceiveFocus && !shouldReceiveFocus(element)) {\n      return false;\n    }\n\n    if (element) {\n      this.setActiveElement(element, forceAlignment);\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  setRef = (elem: HTMLElement): void => {\n    this._root.current = elem;\n    handleRef(this.props.innerRef, elem);\n    if (process.env.NODE_ENV !== 'production') {\n      if (elem !== null && !(elem?.nodeType === 1)) {\n        throw new Error(\n          'FocusZone: we expect that ElementType (\"as\" prop) will be a plain element (div, span, etc.) or an element that supports ref forwarding (React.forwardRef())',\n        );\n      }\n    }\n  };\n\n  // Record if focus was in the zone, what the index path to the element is at this time.\n  evaluateFocusBeforeRender(): void {\n    if (!this._root.current) {\n      return;\n    }\n    const doc = getDocument(this._root.current);\n\n    if (!doc) {\n      return;\n    }\n\n    const focusedElement = doc.activeElement as HTMLElement;\n\n    // Only update the index path if we are not parked on the root.\n    if (focusedElement !== this._root.current) {\n      const shouldRestoreFocus = elementContains(this._root.current, focusedElement, ALLOW_VIRTUAL_ELEMENTS);\n\n      this._lastIndexPath = shouldRestoreFocus\n        ? getElementIndexPath(this._root.current as HTMLElement, doc.activeElement as HTMLElement)\n        : undefined;\n    }\n  }\n\n  /**\n   * When focus is in the zone at render time but then all focusable elements are removed,\n   * we \"park\" focus temporarily on the root. Once we update with focusable children, we restore\n   * focus to the closest path from previous. If the user tabs away from the parked container,\n   * we restore focusability to the pre-parked state.\n   */\n  setParkedFocus(isParked: boolean): void {\n    if (this._root.current && this._isParked !== isParked) {\n      this._isParked = isParked;\n\n      if (isParked) {\n        if (!this.props.allowFocusRoot) {\n          this._parkedTabIndex = this._root.current.getAttribute('tabindex');\n          this._root.current.setAttribute('tabindex', '-1');\n        }\n        this._root.current.focus();\n      } else if (!this.props.allowFocusRoot) {\n        if (this._parkedTabIndex) {\n          this._root.current.setAttribute('tabindex', this._parkedTabIndex);\n          this._parkedTabIndex = undefined;\n        } else {\n          this._root.current.removeAttribute('tabindex');\n        }\n      }\n    }\n  }\n\n  _onBlur = () => {\n    this.setParkedFocus(false);\n  };\n\n  _onFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    const {\n      onActiveElementChanged,\n      stopFocusPropagation,\n      shouldFocusInnerElementWhenReceivedFocus,\n      defaultTabbableElement,\n      shouldIgnoreNotFocusable,\n    } = this.props;\n\n    if (shouldIgnoreNotFocusable && ev.target?.dataset.isFocusable === 'false') {\n      return;\n    }\n\n    let newActiveElement: HTMLElement | null | undefined;\n    const isImmediateDescendant = this.isImmediateDescendantOfZone(ev.target as HTMLElement);\n\n    if (isImmediateDescendant) {\n      newActiveElement = ev.target as HTMLElement;\n    } else {\n      let parentElement = ev.target as HTMLElement;\n\n      while (parentElement && parentElement !== this._root.current) {\n        if (isElementTabbable(parentElement) && this.isImmediateDescendantOfZone(parentElement)) {\n          newActiveElement = parentElement;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n      }\n    }\n\n    // If an inner focusable element should be focused when FocusZone container receives focus\n    if (shouldFocusInnerElementWhenReceivedFocus && ev.target === this._root.current) {\n      const maybeElementToFocus =\n        defaultTabbableElement &&\n        typeof defaultTabbableElement === 'function' &&\n        this._root.current &&\n        defaultTabbableElement(this._root.current);\n\n      // try to focus defaultTabbable element\n      if (maybeElementToFocus && isElementTabbable(maybeElementToFocus)) {\n        newActiveElement = maybeElementToFocus;\n        maybeElementToFocus.focus();\n      } else {\n        // force focus on first focusable element\n        this.focus(true);\n        if (this._activeElement) {\n          // set to null as new active element was handled in method above\n\n          newActiveElement = null;\n        }\n      }\n    }\n\n    if (newActiveElement && newActiveElement !== this._activeElement) {\n      this._activeElement = newActiveElement;\n\n      if (isImmediateDescendant) {\n        this.setFocusAlignment(this._activeElement);\n        this.updateTabIndexes();\n      }\n    }\n\n    if (onActiveElementChanged) {\n      onActiveElementChanged(this._activeElement as HTMLElement, ev);\n    }\n\n    if (stopFocusPropagation) {\n      ev.stopPropagation();\n    }\n\n    _.invoke(this.props, 'onFocus', ev);\n  };\n\n  _onMouseDown = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { disabled } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    let target = ev.target as HTMLElement;\n    const path: HTMLElement[] = [];\n\n    while (target && target !== this._root.current) {\n      path.push(target);\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    }\n\n    while (path.length) {\n      target = path.pop() as HTMLElement;\n\n      if (target && isElementTabbable(target)) {\n        this.setActiveElement(target, true);\n      }\n\n      if (isElementFocusZone(target)) {\n        // Stop here since the focus zone will take care of its own children.\n        break;\n      }\n    }\n  };\n\n  setActiveElement(element: HTMLElement, forceAlignment?: boolean): void {\n    const previousActiveElement = this._activeElement;\n\n    this._activeElement = element;\n\n    if (previousActiveElement) {\n      if (isElementFocusZone(previousActiveElement)) {\n        this.updateTabIndexes(previousActiveElement);\n      }\n\n      previousActiveElement.tabIndex = -1;\n    }\n\n    if (this._activeElement) {\n      if (!this._focusAlignment || forceAlignment) {\n        this.setFocusAlignment(element, true, true);\n      }\n\n      this._activeElement.tabIndex = 0;\n    }\n  }\n\n  preventDefaultWhenHandled(ev: React.KeyboardEvent<HTMLElement>): void {\n    this.props.preventDefaultWhenHandled && ev.preventDefault();\n  }\n\n  /**\n   * Handle the keystrokes.\n   */\n  _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean | undefined => {\n    const { direction, disabled, shouldEnterInnerZone, pagingSupportDisabled } = this.props;\n\n    if (disabled) {\n      return undefined;\n    }\n\n    const doc = getDocument(this._root.current);\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // @ts-ignore\n    if (doc.activeElement === this._root.current && this._isInnerZone) {\n      // If this element has focus, it is being controlled by a parent.\n      // Ignore the keystroke.\n      return undefined;\n    }\n\n    // If the default has been prevented, do not process keyboard events.\n    if (ev.isDefaultPrevented()) {\n      return undefined;\n    }\n\n    if (\n      shouldEnterInnerZone &&\n      shouldEnterInnerZone(ev) &&\n      this.isImmediateDescendantOfZone(ev.target as HTMLElement)\n    ) {\n      // Try to focus\n      const innerZone = this.getFirstInnerZone();\n\n      if (innerZone) {\n        if (!innerZone.focus(true)) {\n          return undefined;\n        }\n      } else if (isElementFocusSubZone(ev.target as HTMLElement)) {\n        if (\n          !this.focusElement(\n            getNextElement(\n              ev.target as HTMLElement,\n              (ev.target as HTMLElement).firstChild as HTMLElement,\n              true,\n            ) as HTMLElement,\n          )\n        ) {\n          return undefined;\n        }\n      } else {\n        return undefined;\n      }\n    } else if (ev.altKey) {\n      return undefined;\n    } else {\n      switch (getCode(ev)) {\n        case SpacebarKey:\n          // @ts-ignore\n          if (this.tryInvokeClickForFocusable(ev.target as HTMLElement, ev)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.ArrowLeft:\n          if (direction !== FocusZoneDirection.vertical) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusLeft()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowRight:\n          if (direction !== FocusZoneDirection.vertical) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusRight()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowUp:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusUp()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowDown:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusDown()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.PageDown:\n          if (!pagingSupportDisabled && this.moveFocusPaging(true)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.PageUp:\n          if (!pagingSupportDisabled && this.moveFocusPaging(false)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.Tab:\n          if (\n            this.props.handleTabKey === FocusZoneTabbableElements.all ||\n            (this.props.handleTabKey === FocusZoneTabbableElements.inputOnly &&\n              this.isElementInput(ev.target as HTMLElement))\n          ) {\n            let focusChanged = false;\n            this._processingTabKey = true;\n            if (\n              direction === FocusZoneDirection.vertical ||\n              !this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP)\n            ) {\n              focusChanged = ev.shiftKey ? this.moveFocusUp() : this.moveFocusDown();\n            } else {\n              const tabWithDirection = this.props.isRtl ? !ev.shiftKey : ev.shiftKey;\n              focusChanged = tabWithDirection ? this.moveFocusLeft() : this.moveFocusRight();\n            }\n            this._processingTabKey = false;\n            if (focusChanged) {\n              break;\n            }\n          } else if (this.props.shouldResetActiveElementWhenTabFromZone) {\n            this._activeElement = null;\n          }\n          return undefined;\n\n        case keyboardKey.Home:\n          if (\n            this.isContentEditableElement(ev.target as HTMLElement) ||\n            (this.isElementInput(ev.target as HTMLElement) &&\n              !this.shouldInputLoseFocus(ev.target as HTMLInputElement, false))\n          ) {\n            return false;\n          }\n          const firstChild = this._root.current && (this._root.current.firstChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            firstChild &&\n            this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.End:\n          if (\n            this.isContentEditableElement(ev.target as HTMLElement) ||\n            (this.isElementInput(ev.target as HTMLElement) &&\n              !this.shouldInputLoseFocus(ev.target as HTMLInputElement, false))\n          ) {\n            return false;\n          }\n\n          const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.Enter:\n          // @ts-ignore\n          if (this.tryInvokeClickForFocusable(ev.target as HTMLElement, ev)) {\n            break;\n          }\n          return undefined;\n\n        default:\n          return undefined;\n      }\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    return undefined;\n  };\n\n  /**\n   * Walk up the dom try to find a focusable element.\n   */\n  tryInvokeClickForFocusable(targetElement: HTMLElement, ev?: React.KeyboardEvent<HTMLElement>): boolean {\n    let target = targetElement;\n\n    if (target === this._root.current || !this.props.shouldRaiseClicks) {\n      return false;\n    }\n\n    do {\n      if (\n        target.tagName === 'BUTTON' ||\n        target.tagName === 'A' ||\n        target.tagName === 'INPUT' ||\n        target.tagName === 'TEXTAREA'\n      ) {\n        return false;\n      }\n\n      if (\n        this.isImmediateDescendantOfZone(target) &&\n        target.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        target.getAttribute(IS_ENTER_DISABLED_ATTRIBUTE) !== 'true'\n      ) {\n        _raiseClickFromKeyboardEvent(target, ev);\n        return true;\n      }\n\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    } while (target !== this._root.current);\n\n    return false;\n  }\n\n  /**\n   * Traverse to find first child zone.\n   */\n  getFirstInnerZone(forRootElement?: HTMLElement | null): FocusZone | null {\n    const rootElement = forRootElement || this._activeElement || this._root.current;\n\n    if (!rootElement) {\n      return null;\n    }\n\n    if (isElementFocusZone(rootElement)) {\n      return _allInstances[rootElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n    }\n\n    let child = rootElement.firstElementChild as HTMLElement | null;\n\n    while (child) {\n      if (isElementFocusZone(child)) {\n        return _allInstances[child.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n      }\n      const match = this.getFirstInnerZone(child);\n\n      if (match) {\n        return match;\n      }\n\n      child = child.nextElementSibling as HTMLElement | null;\n    }\n\n    return null;\n  }\n\n  moveFocus(\n    isForward: boolean,\n    getDistanceFromCenter: (activeRect: ClientRect, targetRect: ClientRect) => number,\n    // @ts-ignore\n    ev?: Event,\n    useDefaultWrap: boolean = true,\n  ): boolean {\n    let element = this._activeElement;\n    let candidateDistance = -1;\n    let candidateElement: HTMLElement | undefined = undefined;\n    let changedFocus = false;\n    const isBidirectional = this.props.direction === FocusZoneDirection.bidirectional;\n\n    if (!element || !this._root.current) {\n      return false;\n    }\n\n    if (this.isElementInput(element)) {\n      if (!this.shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n\n    const activeRect = isBidirectional ? element.getBoundingClientRect() : null;\n\n    do {\n      element = (\n        isForward ? getNextElement(this._root.current, element) : getPreviousElement(this._root.current, element)\n      ) as HTMLElement;\n\n      if (isBidirectional) {\n        if (element) {\n          const targetRect = element.getBoundingClientRect();\n          const elementDistance = getDistanceFromCenter(activeRect as ClientRect, targetRect);\n\n          if (elementDistance === -1 && candidateDistance === -1) {\n            candidateElement = element;\n            break;\n          }\n\n          if (elementDistance > -1 && (candidateDistance === -1 || elementDistance < candidateDistance)) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n\n          if (candidateDistance >= 0 && elementDistance < 0) {\n            break;\n          }\n        }\n      } else {\n        candidateElement = element;\n        break;\n      }\n    } while (element);\n\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n\n    return changedFocus;\n  }\n\n  moveFocusDown(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.left;\n\n    if (\n      this.moveFocus(true, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n\n        if (targetRectTop < activeRectBottom) {\n          if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectTop >= activeRectBottom) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusUp(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.left;\n\n    if (\n      this.moveFocus(false, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectTop = Math.floor(activeRect.top);\n\n        if (targetRectBottom > activeRectTop) {\n          if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectBottom <= activeRectTop) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusLeft(): boolean {\n    const shouldWrap = this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this.moveFocus(\n        // @ts-ignore\n        this.props.isRtl,\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (this.props.isRtl) {\n            // When in RTL, this comparison should be the same as the one in moveFocusRight for LTR.\n            // Going left at a leftmost rectangle will go down a line instead of up a line like in LTR.\n            // This is important, because we want to be comparing the top of the target rect\n            // with the bottom of the active rect.\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.right <= activeRect.right &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = activeRect.right - targetRect.right;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /* ev */,\n        shouldWrap,\n      )\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusRight(): boolean {\n    const shouldWrap = this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this.moveFocus(\n        !this.props.isRtl,\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (this.props.isRtl) {\n            // When in RTL, this comparison should be the same as the one in moveFocusLeft for LTR.\n            // Going right at a rightmost rectangle will go up a line instead of down a line like in LTR.\n            // This is important, because we want to be comparing the bottom of the target rect\n            // with the top of the active rect.\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.left >= activeRect.left &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = targetRect.left - activeRect.left;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /* ev */,\n        shouldWrap,\n      )\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  getHorizontalDistanceFromCenter = (isForward: boolean, activeRect: ClientRect, targetRect: ClientRect): number => {\n    const leftAlignment = this._focusAlignment.left;\n    // ClientRect values can be floats that differ by very small fractions of a decimal.\n    // If the difference between top and bottom are within a pixel then we should treat\n    // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n    // but without Math.Floor they will be handled incorrectly.\n    const targetRectTop = Math.floor(targetRect.top);\n    const activeRectBottom = Math.floor(activeRect.bottom);\n    const targetRectBottom = Math.floor(targetRect.bottom);\n    const activeRectTop = Math.floor(activeRect.top);\n    const isValidCandidateOnpagingDown = isForward && targetRectTop > activeRectBottom;\n    const isValidCandidateOnpagingUp = !isForward && targetRectBottom < activeRectTop;\n\n    if (isValidCandidateOnpagingDown || isValidCandidateOnpagingUp) {\n      if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n        return 0;\n      }\n      return Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n    }\n\n    if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n      return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n    }\n    return LARGE_DISTANCE_FROM_CENTER;\n  };\n\n  moveFocusPaging(isForward: boolean, useDefaultWrap: boolean = true): boolean {\n    let element = this._activeElement;\n    if (!element || !this._root.current) {\n      return false;\n    }\n    if (this.isElementInput(element)) {\n      if (!this.shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n    const scrollableParent = findScrollableParent(element);\n    if (!scrollableParent) {\n      return false;\n    }\n    let candidateDistance = -1;\n    let candidateElement = undefined;\n    let targetTop = -1;\n    let targetBottom = -1;\n    const pagesize = (scrollableParent as HTMLElement).clientHeight;\n    const activeRect = element.getBoundingClientRect();\n    do {\n      element = isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element);\n      if (element) {\n        const targetRect = element.getBoundingClientRect();\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const activeRectTop = Math.floor(activeRect.top);\n        const elementDistance = this.getHorizontalDistanceFromCenter(isForward, activeRect, targetRect);\n        const isElementPassedPageSizeOnPagingDown = isForward && targetRectTop > activeRectBottom + pagesize;\n        const isElementPassedPageSizeOnPagingUp = !isForward && targetRectBottom < activeRectTop - pagesize;\n\n        if (isElementPassedPageSizeOnPagingDown || isElementPassedPageSizeOnPagingUp) {\n          break;\n        }\n        if (elementDistance > -1) {\n          // for paging down\n          if (isForward && targetRectTop > targetTop) {\n            targetTop = targetRectTop;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (!isForward && targetRectBottom < targetBottom) {\n            // for paging up\n            targetBottom = targetRectBottom;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (candidateDistance === -1 || elementDistance <= candidateDistance) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n        }\n      }\n    } while (element);\n\n    let changedFocus = false;\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n      this.setFocusAlignment(candidateElement as HTMLElement, false, true);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n    return changedFocus;\n  }\n\n  setFocusAlignment(element: HTMLElement, isHorizontal?: boolean, isVertical?: boolean) {\n    if (\n      this.props.direction === FocusZoneDirection.bidirectional &&\n      (!this._focusAlignment || isHorizontal || isVertical)\n    ) {\n      const rect = element.getBoundingClientRect();\n      const left = rect.left + rect.width / 2;\n      const top = rect.top + rect.height / 2;\n\n      if (!this._focusAlignment) {\n        this._focusAlignment = { left, top };\n      }\n\n      if (isHorizontal) {\n        this._focusAlignment.left = left;\n      }\n\n      if (isVertical) {\n        this._focusAlignment.top = top;\n      }\n    }\n  }\n\n  isImmediateDescendantOfZone(element?: HTMLElement): boolean {\n    return this.getOwnerZone(element) === this._root.current;\n  }\n\n  getOwnerZone(element?: HTMLElement): HTMLElement | null {\n    const doc = getDocument(this._root.current);\n    let parentElement = getParent(element as HTMLElement, ALLOW_VIRTUAL_ELEMENTS);\n\n    // @ts-ignore\n    while (parentElement && parentElement !== this._root.current && parentElement !== doc.body) {\n      if (isElementFocusZone(parentElement)) {\n        return parentElement;\n      }\n\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    return this._root.current;\n  }\n\n  updateTabIndexes(onElement?: HTMLElement) {\n    let element = onElement;\n\n    if (\n      !this._activeElement &&\n      this.props.defaultTabbableElement &&\n      typeof this.props.defaultTabbableElement === 'function'\n    ) {\n      this._activeElement = this.props.defaultTabbableElement(this._root.current as HTMLElement);\n    }\n\n    if (!element && this._root.current) {\n      this._defaultFocusElement = null;\n      element = this._root.current;\n      if (this._activeElement && !elementContains(element, this._activeElement, ALLOW_VIRTUAL_ELEMENTS)) {\n        this._activeElement = null;\n      }\n    }\n\n    // If active element changes state to disabled, set it to null.\n    // Otherwise, we lose keyboard accessibility to other elements in focus zone.\n    if (this._activeElement && !isElementTabbable(this._activeElement)) {\n      this._activeElement = null;\n    }\n\n    const childNodes = element && element.children;\n\n    for (let childIndex = 0; childNodes && childIndex < childNodes.length; childIndex++) {\n      const child = childNodes[childIndex] as HTMLElement;\n\n      if (!isElementFocusZone(child)) {\n        // If the item is explicitly set to not be focusable then TABINDEX needs to be set to -1.\n        if (child.getAttribute && child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'false') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n\n        if (isElementTabbable(child)) {\n          if (this.props.disabled) {\n            child.setAttribute(TABINDEX, '-1');\n          } else if (\n            !this._isInnerZone &&\n            ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n          ) {\n            this._defaultFocusElement = child;\n            if (child.getAttribute(TABINDEX) !== '0') {\n              child.setAttribute(TABINDEX, '0');\n            }\n          } else if (child.getAttribute(TABINDEX) !== '-1') {\n            child.setAttribute(TABINDEX, '-1');\n          }\n        } else if (child.tagName === 'svg' && child.getAttribute('focusable') !== 'false') {\n          // Disgusting IE hack. Sad face.\n          child.setAttribute('focusable', 'false');\n        }\n      } else if (child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true') {\n        if (\n          !this._isInnerZone &&\n          ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n        ) {\n          this._defaultFocusElement = child;\n          if (child.getAttribute(TABINDEX) !== '0') {\n            child.setAttribute(TABINDEX, '0');\n          }\n        } else if (child.getAttribute(TABINDEX) !== '-1') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n      }\n\n      this.updateTabIndexes(child);\n    }\n  }\n\n  isContentEditableElement(element: HTMLElement): boolean {\n    return element && element.getAttribute('contenteditable') === 'true';\n  }\n\n  isElementInput(element: HTMLElement): boolean {\n    if (\n      element &&\n      element.tagName &&\n      (element.tagName.toLowerCase() === 'input' || element.tagName.toLowerCase() === 'textarea')\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  shouldInputLoseFocus(element: HTMLInputElement, isForward?: boolean) {\n    // If a tab was used, we want to focus on the next element.\n    if (\n      !this._processingTabKey &&\n      element &&\n      element.type &&\n      ALLOWED_INPUT_TYPES.indexOf(element.type.toLowerCase()) > -1\n    ) {\n      const selectionStart = element.selectionStart;\n      const selectionEnd = element.selectionEnd;\n      const isRangeSelected = selectionStart !== selectionEnd;\n      const inputValue = element.value;\n      const isReadonly = element.readOnly;\n\n      // We shouldn't lose focus in the following cases:\n      // 1. There is range selected.\n      // 2. When selection start is larger than 0 and it is backward and not readOnly.\n      // 3. when selection start is not the end of length and it is forward and not readOnly.\n      // 4. We press any of the arrow keys when our handleTabKey isn't none or undefined (only losing focus if we hit tab)\n      // and if shouldInputLoseFocusOnArrowKey is defined, if scenario prefers to not loose the focus which is determined by calling the\n      // callback shouldInputLoseFocusOnArrowKey\n      if (\n        isRangeSelected ||\n        (selectionStart! > 0 && !isForward && !isReadonly) ||\n        (selectionStart !== inputValue.length && isForward && !isReadonly) ||\n        (!!this.props.handleTabKey &&\n          !(this.props.shouldInputLoseFocusOnArrowKey && this.props.shouldInputLoseFocusOnArrowKey(element)))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  shouldWrapFocus(\n    element: HTMLElement,\n    noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap',\n  ): boolean {\n    return !!this.props.checkForNoWrap ? shouldWrapFocus(element, noWrapDataAttribute) : true;\n  }\n\n  getDocument(): Document {\n    return getDocument(this._root.current)!;\n  }\n}\n"],"mappings":"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"}