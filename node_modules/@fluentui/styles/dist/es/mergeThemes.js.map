{"version":3,"file":"mergeThemes.js","names":["callable","isEnabled","isDebugEnabled","deepmerge","objectKeyToValues","withDebugId","emptyTheme","siteVariables","fontSizes","componentVariables","componentStyles","fontFaces","staticStyles","animations","mergeComponentStyles__PROD","stylesA","stylesB","result","Object","keys","forEach","partName","slotA","slotB","mergedStyleFunction","styleParam","_merge","mergeComponentStyles__DEV","mergedKeys","concat","slotName","_ref","_ref$_debug","_debug","undefined","styles","_objectWithoutPropertiesLoose","_excluded","assign","debugId","_debugId","_ref2","_ref2$_debug","_excluded2","_slotA","debugA","resolvedStylesA","_excluded3","_slotB","debugB","resolvedStylesB","_excluded4","merged","mergeComponentStyles","process","env","NODE_ENV","mergeComponentVariables__PROD","variablesA","variablesB","mergedComponentVariables","resolvedVariablesA","resolvedVariablesB","mergeComponentVariables__DEV","initial","reduce","acc","next","_acc","_acc$_debug","accumulatedVariables","_excluded5","_ref3","_ref3$_debug","computedDebug","_ref3$_debugId","computedComponentVariables","_excluded6","resolved","input","_invertedKeys","mergeComponentVariables","mergeSiteVariables__PROD","siteVariablesA","siteVariablesB","mergeSiteVariables__DEV","_acc$_debug2","accumulatedSiteVariables","_excluded7","_ref4","_ref4$_debug","_ref4$_invertedKeys","_ref4$_debugId","nextSiteVariables","_excluded8","key","mergeSiteVariables","mergeThemeVariables__PROD","themeComponentVariablesA","themeComponentVariablesB","displayNames","_union","apply","_map","_keys","displayName","fromEntries","entries","map","_ref5","variables","_ref6","mergeThemeVariables__DEV","mergeThemeVariables","mergeThemeStyles__PROD","themeComponentStylesA","themeComponentStylesB","themeComponentStyles","_ref7","_ref8","mergeThemeStyles__DEV","componentStylesA","componentStylesB","_forEach","stylesByPart","mergeThemeStyles","mergeFontFaces","fontFacesA","fontFacesB","mergeStaticStyles","staticStylesA","staticStylesB","mergeAnimations","animationsA","animationsB","mergeStyles","_len","arguments","length","sources","Array","_key","_len2","args","_key2","mergeThemes","themeA","themeB","debugIdA","debugIdB"],"sources":["mergeThemes.ts"],"sourcesContent":["import * as _ from 'lodash';\n\nimport { callable } from './callable';\nimport {\n  ComponentSlotStyle,\n  ComponentSlotStylesInput,\n  ComponentSlotStylesPrepared,\n  ComponentVariablesInput,\n  ComponentVariablesObject,\n  ComponentVariablesPrepared,\n  FontFace,\n  SiteVariablesInput,\n  SiteVariablesPrepared,\n  StaticStyle,\n  ThemeAnimation,\n  ThemeComponentStylesInput,\n  ThemeComponentStylesPrepared,\n  ThemeComponentVariablesInput,\n  ThemeComponentVariablesPrepared,\n  ThemeInput,\n  ThemePrepared,\n} from './types';\n\nimport { isEnabled as isDebugEnabled } from './debugEnabled';\nimport { deepmerge } from './deepmerge';\nimport { objectKeyToValues } from './objectKeysToValues';\nimport { withDebugId } from './withDebugId';\n\nexport const emptyTheme: ThemePrepared = {\n  siteVariables: {\n    fontSizes: {},\n  },\n  componentVariables: {},\n  componentStyles: {},\n  fontFaces: [],\n  staticStyles: [],\n  animations: {},\n};\n\n// ----------------------------------------\n// Component level merge functions\n// ----------------------------------------\n\n/**\n * Merges a single component's styles (keyed by component part) with another component's styles.\n */\nexport const mergeComponentStyles__PROD: typeof mergeComponentStyles = (stylesA, stylesB) => {\n  const result = {};\n\n  if (stylesA) {\n    Object.keys(stylesA).forEach(partName => {\n      const slotA = stylesA[partName];\n      const slotB = stylesB?.[partName];\n\n      // if there is no source, merging is a no-op, skip it\n      if (typeof slotA === 'undefined' || slotA === null) {\n        return;\n      }\n\n      // no target means source doesn't need to merge onto anything\n      // just ensure source is callable (prepared format)\n      if (typeof slotB === 'undefined' || slotB === null) {\n        result[partName] = typeof slotA === 'function' ? slotA : () => slotA;\n        return;\n      }\n\n      if (slotA === slotB) {\n        result[partName] = typeof slotA === 'function' ? slotA : () => slotA;\n      }\n    });\n  }\n\n  if (stylesB) {\n    Object.keys(stylesB).forEach(partName => {\n      const slotA = stylesA?.[partName];\n      const slotB = stylesB[partName];\n\n      // if there is no source, merging is a no-op, skip it\n      if (typeof slotB === 'undefined' || slotB === null) {\n        return;\n      }\n\n      // no target means source doesn't need to merge onto anything\n      // just ensure source is callable (prepared format)\n      if (typeof slotA === 'undefined' || slotA === null) {\n        result[partName] = typeof slotB === 'function' ? slotB : () => slotB;\n        return;\n      }\n\n      if (slotA === slotB) {\n        return;\n      }\n\n      // We have both target and source, replace with merge fn\n      result[partName] = function mergedStyleFunction(styleParam) {\n        // originalTarget is always prepared, fn is guaranteed\n        return _.merge(\n          typeof slotA === 'function' ? slotA(styleParam) : slotA,\n          typeof slotB === 'function' ? slotB(styleParam) : slotB,\n        );\n      };\n    });\n  }\n\n  return result;\n};\n\nexport const mergeComponentStyles__DEV: typeof mergeComponentStyles = (stylesA, stylesB) => {\n  if (!isDebugEnabled) {\n    return mergeComponentStyles__PROD(stylesA, stylesB);\n  }\n\n  const mergedKeys = [...(stylesA ? Object.keys(stylesA) : []), ...(stylesB ? Object.keys(stylesB) : [])];\n  const result = {};\n\n  mergedKeys.forEach(slotName => {\n    const slotA = styleParam => {\n      const { _debug = undefined, ...styles } = callable(stylesA?.[slotName])(styleParam) || {};\n\n      // new object required to prevent circular JSON structure error in <Debug />\n      return {\n        ...styles,\n        _debug: _debug || [{ styles: { ...styles }, debugId: stylesA?._debugId }],\n      };\n    };\n\n    const slotB = styleParam => {\n      const { _debug = undefined, ...styles } = callable(stylesB?.[slotName])(styleParam) || {};\n\n      // new object required to prevent circular JSON structure error in <Debug />\n      return {\n        ...styles,\n        _debug: _debug || [{ styles: { ...styles }, debugId: stylesB?._debugId }],\n      };\n    };\n\n    if (stylesA?.[slotName] && stylesB?.[slotName]) {\n      // We have both, replace with merge fn\n      result[slotName] = styleParam => {\n        // slot* are always prepared, fn is guaranteed, _debug always exists\n        const { _debug: debugA, ...resolvedStylesA } = slotA(styleParam);\n        const { _debug: debugB, ...resolvedStylesB } = slotB(styleParam);\n\n        const merged = _.merge(resolvedStylesA, resolvedStylesB);\n\n        merged._debug = debugA.concat(debugB || { styles: resolvedStylesB, debugId: resolvedStylesB._debugId });\n\n        return merged;\n      };\n    } else if (stylesA?.[slotName]) {\n      result[slotName] = slotA;\n    } else if (stylesB?.[slotName]) {\n      result[slotName] = slotB;\n    }\n  });\n\n  return result;\n};\n\nexport const mergeComponentStyles: (\n  stylesA: ComponentSlotStylesInput | null | undefined,\n  stylesB: ComponentSlotStylesInput | null | undefined,\n) => ComponentSlotStylesPrepared =\n  process.env.NODE_ENV === 'production' ? mergeComponentStyles__PROD : mergeComponentStyles__DEV;\n\n/**\n * Merges a single component's variables with another component's variables.\n */\nexport const mergeComponentVariables__PROD = (\n  variablesA: ComponentVariablesInput | undefined,\n  variablesB: ComponentVariablesInput | undefined,\n): ComponentVariablesPrepared => {\n  if (variablesA && variablesB) {\n    return function mergedComponentVariables(\n      siteVariables: SiteVariablesPrepared | undefined,\n    ): ComponentVariablesObject {\n      const resolvedVariablesA = typeof variablesA === 'function' ? variablesA(siteVariables) : variablesA || {};\n      const resolvedVariablesB = typeof variablesB === 'function' ? variablesB(siteVariables) : variablesB || {};\n\n      return deepmerge(resolvedVariablesA, resolvedVariablesB);\n    };\n  }\n\n  if (variablesA) {\n    return typeof variablesA === 'function' ? variablesA : () => variablesA || {};\n  }\n\n  if (variablesB) {\n    return typeof variablesB === 'function' ? variablesB : () => variablesB || {};\n  }\n\n  return () => ({});\n};\n\nexport const mergeComponentVariables__DEV: typeof mergeComponentVariables__PROD = (\n  variablesA,\n  variablesB,\n): ComponentVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeComponentVariables__PROD(variablesA, variablesB);\n  }\n  const initial = () => ({});\n\n  return [variablesA, variablesB].reduce<ComponentVariablesPrepared>((acc, next) => {\n    return siteVariables => {\n      const { _debug = [], ...accumulatedVariables } = acc(siteVariables);\n      const {\n        _debug: computedDebug = undefined,\n        _debugId = undefined,\n        ...computedComponentVariables\n      } = callable(next)(siteVariables) || {};\n\n      const merged = deepmerge(accumulatedVariables, computedComponentVariables);\n\n      merged._debug = _debug.concat(\n        computedDebug || {\n          resolved: computedComponentVariables,\n          debugId: _debugId,\n          input: siteVariables\n            ? siteVariables._invertedKeys && callable(next)(siteVariables._invertedKeys)\n            : callable(next)(),\n        },\n      );\n      return merged;\n    };\n  }, initial);\n};\n\nexport const mergeComponentVariables =\n  process.env.NODE_ENV === 'production' ? mergeComponentVariables__PROD : mergeComponentVariables__DEV;\n\n// ----------------------------------------\n// Theme level merge functions\n// ----------------------------------------\n\n/**\n * Site variables can safely be merged at each Provider in the tree.\n * They are flat objects and do not depend on render-time values, such as props.\n */\nexport const mergeSiteVariables__PROD = (\n  siteVariablesA: SiteVariablesInput | undefined,\n  siteVariablesB: SiteVariablesInput | undefined,\n): SiteVariablesPrepared => {\n  const initial: SiteVariablesPrepared = {\n    fontSizes: {},\n  };\n\n  if (siteVariablesA && siteVariablesB) {\n    return deepmerge(initial, siteVariablesA, siteVariablesB);\n  }\n\n  if (siteVariablesA) {\n    return { ...initial, ...siteVariablesA };\n  }\n\n  return { ...initial, ...siteVariablesB };\n};\n\nexport const mergeSiteVariables__DEV: typeof mergeSiteVariables__PROD = (\n  siteVariablesA,\n  siteVariablesB,\n): SiteVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeSiteVariables__PROD(siteVariablesA, siteVariablesB);\n  }\n\n  const initial: SiteVariablesPrepared = {\n    fontSizes: {},\n  };\n\n  return [siteVariablesA, siteVariablesB].reduce<SiteVariablesPrepared>((acc, next) => {\n    const { _debug = [], ...accumulatedSiteVariables } = acc;\n    const {\n      _debug: computedDebug = undefined,\n      _invertedKeys = undefined,\n      _debugId = undefined,\n      ...nextSiteVariables\n    } = next || {};\n\n    const merged = deepmerge({ ...accumulatedSiteVariables, _invertedKeys: undefined }, nextSiteVariables);\n    merged._debug = _debug.concat(computedDebug || { resolved: nextSiteVariables, debugId: _debugId });\n    merged._invertedKeys = _invertedKeys || objectKeyToValues(merged, key => `siteVariables.${key}`);\n    return merged;\n  }, initial);\n};\n\nexport const mergeSiteVariables =\n  process.env.NODE_ENV === 'production' ? mergeSiteVariables__PROD : mergeSiteVariables__DEV;\n\n/**\n * Component variables can be objects, functions, or an array of these.\n * The functions must be called with the final result of siteVariables, otherwise\n *   the component variable objects would have no ability to apply siteVariables.\n * Therefore, componentVariables must be resolved by the component at render time.\n * We instead pass down call stack of component variable functions to be resolved later.\n */\n\nexport const mergeThemeVariables__PROD = (\n  themeComponentVariablesA: ThemeComponentVariablesInput | undefined,\n  themeComponentVariablesB: ThemeComponentVariablesInput | undefined,\n): ThemeComponentVariablesPrepared => {\n  if (themeComponentVariablesA && themeComponentVariablesB) {\n    const displayNames = _.union(..._.map([themeComponentVariablesA, themeComponentVariablesB], _.keys));\n\n    return displayNames.reduce((componentVariables, displayName) => {\n      componentVariables[displayName] = mergeComponentVariables(\n        themeComponentVariablesA[displayName],\n        themeComponentVariablesB[displayName],\n      );\n\n      return componentVariables;\n    }, {});\n  }\n\n  if (themeComponentVariablesA) {\n    return Object.fromEntries(\n      Object.entries(themeComponentVariablesA).map(([displayName, variables]) => {\n        return [displayName, mergeComponentVariables(undefined, variables)];\n      }),\n    );\n  }\n\n  if (themeComponentVariablesB) {\n    return Object.fromEntries(\n      Object.entries(themeComponentVariablesB).map(([displayName, variables]) => {\n        return [displayName, mergeComponentVariables(undefined, variables)];\n      }),\n    );\n  }\n\n  return {};\n};\n\nexport const mergeThemeVariables__DEV: typeof mergeThemeVariables__PROD = (\n  themeComponentVariablesA,\n  themeComponentVariablesB,\n) => {\n  if (!isDebugEnabled) {\n    return mergeThemeVariables__PROD(themeComponentVariablesA, themeComponentVariablesB);\n  }\n\n  const displayNames = _.union(..._.map([themeComponentVariablesA, themeComponentVariablesB], _.keys));\n\n  return displayNames.reduce((componentVariables, displayName) => {\n    componentVariables[displayName] = mergeComponentVariables(\n      themeComponentVariablesA && withDebugId(themeComponentVariablesA[displayName], themeComponentVariablesA._debugId),\n      themeComponentVariablesB && withDebugId(themeComponentVariablesB[displayName], themeComponentVariablesB._debugId),\n    );\n    return componentVariables;\n  }, {});\n};\n\nexport const mergeThemeVariables =\n  process.env.NODE_ENV === 'production' ? mergeThemeVariables__PROD : mergeThemeVariables__DEV;\n\n/**\n * See mergeThemeVariables() description.\n * Component styles adhere to the same pattern as component variables, except\n *   that they return style objects.\n */\nconst mergeThemeStyles__PROD = (\n  themeComponentStylesA: ThemeComponentStylesInput | undefined,\n  themeComponentStylesB: ThemeComponentStylesInput | undefined,\n): ThemeComponentStylesPrepared => {\n  if (themeComponentStylesA && themeComponentStylesB) {\n    const displayNames = _.union(..._.map([themeComponentStylesA, themeComponentStylesB], _.keys));\n\n    return displayNames.reduce((themeComponentStyles, displayName) => {\n      themeComponentStyles[displayName] = mergeComponentStyles(\n        themeComponentStylesA[displayName],\n        themeComponentStylesB[displayName],\n      );\n\n      return themeComponentStyles;\n    }, {});\n  }\n\n  if (themeComponentStylesA) {\n    return Object.fromEntries(\n      Object.entries(themeComponentStylesA).map(([displayName, styles]) => {\n        return [displayName, mergeComponentStyles(undefined, styles)];\n      }),\n    );\n  }\n\n  if (themeComponentStylesB) {\n    return Object.fromEntries(\n      Object.entries(themeComponentStylesB).map(([displayName, styles]) => {\n        return [displayName, mergeComponentStyles(undefined, styles)];\n      }),\n    );\n  }\n\n  return {};\n};\n\nconst mergeThemeStyles__DEV: typeof mergeThemeStyles__PROD = (componentStylesA, componentStylesB) => {\n  if (!isDebugEnabled) {\n    return mergeThemeStyles__PROD(componentStylesA, componentStylesB);\n  }\n\n  const initial: ThemeComponentStylesPrepared = {};\n\n  return [componentStylesA, componentStylesB].reduce<ThemeComponentStylesPrepared>((themeComponentStyles, next) => {\n    _.forEach(next, (stylesByPart, displayName) => {\n      themeComponentStyles[displayName] = mergeComponentStyles(\n        themeComponentStyles[displayName],\n        withDebugId(stylesByPart, (next as ThemeComponentStylesPrepared & { _debugId: string })._debugId),\n      );\n    });\n\n    return themeComponentStyles;\n  }, initial);\n};\n\nexport const mergeThemeStyles = process.env.NODE_ENV === 'production' ? mergeThemeStyles__PROD : mergeThemeStyles__DEV;\n\nexport const mergeFontFaces = (fontFacesA: FontFace[] | undefined, fontFacesB: FontFace[] | undefined): FontFace[] => {\n  return [...(fontFacesA || []), ...(fontFacesB || [])];\n};\n\nexport const mergeStaticStyles = (\n  staticStylesA: StaticStyle[] | undefined,\n  staticStylesB: StaticStyle[] | undefined,\n): StaticStyle[] => {\n  return [...(staticStylesA || []), ...(staticStylesB || [])];\n};\n\nexport const mergeAnimations = (\n  animationsA: { [key: string]: ThemeAnimation } | undefined,\n  animationsB: { [key: string]: ThemeAnimation } | undefined,\n): { [key: string]: ThemeAnimation } => {\n  return { ...animationsA, ...animationsB };\n};\n\nexport const mergeStyles = (...sources: ComponentSlotStyle[]) => {\n  return (...args) => {\n    return sources.reduce((acc, next) => {\n      return _.merge(acc, callable(next)(...args));\n    }, {});\n  };\n};\n\nexport const mergeThemes = (\n  themeA: ThemeInput | ThemePrepared | undefined,\n  themeB: ThemeInput | ThemePrepared | undefined,\n): ThemePrepared => {\n  const debugIdA = themeA?.['_debugId'];\n  const debugIdB = themeB?.['_debugId'];\n\n  if (themeA && themeB) {\n    return {\n      animations: mergeAnimations(themeA.animations, themeB.animations),\n      componentVariables: mergeThemeVariables(\n        withDebugId(themeA.componentVariables, debugIdA),\n        withDebugId(themeB.componentVariables, debugIdB),\n      ),\n      componentStyles: mergeThemeStyles(\n        withDebugId(themeA.componentStyles, debugIdA),\n        withDebugId(themeB.componentStyles, debugIdB),\n      ),\n      fontFaces: mergeFontFaces(themeA.fontFaces, themeB.fontFaces),\n      siteVariables: mergeSiteVariables(\n        withDebugId(themeA.siteVariables, debugIdA),\n        withDebugId(themeB.siteVariables, debugIdB),\n      ),\n      staticStyles: mergeStaticStyles(themeA.staticStyles, themeB.staticStyles),\n    };\n  }\n\n  if (themeA) {\n    return {\n      animations: mergeAnimations(undefined, themeA.animations),\n      componentVariables: mergeThemeVariables(undefined, withDebugId(themeA.componentVariables, debugIdA)),\n      componentStyles: mergeThemeStyles(undefined, withDebugId(themeA.componentStyles, debugIdA)),\n      fontFaces: mergeFontFaces(undefined, themeA.fontFaces),\n      siteVariables: mergeSiteVariables(undefined, withDebugId(themeA.siteVariables, debugIdA)),\n      staticStyles: mergeStaticStyles(undefined, themeA.staticStyles),\n    };\n  }\n\n  if (themeB) {\n    return {\n      animations: mergeAnimations(undefined, themeB.animations),\n      componentVariables: mergeThemeVariables(undefined, withDebugId(themeB.componentVariables, debugIdB)),\n      componentStyles: mergeThemeStyles(undefined, withDebugId(themeB.componentStyles, debugIdB)),\n      fontFaces: mergeFontFaces(undefined, themeB.fontFaces),\n      siteVariables: mergeSiteVariables(undefined, withDebugId(themeB.siteVariables, debugIdB)),\n      staticStyles: mergeStaticStyles(undefined, themeB.staticStyles),\n    };\n  }\n\n  return { ...emptyTheme };\n};\n"],"mappings":"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"}