{"version":3,"file":"mergeThemes.js","names":["_callable","require","_debugEnabled","_deepmerge","_objectKeysToValues","_withDebugId","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","_excluded8","emptyTheme","siteVariables","fontSizes","componentVariables","componentStyles","fontFaces","staticStyles","animations","exports","mergeComponentStyles__PROD","stylesA","stylesB","result","Object","keys","forEach","partName","slotA","slotB","mergedStyleFunction","styleParam","_merge2","default","mergeComponentStyles__DEV","isDebugEnabled","mergedKeys","concat","slotName","_ref","callable","_ref$_debug","_debug","undefined","styles","_objectWithoutPropertiesLoose2","assign","debugId","_debugId","_ref2","_ref2$_debug","_slotA","debugA","resolvedStylesA","_slotB","debugB","resolvedStylesB","merged","mergeComponentStyles","process","env","NODE_ENV","mergeComponentVariables__PROD","variablesA","variablesB","mergedComponentVariables","resolvedVariablesA","resolvedVariablesB","deepmerge","mergeComponentVariables__DEV","initial","reduce","acc","next","_acc","_acc$_debug","accumulatedVariables","_ref3","_ref3$_debug","computedDebug","_ref3$_debugId","computedComponentVariables","resolved","input","_invertedKeys","mergeComponentVariables","mergeSiteVariables__PROD","siteVariablesA","siteVariablesB","mergeSiteVariables__DEV","_acc$_debug2","accumulatedSiteVariables","_ref4","_ref4$_debug","_ref4$_invertedKeys","_ref4$_debugId","nextSiteVariables","objectKeyToValues","key","mergeSiteVariables","mergeThemeVariables__PROD","themeComponentVariablesA","themeComponentVariablesB","displayNames","_union2","apply","_map2","_keys2","displayName","fromEntries","entries","map","_ref5","variables","_ref6","mergeThemeVariables__DEV","withDebugId","mergeThemeVariables","mergeThemeStyles__PROD","themeComponentStylesA","themeComponentStylesB","themeComponentStyles","_ref7","_ref8","mergeThemeStyles__DEV","componentStylesA","componentStylesB","_forEach2","stylesByPart","mergeThemeStyles","mergeFontFaces","fontFacesA","fontFacesB","mergeStaticStyles","staticStylesA","staticStylesB","mergeAnimations","animationsA","animationsB","mergeStyles","_len","arguments","length","sources","Array","_key","_len2","args","_key2","mergeThemes","themeA","themeB","debugIdA","debugIdB"],"sources":["mergeThemes.ts"],"sourcesContent":["import * as _ from 'lodash';\n\nimport { callable } from './callable';\nimport {\n  ComponentSlotStyle,\n  ComponentSlotStylesInput,\n  ComponentSlotStylesPrepared,\n  ComponentVariablesInput,\n  ComponentVariablesObject,\n  ComponentVariablesPrepared,\n  FontFace,\n  SiteVariablesInput,\n  SiteVariablesPrepared,\n  StaticStyle,\n  ThemeAnimation,\n  ThemeComponentStylesInput,\n  ThemeComponentStylesPrepared,\n  ThemeComponentVariablesInput,\n  ThemeComponentVariablesPrepared,\n  ThemeInput,\n  ThemePrepared,\n} from './types';\n\nimport { isEnabled as isDebugEnabled } from './debugEnabled';\nimport { deepmerge } from './deepmerge';\nimport { objectKeyToValues } from './objectKeysToValues';\nimport { withDebugId } from './withDebugId';\n\nexport const emptyTheme: ThemePrepared = {\n  siteVariables: {\n    fontSizes: {},\n  },\n  componentVariables: {},\n  componentStyles: {},\n  fontFaces: [],\n  staticStyles: [],\n  animations: {},\n};\n\n// ----------------------------------------\n// Component level merge functions\n// ----------------------------------------\n\n/**\n * Merges a single component's styles (keyed by component part) with another component's styles.\n */\nexport const mergeComponentStyles__PROD: typeof mergeComponentStyles = (stylesA, stylesB) => {\n  const result = {};\n\n  if (stylesA) {\n    Object.keys(stylesA).forEach(partName => {\n      const slotA = stylesA[partName];\n      const slotB = stylesB?.[partName];\n\n      // if there is no source, merging is a no-op, skip it\n      if (typeof slotA === 'undefined' || slotA === null) {\n        return;\n      }\n\n      // no target means source doesn't need to merge onto anything\n      // just ensure source is callable (prepared format)\n      if (typeof slotB === 'undefined' || slotB === null) {\n        result[partName] = typeof slotA === 'function' ? slotA : () => slotA;\n        return;\n      }\n\n      if (slotA === slotB) {\n        result[partName] = typeof slotA === 'function' ? slotA : () => slotA;\n      }\n    });\n  }\n\n  if (stylesB) {\n    Object.keys(stylesB).forEach(partName => {\n      const slotA = stylesA?.[partName];\n      const slotB = stylesB[partName];\n\n      // if there is no source, merging is a no-op, skip it\n      if (typeof slotB === 'undefined' || slotB === null) {\n        return;\n      }\n\n      // no target means source doesn't need to merge onto anything\n      // just ensure source is callable (prepared format)\n      if (typeof slotA === 'undefined' || slotA === null) {\n        result[partName] = typeof slotB === 'function' ? slotB : () => slotB;\n        return;\n      }\n\n      if (slotA === slotB) {\n        return;\n      }\n\n      // We have both target and source, replace with merge fn\n      result[partName] = function mergedStyleFunction(styleParam) {\n        // originalTarget is always prepared, fn is guaranteed\n        return _.merge(\n          typeof slotA === 'function' ? slotA(styleParam) : slotA,\n          typeof slotB === 'function' ? slotB(styleParam) : slotB,\n        );\n      };\n    });\n  }\n\n  return result;\n};\n\nexport const mergeComponentStyles__DEV: typeof mergeComponentStyles = (stylesA, stylesB) => {\n  if (!isDebugEnabled) {\n    return mergeComponentStyles__PROD(stylesA, stylesB);\n  }\n\n  const mergedKeys = [...(stylesA ? Object.keys(stylesA) : []), ...(stylesB ? Object.keys(stylesB) : [])];\n  const result = {};\n\n  mergedKeys.forEach(slotName => {\n    const slotA = styleParam => {\n      const { _debug = undefined, ...styles } = callable(stylesA?.[slotName])(styleParam) || {};\n\n      // new object required to prevent circular JSON structure error in <Debug />\n      return {\n        ...styles,\n        _debug: _debug || [{ styles: { ...styles }, debugId: stylesA?._debugId }],\n      };\n    };\n\n    const slotB = styleParam => {\n      const { _debug = undefined, ...styles } = callable(stylesB?.[slotName])(styleParam) || {};\n\n      // new object required to prevent circular JSON structure error in <Debug />\n      return {\n        ...styles,\n        _debug: _debug || [{ styles: { ...styles }, debugId: stylesB?._debugId }],\n      };\n    };\n\n    if (stylesA?.[slotName] && stylesB?.[slotName]) {\n      // We have both, replace with merge fn\n      result[slotName] = styleParam => {\n        // slot* are always prepared, fn is guaranteed, _debug always exists\n        const { _debug: debugA, ...resolvedStylesA } = slotA(styleParam);\n        const { _debug: debugB, ...resolvedStylesB } = slotB(styleParam);\n\n        const merged = _.merge(resolvedStylesA, resolvedStylesB);\n\n        merged._debug = debugA.concat(debugB || { styles: resolvedStylesB, debugId: resolvedStylesB._debugId });\n\n        return merged;\n      };\n    } else if (stylesA?.[slotName]) {\n      result[slotName] = slotA;\n    } else if (stylesB?.[slotName]) {\n      result[slotName] = slotB;\n    }\n  });\n\n  return result;\n};\n\nexport const mergeComponentStyles: (\n  stylesA: ComponentSlotStylesInput | null | undefined,\n  stylesB: ComponentSlotStylesInput | null | undefined,\n) => ComponentSlotStylesPrepared =\n  process.env.NODE_ENV === 'production' ? mergeComponentStyles__PROD : mergeComponentStyles__DEV;\n\n/**\n * Merges a single component's variables with another component's variables.\n */\nexport const mergeComponentVariables__PROD = (\n  variablesA: ComponentVariablesInput | undefined,\n  variablesB: ComponentVariablesInput | undefined,\n): ComponentVariablesPrepared => {\n  if (variablesA && variablesB) {\n    return function mergedComponentVariables(\n      siteVariables: SiteVariablesPrepared | undefined,\n    ): ComponentVariablesObject {\n      const resolvedVariablesA = typeof variablesA === 'function' ? variablesA(siteVariables) : variablesA || {};\n      const resolvedVariablesB = typeof variablesB === 'function' ? variablesB(siteVariables) : variablesB || {};\n\n      return deepmerge(resolvedVariablesA, resolvedVariablesB);\n    };\n  }\n\n  if (variablesA) {\n    return typeof variablesA === 'function' ? variablesA : () => variablesA || {};\n  }\n\n  if (variablesB) {\n    return typeof variablesB === 'function' ? variablesB : () => variablesB || {};\n  }\n\n  return () => ({});\n};\n\nexport const mergeComponentVariables__DEV: typeof mergeComponentVariables__PROD = (\n  variablesA,\n  variablesB,\n): ComponentVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeComponentVariables__PROD(variablesA, variablesB);\n  }\n  const initial = () => ({});\n\n  return [variablesA, variablesB].reduce<ComponentVariablesPrepared>((acc, next) => {\n    return siteVariables => {\n      const { _debug = [], ...accumulatedVariables } = acc(siteVariables);\n      const {\n        _debug: computedDebug = undefined,\n        _debugId = undefined,\n        ...computedComponentVariables\n      } = callable(next)(siteVariables) || {};\n\n      const merged = deepmerge(accumulatedVariables, computedComponentVariables);\n\n      merged._debug = _debug.concat(\n        computedDebug || {\n          resolved: computedComponentVariables,\n          debugId: _debugId,\n          input: siteVariables\n            ? siteVariables._invertedKeys && callable(next)(siteVariables._invertedKeys)\n            : callable(next)(),\n        },\n      );\n      return merged;\n    };\n  }, initial);\n};\n\nexport const mergeComponentVariables =\n  process.env.NODE_ENV === 'production' ? mergeComponentVariables__PROD : mergeComponentVariables__DEV;\n\n// ----------------------------------------\n// Theme level merge functions\n// ----------------------------------------\n\n/**\n * Site variables can safely be merged at each Provider in the tree.\n * They are flat objects and do not depend on render-time values, such as props.\n */\nexport const mergeSiteVariables__PROD = (\n  siteVariablesA: SiteVariablesInput | undefined,\n  siteVariablesB: SiteVariablesInput | undefined,\n): SiteVariablesPrepared => {\n  const initial: SiteVariablesPrepared = {\n    fontSizes: {},\n  };\n\n  if (siteVariablesA && siteVariablesB) {\n    return deepmerge(initial, siteVariablesA, siteVariablesB);\n  }\n\n  if (siteVariablesA) {\n    return { ...initial, ...siteVariablesA };\n  }\n\n  return { ...initial, ...siteVariablesB };\n};\n\nexport const mergeSiteVariables__DEV: typeof mergeSiteVariables__PROD = (\n  siteVariablesA,\n  siteVariablesB,\n): SiteVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeSiteVariables__PROD(siteVariablesA, siteVariablesB);\n  }\n\n  const initial: SiteVariablesPrepared = {\n    fontSizes: {},\n  };\n\n  return [siteVariablesA, siteVariablesB].reduce<SiteVariablesPrepared>((acc, next) => {\n    const { _debug = [], ...accumulatedSiteVariables } = acc;\n    const {\n      _debug: computedDebug = undefined,\n      _invertedKeys = undefined,\n      _debugId = undefined,\n      ...nextSiteVariables\n    } = next || {};\n\n    const merged = deepmerge({ ...accumulatedSiteVariables, _invertedKeys: undefined }, nextSiteVariables);\n    merged._debug = _debug.concat(computedDebug || { resolved: nextSiteVariables, debugId: _debugId });\n    merged._invertedKeys = _invertedKeys || objectKeyToValues(merged, key => `siteVariables.${key}`);\n    return merged;\n  }, initial);\n};\n\nexport const mergeSiteVariables =\n  process.env.NODE_ENV === 'production' ? mergeSiteVariables__PROD : mergeSiteVariables__DEV;\n\n/**\n * Component variables can be objects, functions, or an array of these.\n * The functions must be called with the final result of siteVariables, otherwise\n *   the component variable objects would have no ability to apply siteVariables.\n * Therefore, componentVariables must be resolved by the component at render time.\n * We instead pass down call stack of component variable functions to be resolved later.\n */\n\nexport const mergeThemeVariables__PROD = (\n  themeComponentVariablesA: ThemeComponentVariablesInput | undefined,\n  themeComponentVariablesB: ThemeComponentVariablesInput | undefined,\n): ThemeComponentVariablesPrepared => {\n  if (themeComponentVariablesA && themeComponentVariablesB) {\n    const displayNames = _.union(..._.map([themeComponentVariablesA, themeComponentVariablesB], _.keys));\n\n    return displayNames.reduce((componentVariables, displayName) => {\n      componentVariables[displayName] = mergeComponentVariables(\n        themeComponentVariablesA[displayName],\n        themeComponentVariablesB[displayName],\n      );\n\n      return componentVariables;\n    }, {});\n  }\n\n  if (themeComponentVariablesA) {\n    return Object.fromEntries(\n      Object.entries(themeComponentVariablesA).map(([displayName, variables]) => {\n        return [displayName, mergeComponentVariables(undefined, variables)];\n      }),\n    );\n  }\n\n  if (themeComponentVariablesB) {\n    return Object.fromEntries(\n      Object.entries(themeComponentVariablesB).map(([displayName, variables]) => {\n        return [displayName, mergeComponentVariables(undefined, variables)];\n      }),\n    );\n  }\n\n  return {};\n};\n\nexport const mergeThemeVariables__DEV: typeof mergeThemeVariables__PROD = (\n  themeComponentVariablesA,\n  themeComponentVariablesB,\n) => {\n  if (!isDebugEnabled) {\n    return mergeThemeVariables__PROD(themeComponentVariablesA, themeComponentVariablesB);\n  }\n\n  const displayNames = _.union(..._.map([themeComponentVariablesA, themeComponentVariablesB], _.keys));\n\n  return displayNames.reduce((componentVariables, displayName) => {\n    componentVariables[displayName] = mergeComponentVariables(\n      themeComponentVariablesA && withDebugId(themeComponentVariablesA[displayName], themeComponentVariablesA._debugId),\n      themeComponentVariablesB && withDebugId(themeComponentVariablesB[displayName], themeComponentVariablesB._debugId),\n    );\n    return componentVariables;\n  }, {});\n};\n\nexport const mergeThemeVariables =\n  process.env.NODE_ENV === 'production' ? mergeThemeVariables__PROD : mergeThemeVariables__DEV;\n\n/**\n * See mergeThemeVariables() description.\n * Component styles adhere to the same pattern as component variables, except\n *   that they return style objects.\n */\nconst mergeThemeStyles__PROD = (\n  themeComponentStylesA: ThemeComponentStylesInput | undefined,\n  themeComponentStylesB: ThemeComponentStylesInput | undefined,\n): ThemeComponentStylesPrepared => {\n  if (themeComponentStylesA && themeComponentStylesB) {\n    const displayNames = _.union(..._.map([themeComponentStylesA, themeComponentStylesB], _.keys));\n\n    return displayNames.reduce((themeComponentStyles, displayName) => {\n      themeComponentStyles[displayName] = mergeComponentStyles(\n        themeComponentStylesA[displayName],\n        themeComponentStylesB[displayName],\n      );\n\n      return themeComponentStyles;\n    }, {});\n  }\n\n  if (themeComponentStylesA) {\n    return Object.fromEntries(\n      Object.entries(themeComponentStylesA).map(([displayName, styles]) => {\n        return [displayName, mergeComponentStyles(undefined, styles)];\n      }),\n    );\n  }\n\n  if (themeComponentStylesB) {\n    return Object.fromEntries(\n      Object.entries(themeComponentStylesB).map(([displayName, styles]) => {\n        return [displayName, mergeComponentStyles(undefined, styles)];\n      }),\n    );\n  }\n\n  return {};\n};\n\nconst mergeThemeStyles__DEV: typeof mergeThemeStyles__PROD = (componentStylesA, componentStylesB) => {\n  if (!isDebugEnabled) {\n    return mergeThemeStyles__PROD(componentStylesA, componentStylesB);\n  }\n\n  const initial: ThemeComponentStylesPrepared = {};\n\n  return [componentStylesA, componentStylesB].reduce<ThemeComponentStylesPrepared>((themeComponentStyles, next) => {\n    _.forEach(next, (stylesByPart, displayName) => {\n      themeComponentStyles[displayName] = mergeComponentStyles(\n        themeComponentStyles[displayName],\n        withDebugId(stylesByPart, (next as ThemeComponentStylesPrepared & { _debugId: string })._debugId),\n      );\n    });\n\n    return themeComponentStyles;\n  }, initial);\n};\n\nexport const mergeThemeStyles = process.env.NODE_ENV === 'production' ? mergeThemeStyles__PROD : mergeThemeStyles__DEV;\n\nexport const mergeFontFaces = (fontFacesA: FontFace[] | undefined, fontFacesB: FontFace[] | undefined): FontFace[] => {\n  return [...(fontFacesA || []), ...(fontFacesB || [])];\n};\n\nexport const mergeStaticStyles = (\n  staticStylesA: StaticStyle[] | undefined,\n  staticStylesB: StaticStyle[] | undefined,\n): StaticStyle[] => {\n  return [...(staticStylesA || []), ...(staticStylesB || [])];\n};\n\nexport const mergeAnimations = (\n  animationsA: { [key: string]: ThemeAnimation } | undefined,\n  animationsB: { [key: string]: ThemeAnimation } | undefined,\n): { [key: string]: ThemeAnimation } => {\n  return { ...animationsA, ...animationsB };\n};\n\nexport const mergeStyles = (...sources: ComponentSlotStyle[]) => {\n  return (...args) => {\n    return sources.reduce((acc, next) => {\n      return _.merge(acc, callable(next)(...args));\n    }, {});\n  };\n};\n\nexport const mergeThemes = (\n  themeA: ThemeInput | ThemePrepared | undefined,\n  themeB: ThemeInput | ThemePrepared | undefined,\n): ThemePrepared => {\n  const debugIdA = themeA?.['_debugId'];\n  const debugIdB = themeB?.['_debugId'];\n\n  if (themeA && themeB) {\n    return {\n      animations: mergeAnimations(themeA.animations, themeB.animations),\n      componentVariables: mergeThemeVariables(\n        withDebugId(themeA.componentVariables, debugIdA),\n        withDebugId(themeB.componentVariables, debugIdB),\n      ),\n      componentStyles: mergeThemeStyles(\n        withDebugId(themeA.componentStyles, debugIdA),\n        withDebugId(themeB.componentStyles, debugIdB),\n      ),\n      fontFaces: mergeFontFaces(themeA.fontFaces, themeB.fontFaces),\n      siteVariables: mergeSiteVariables(\n        withDebugId(themeA.siteVariables, debugIdA),\n        withDebugId(themeB.siteVariables, debugIdB),\n      ),\n      staticStyles: mergeStaticStyles(themeA.staticStyles, themeB.staticStyles),\n    };\n  }\n\n  if (themeA) {\n    return {\n      animations: mergeAnimations(undefined, themeA.animations),\n      componentVariables: mergeThemeVariables(undefined, withDebugId(themeA.componentVariables, debugIdA)),\n      componentStyles: mergeThemeStyles(undefined, withDebugId(themeA.componentStyles, debugIdA)),\n      fontFaces: mergeFontFaces(undefined, themeA.fontFaces),\n      siteVariables: mergeSiteVariables(undefined, withDebugId(themeA.siteVariables, debugIdA)),\n      staticStyles: mergeStaticStyles(undefined, themeA.staticStyles),\n    };\n  }\n\n  if (themeB) {\n    return {\n      animations: mergeAnimations(undefined, themeB.animations),\n      componentVariables: mergeThemeVariables(undefined, withDebugId(themeB.componentVariables, debugIdB)),\n      componentStyles: mergeThemeStyles(undefined, withDebugId(themeB.componentStyles, debugIdB)),\n      fontFaces: mergeFontFaces(undefined, themeB.fontFaces),\n      siteVariables: mergeSiteVariables(undefined, withDebugId(themeB.siteVariables, debugIdB)),\n      staticStyles: mergeStaticStyles(undefined, themeB.staticStyles),\n    };\n  }\n\n  return { ...emptyTheme };\n};\n"],"mappings":"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"}