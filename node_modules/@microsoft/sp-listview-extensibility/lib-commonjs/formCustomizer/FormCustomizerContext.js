"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var sp_extension_base_1 = require("@microsoft/sp-extension-base");
/**
 * Form Customizer Context. This object contains contxtual services and properties for the form.
 *
 * @public
 */
var FormCustomizerContext = /** @class */ (function (_super) {
    tslib_1.__extends(FormCustomizerContext, _super);
    function FormCustomizerContext(extensionContextParameters, formCustomizerContextParameters) {
        var _this = _super.call(this, extensionContextParameters) || this;
        _this._list = formCustomizerContextParameters.list;
        _this._contentType = formCustomizerContextParameters.contentType;
        _this._folderInfo = formCustomizerContextParameters.folderInfo;
        _this._itemId = formCustomizerContextParameters.itemId;
        _this._item = formCustomizerContextParameters.item;
        _this._domElement = formCustomizerContextParameters.domElement;
        _this._formCustomizerHost = formCustomizerContextParameters.host;
        return _this;
    }
    Object.defineProperty(FormCustomizerContext.prototype, "list", {
        /**
         * The list associated with the form.
         */
        get: function () {
            return this._list;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FormCustomizerContext.prototype, "contentType", {
        /**
         * The content type associated with the form.
         */
        get: function () {
            return this._contentType;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FormCustomizerContext.prototype, "folderInfo", {
        /**
         * The folder information where the item is located/should be created.
         */
        get: function () {
            return this._folderInfo;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FormCustomizerContext.prototype, "itemId", {
        /**
         * The item id of the item being edited or viewed.
         */
        get: function () {
            return this._itemId;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FormCustomizerContext.prototype, "item", {
        /**
         * The item data of the item being edited or viewed.
         */
        get: function () {
            return this._item;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FormCustomizerContext.prototype, "domElement", {
        /**
         * The root DOM element of the form. This is a DIV element container for the custom form.
         */
        get: function () {
            return this._domElement;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FormCustomizerContext.prototype, "_host", {
        /**
         * Form host to interact with the host application.
         *
         * @internal
         */
        get: function () {
            return this._formCustomizerHost;
        },
        enumerable: false,
        configurable: true
    });
    return FormCustomizerContext;
}(sp_extension_base_1.ExtensionContext));
exports.default = FormCustomizerContext;
//# sourceMappingURL=FormCustomizerContext.js.map