/**
 * SharePoint Framework developer support for customizing search.
 *
 * @packagedocumentation
 */

import { BaseExtension } from '@microsoft/sp-extension-base';
import { ExtensionContext } from '@microsoft/sp-extension-base';
import { ServiceScope } from '@microsoft/sp-core-library';

/**
 * This is the base class that third parties should extend when implementing
 * a client-side extension that can modify the search query.
 *
 * In the component manifest, the "extensionType" should be set to "SearchQueryModifier".
 *
 * @public
 */
export declare abstract class BaseSearchQueryModifier<TProperties> extends BaseExtension<TProperties> {
    /**
     * {@inheritDoc @microsoft/sp-component-base#BaseComponent.context}
     */
    protected readonly context: SearchQueryModifierContext;
    /**
     * Timeout for the search query modifier in milliseconds.
     * If the execution takes longer than the timeout, the original query will be used instead of the modified one.
     *
     * @virtual
     */
    get timeout(): number;
    /**
     * Returns a modified search query.
     *
     * @param query - Query to modify.
     * @param scenario - Search scenario.
     * @returns - Modified query.
     *
     * @virtual
     */
    modifySearchQuery(query: IQuery, scenario: SearchQueryScenario): Promise<IQuery>;
}

/* Excluded from this release type: _IPreloadedCustomAction */

/**
 * Query object. Includes the query text that will be used for search and exposed through dynamic data.
 *
 * @remarks
 * Additional properties can be added to the object to pass data between extensions.
 *
 * @public
 */
export declare interface IQuery {
    /**
     * Text of the query.
     */
    queryText: string;
    /**
     * Query text that the user provided.
     */
    originalQueryText: string;
}

/* Excluded from this release type: _ISearchQueryExtensionManager */

/* Excluded from this release type: _SearchQueryExtensionManager */

/**
 * Context for the search query modifier extensions.
 *
 * @public
 */
export declare class SearchQueryModifierContext extends ExtensionContext {
}

/**
 * Scenario for the search query modifier.
 *
 * @public
 */
export declare enum SearchQueryScenario {
    /**
     * Search results scenario.
     */
    SearchResults = 1,
    /**
     * Search suggestions scenario.
     */
    SearchSuggestions = 2
}

export { }
